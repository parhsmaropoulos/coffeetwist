{"version":3,"sources":["utils/axiosHeaders.js","actions/actions.js","actions/messages.js","actions/items.js","components/Sections/Create/CreateItemForm.js","components/Sections/Create/CreateCategoryForm.js","components/Sections/Create/CreateChoiceForm.js","components/Sections/Create/CreateIngredientForm.js","components/Sections/Create/CreateForm.js","components/Sections/Create/CreateOptionsData.js","components/Sections/Create/CreatePage.js","components/Sections/Admin/Stats/StatsPage.js","actions/orders.js","components/Sections/View/Products/ItemsComponent.js","components/Sections/View/Ingredients/IngredientsComponent.js","components/Sections/View/Choices/ChoicesComponent.js","components/Sections/View/ItemsPage.js","components/Sections/Home/HomePage.js","components/NotUsing/users/AllUsersPage.js","components/Modals/OrderItemModal.js","actions/snackbar.js","components/Sections/Order/OrderMainPage.js","actions/user.js","components/Sections/Users/MainPage.js","components/Sections/View/Products/SingleItemPage.js","components/Modals/AddressModal.js","components/Layout/Marker.js","components/Modals/EditAddressModal.js","components/Sections/Order/PreCompleteOrderPage.js","assets/Images/transparent-logo.png","components/Layout/Header.js","components/Layout/Footer.js","components/Modals/LogRegModal.js","components/Sections/Users/UserOrders.js","components/Sections/Users/UserAddress.js","components/Sections/Users/UserRatings.js","components/Sections/Admin/Common/tabs.js","components/Sections/Admin/Components/Sidebar.js","components/Sections/Admin/Components/InnerSidebarCatalog.js","components/Sections/Admin/Components/ProductCatalog.js","components/Sections/Admin/Components/IngredientsCatalog.js","actions/comments.js","components/Sections/Admin/Components/CommentsCatalog.js","components/Sections/Admin/Orders/OrderProductsRow.js","components/Sections/Admin/Common/PrintComponent.js","components/Sections/Admin/Orders/OrderUserDetailsRow.js","components/Sections/Admin/Orders/OrdersCatalog.js","components/Sections/Admin/Components/RightContainer.js","components/Sections/Admin/AdminMainPage.js","components/Sections/View/Ingredients/SingleIngredientPage.js","components/Sections/Common/PrivateRoute.js","components/Logging/SnackBars/SuccessSnackbar.js","components/Logging/SnackBars/InfoSnackbar.js","components/Logging/SnackBars/ErrorSnackbar.js","components/Layout/NotFound.js","components/Sections/View/Choices/SingleChoicePage.js","components/Sections/Common/TextPage.js","components/Sections/Admin/Comments/AllComents.js","components/App.js","reportWebVitals.js","reducers/productReducer.js","reducers/userReducer.js","reducers/orderReducer.js","reducers/errors.js","reducers/uiReducer.js","reducers/webSocketReducer.js","reducers/adminReducer.js","reducers/index.js","store.js","index.js"],"names":["headers","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","USER_LOADED","USER_LOADING","UPDATE_USER","GET_USER","SUBSCRIBE_USER","UNSUBSCRIBE_USER","GET_COMMENTS","COMMENT_ANSWERED","REJECT_COMMENT","APPROVE_COMMENT","GET_ERRORS","GET_MESSAGE","ADD_ALERT","REMOVE_ALERT","SNACKBAR_SUCCESS","SNACKBAR_ERROR","SNACKBAR_INFO","SNACKBAR_CLEAR","GET_ITEMS","GET_CATEGORIES","GET_INGREDIENTS","GET_CHOICES","CREATE_ITEM","CREATE_CATEGORY","CREATE_INGREDIENT","CREATE_CHOICE","DELETE_PRODUCT","DELETE_CATEGORY","DELETE_INGREDIENT","UPDATE_INGREDIENT","UPDATE_ITEM","SEND_ORDER","GET_ORDER","ACCEPT_ORDER","COMPLETE_ORDER","ORDER_ACCEPTED","ORDER_DECLINED","TODAY_ORDERS","CLEAR_REDUCER","ADD_ITEM","UPDATE_CART","UPDATE_ORDER","EMPTY_CART","CREATE_ROOM_SUCCESS","JOIN_ROOM_SUCCESS","SET_USERNAME","returnErrors","msg","status","type","payload","response","statusText","message","data","get_items","dispatch","axios","get","then","res","products","catch","err","console","log","update_item","id","product","reason","body","put","new_item","get_categories","categories","get_ingredients","ingredients","update_ingredient","ingredient","new_ingredient","get_choices","choices","update_choice","choice","delete_item","delete","deleted_product","deleted_category","delete_ingredient","delete_choice","GetAsyncItems","a","resp","GetAsyncCategories","CreateItemForm","props","handleToggle","value","currentIndex","state","extra_ingredients","indexOf","newChecked","push","splice","setState","handleAvailableToggle","available_ingredients","handleChoiceToggle","checkedChoices","onChange","e","target","name","onFileChange","Resizer","imageFileResizer","files","uri","source","image","filename","price","category","description","hasIngredients","showChoices","isCustom","bind","onSubmit","onChangeCheck","onCustomChange","preventDefault","this","event","item","parseFloat","slice","custom","i","in_cat","avail_ingredients","j","includes","create_product","document","getElementById","style","display","Form","Group","controlId","Label","Control","placeholder","required","step","autoComplete","as","length","map","index","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","labelId","role","undefined","dense","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","File","label","FormControlLabel","control","color","className","subhead","ingredientCategory","ListSubheader","Container","Row","Col","xs","md","Image","src","rounded","Button","variant","Component","connect","isAuthenticated","userReducer","productReducer","FormData","append","JSON","stringify","post","new_product","new_category","new_cat","CreateCategoryForm","show","create_category","marginTop","CreateChoiceForm","removeOption","options","filter","s","sindex","handleShow","handleClose","handleSaveOption","option","optionName","optionPrice","prevState","desctription","multiple","onSumbit","create_choice","opt","key","Modal","onHide","Header","closeButton","Title","Body","placeholer","Footer","CreateIngredientForm","showNewCat","bool","create_ingredient","ingredientCategories","CreateForm","param","renderSwitch","CreateOptionsData","CreatePage","selectedOption","changeOption","isReady","StatsPage","sendMessage","comment","order","from","awaiting","chatHistory","accepted","eventSource","EventSource","match","params","parse","commnet","String","onmessage","recieveOrder","TextField","rows","multiline","send_order","getState","SSEdata","user_details","token","sessionStorage","getItem","config","Authorization","user_id","ItemsComponent","selectedCategory","product_ids","changeCategory","categoryName","user_Id","Table","bordered","striped","Check","defaultChecked","available","changeAvailabilityIngredient","to","pathname","changeAvailability","order_accepted","orderReducer","order_sent","sent","IngredientsComponent","categoryIndex","ingredient_categories","ChoicesComponent","selectedChoice","ItemsPage","location","HomePage","address","showAddressModal","uuidv4","minHeight","AllUsersPage","users","OrderItemModal","newPrice","extraPrice","onChangeChoice","choiceName","currentOptions","oldPrice","found","exists","old_option","newOption","onClose","quantity","changeQuantity","loaded","item_available_ingredients","onAdd","update","updateItem","totalPrice","optionAnswers","onUpdate","extraIngredients","text","open","Paper","elevation","Grid","container","Divider","indx","Typography","update_option","direction","htmlFor","width","textAlgin","textAlign","disabled","IconButton","aria-label","fontSize","grouped","grouped_ingredients","_","require","groupBy","showErrorSnackbar","clearSnackbar","OrderMainPage","cart","selectedItem","itemToUpdate","showModal","modalToUpdate","indexToUpdate","pathToImages","showAlert","alertMessage","continueOrder","showInfoSnackbar","updateCart","order_item","cart_","newTotalPrice","addToCart","removeFromCart","idex","close","item_","cat_","cur_cart","cur_item","price_per_unit","cartTotalPrice","showSearchResults","textContent","clearCart","update_cart","searchParam","categroy","modal","cat","alertModal","ListGroup","categ","selected","Item","active","Autocomplete","getOptionLabel","disableClearable","renderOption","noWrap","renderInput","InputProps","Card","border","sm","Img","Subtitle","join","Text","backgroundColor","justify","textDecoration","cursor","CircularProgress","disableShrink","total_price","new_order","updateUser","getUser","MainPage","email","surname","phone","newPassword","newPassword2","onUpdateSubmit","onChangePasswordSubmit","hasLoaded","user","password","Navbar","Nav","pattern","SingleItemPage","onDelete","placehodler","defaultValue","AddressModal","handleChange","handleSelect","geocodeByAddress","results","saveResults","getLatLng","latLng","latitude","lat","longitude","lng","error","opts","address_components","formatted_address","addressName","long_name","addressNumber","short_name","areaName","zipCode","showEditModal","cityName","completeAddress","showErrorModal","errorMessage","onAddAddress","area_name","address_name","address_number","zipcode","editAddress","stopPropagation","displayModal","closeModal","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","Marker","title","EditAddressModal","center","zoom","updateAddress","addr","addressname","addressnumber","areaname","address_id","height","defaultCenter","defaultZoom","eventHandlers","draggable","availableTipOptions","PreCompleteOrderPage","handlePaymentChange","payWithCard","payWithCash","payWithPaypal","payment_type","selectAddressModal","showadd","showedit","selectedAddress","sendOrder","delivery_type","deliveryOption","pre_discount_price","tips","comments","bell_name","userDetails","bellName","floor","validateFields","mobilePhoneRegex","RegExp","homePhoneRegex","test","onSelectChange","onAddressChange","addresses","availableAddress","orderStatus","timeToDelivery","send","handleTipsChange","tip","time","last_order","newDetails","last","Bell_name","Floor","Phone","pending","clearReducer","addAddressModal","editAddressModal","showAdd","showEdit","recieved","FormControl","InputLabel","Select","MenuItem","FormLabel","FormGroup","row","toString","prod","secondary","empty_cart","selectedLangeuage","searchText","focus","lang","logout","autheticated","refreshToken","refresh_token","fluid","logo","Toggle","aria-controls","NavDropdown","onChangeLang","marginLeft","Dropdown","Menu","logOut","Link","userID","jwt","access_token","onSubscribe","newsletterEmail","innerHTML","subscribe","url","helperText","FormHelperText","LogRegModal","onChangeTab","selectedTab","checkPasswords","reg_password","reg_password2","visibility","ready","showError","onSubmitRegister","login","register","LoadisLoadingng","autoFocus","Tabs","activeKey","k","Tab","eventKey","margin","eleveation","errorModal","errorReducer","UserOrders","showCommentModal","selectedOrder","commentOrder","order_id","comment_text","user_name","rating","rate","update_order","comment_order_ids","comment_ids","commentModal","authenticated","cols","Box","mb","borderColor","Rating","precision","emptyIcon","orders","date","Date","create_at","getDate","getMonth","getFullYear","UserAdress","selectEditAddressModal","info","showEditAddressModal","showRemoveAddressDialog","removeAddress","removeAddressdialog","hover","dispaly","UserRatings","tabs","orderTabs","shopTabs","useStyles","makeStyles","theme","root","flexWrap","spacing","paperSection","list","listTitle","fontWeight","listText","arrowButtonGrid","flexDirection","alignItems","Sidebar","classes","tab","orderCategories","maxHeight","overflowY","InnerSidebarCatalog","onCategoryChange","ProductCatalog","useDispatch","TableHead","TableRow","TableCell","align","TableBody","Switch","update_prod","IngredientsCatalog","update_ingre","approve_comment","reject_comment","CommentsCatalog","useState","setOpen","selected_id","setID","answer","created_at","answered","startIcon","approved","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","fullWidth","DialogActions","listItem","borderBottom","innerText","leftText","rightText","productRow","marginBottom","OrderProductsRow","op_index","innerListItem","Choice","PrintComponent","Fragment","Name","Surname","Address","city_name","printButton","buttonsPaper","printPaper","acceptButton","marginRight","rejectButton","compleButton","timeOptions","OrderUserDetailsRow","changeTime","componentRef","useRef","ID","addressItem","userDetailsItem","trigger","content","current","ref","select","time_input","parseInt","data_2","delivery_time","accepted_id","canceled","completed_id","orderRow","padding","OrdersCatalog","pending_orders","accepted_orders","finished_orders","GridItem","RightContainer","selectedCat","selectedIngreCat","selectedIngredientCategory","changeIngredientCategory","AdminMainPage","changeTab","selected_tab","selected_time","get_order","newOrders","ord","adminReducer","orders_loaded_today","get_today_orders","get_comments","SingleIngredientPage","PrivateRoute","rest","render","Alert","SuccessSnackbar","useSelector","uiReducer","successSnackbarMessage","successSnackbarOpen","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","InfoSnackbar","infoSnackbarMessage","infoSnackbarOpen","ErrorSnackbar","errorSnackbarMessage","errorSnackbarOpen","NotFound","SingleChoicePage","TextPage","AllComments","App","path","exact","AllComents","UserAddress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","action","newItems","indexOfItemToUpdate","delete_product","delete_category","ingred","newIngredients","indexOfIngredientToUpdate_outer","indexOfIngredientToUpdate_inner","isLoading","setItem","removeItem","newProducts","initialState","alerts","room","chatLog","username","webSocketReducer","newComments","newComments_r","newAnswerComments","newPendingOrders","newAcceptedOrders","newCompletedOrders","newTodayOrders","completed","rootReducer","combineReducers","alert","CreateStore","middleware","thunk","createStore","composeWithDevTools","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","store"],"mappings":"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","file":"static/js/main.290c3ff5.chunk.js","sourcesContent":["export const headers = {\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n","/**\r\n * Containts all the constant action names\r\n * for the reducers of the app.\r\n */\r\n\r\n/**\r\n * User reducer constants\r\n */\r\n// REGISTER\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\n\r\n// LOGIN/LOGOUT\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\n\r\n// USER\r\nexport const USER_LOADED = \"USER_LOADED\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const GET_USERS = \"GET_USERS\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const SUBSCRIBE_USER = \"SUBSCRIBE_USER\";\r\nexport const UNSUBSCRIBE_USER = \"UNSUBSCRIBE_USER\";\r\n\r\n// COMMENTS\r\nexport const GET_COMMENTS = \"GET_COMMENTS\";\r\nexport const COMMENT_ANSWERED = \"COMMENT_ANSWERED\";\r\nexport const REJECT_COMMENT = \"REJECT_COMMENT\";\r\nexport const APPROVE_COMMENT = \"APPROVE_COMMENT\";\r\n\r\n/**\r\n * Error reducer constans\r\n */\r\n\r\n// ERRORS\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const CREATE_MESSAGE = \"CREATE_MESSAGE\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const GET_MESSAGE = \"GET_MESSAGE\";\r\nexport const ADD_ALERT = \"ADD_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\n\r\n// SNACKBARS\r\nexport const SNACKBAR_SUCCESS = \"SNACKBAR_SUCCESS\";\r\nexport const SNACKBAR_ERROR = \"SNACKBAR_ERROR\";\r\nexport const SNACKBAR_INFO = \"SNACKBAR_INFO\";\r\nexport const SNACKBAR_CLEAR = \"SNACKBAR_CLEAR\";\r\n\r\n/**\r\n * Product reducer constans\r\n */\r\n\r\n// PRODUCTS - CATEGORIES - INGREDIENTS - CHOICES\r\nexport const GET_ITEMS = \"GET_ITEMS\";\r\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\r\nexport const GET_INGREDIENTS = \"GET_INGREDIENTS\";\r\nexport const GET_CHOICES = \"GET_CHOICES\";\r\n\r\nexport const CREATE_ITEM = \"CREATE_ITEM\";\r\nexport const CREATE_CATEGORY = \"CREATE_CATEGORY\";\r\nexport const CREATE_INGREDIENT = \"CREATE_INGREDIENT\";\r\nexport const CREATE_CHOICE = \"CREATE_CHOICES\";\r\n\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\nexport const DELETE_INGREDIENT = \"DELETE_INGREDIENT\";\r\nexport const DELETE_CHOICE = \"DELETE_CHOICE\";\r\n\r\nexport const CHANGE_AVAILABILITY = \"CHANGE_AVAILABILITY\";\r\n\r\nexport const UPDATE_INGREDIENT = \"UPDATE_INGREDIENT\";\r\nexport const UPDATE_ITEM = \"UPDATE_ITEM\";\r\nexport const UPDATE_CHOICE = \"UPDATE_CHOICE\";\r\n\r\n/**\r\n * Order reducer constants\r\n */\r\n\r\n// ORDERS\r\nexport const SEND_ORDER = \"SEND_ORDER\";\r\nexport const GET_ORDER = \"GET_ORDER\";\r\nexport const ACCEPT_ORDER = \"ACCEPT_ORDER\";\r\nexport const REJECT_ORDER = \"REJECT_ORDER\";\r\nexport const COMPLETE_ORDER = \"COMPLETE_ORDER\";\r\nexport const ORDER_ACCEPTED = \"ORDER_ACCEPTED\";\r\nexport const ORDER_DECLINED = \"ORDER_DECLINED\";\r\nexport const TODAY_ORDERS = \"TODAY_ORDERS\";\r\nexport const CLEAR_REDUCER = \"CLEAR_REDUCER\";\r\n\r\n// CART-CURRENT ORDER\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\r\nexport const UPDATE_CART = \"UPDATE_CART\";\r\nexport const UPDATE_ORDER = \"UPDATE_ORDER\";\r\nexport const EMPTY_CART = \"EMPTY_CART\";\r\n\r\n/**\r\n * Web socket reducer constants\r\n */\r\n\r\n// WEB-SOCKET\r\nexport const SEND_ORDER_REQUEST = \"SEND_ORDER_REQUEST\";\r\nexport const UPDATE_ORDER_STATUS = \"UPDATE_ORDER_STATUS\";\r\n\r\nexport const SEND_MESSAGE_REQUEST = \"SEND_MESSAGE_REQUEST\";\r\nexport const UPDATE_CHAT_LOG = \"UPDATE_CHAT_LOG\";\r\n\r\nexport const CREATE_ROOM_REQUEST = \"CREATE_ROOM_REQUEST\";\r\nexport const CREATE_ROOM_SUCCESS = \"CREATE_ROOM_SUCCESS\";\r\nexport const CREATE_ROOM_ERROR = \"CREATE_ROOM_ERROR\";\r\n\r\nexport const JOIN_ROOM_REQUEST = \"JOIN_ROOM_REQUEST\";\r\nexport const JOIN_ROOM_SUCCESS = \"JOIN_ROOM_SUCCESS\";\r\nexport const JOIN_ROOM_ERROR = \"JOIN_ROOM_ERROR\";\r\n\r\nexport const SET_USERNAME = \"SET_USERNAME\";\r\n","/**\r\n * Here are the action that are called through the app and redux\r\n * about error and their functionalities.\r\n * First every action performs a request and then\r\n * depending on the response there is an event dispatch\r\n */\r\n\r\n/**\r\n * IMPORTS\r\n */\r\n\r\nimport { uniqueId } from \"lodash\";\r\nimport {\r\n  ADD_ALERT,\r\n  CREATE_MESSAGE,\r\n  GET_ERRORS,\r\n  GET_MESSAGE,\r\n  REMOVE_ALERT,\r\n} from \"./actions\";\r\n\r\n// CREATE MESSAGE\r\nexport const createMessage = (msg) => {\r\n  return {\r\n    type: CREATE_MESSAGE,\r\n    payload: msg,\r\n  };\r\n};\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status) => {\r\n  return {\r\n    type: GET_ERRORS,\r\n    payload: { msg, status },\r\n    status: msg.response.status,\r\n    statusText: msg.response.statusText,\r\n    message: msg.response.data.message,\r\n  };\r\n};\r\n\r\nexport const getMessage = (msg) => {\r\n  return {\r\n    type: GET_MESSAGE,\r\n    message: msg,\r\n  };\r\n};\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uniqueId();\r\n  dispatch({\r\n    type: ADD_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n\r\n  setTimeout(\r\n    () =>\r\n      dispatch({\r\n        type: REMOVE_ALERT,\r\n        payload: id,\r\n      }),\r\n    timeout\r\n  );\r\n};\r\n","/**\r\n * Here are the action that are called through the app and redux\r\n * about items and their functionalities.\r\n * First every action performs a request and then\r\n * depending on the response there is an event dispatch\r\n */\r\n\r\n/**\r\n * IMPORTS\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { headers } from \"../utils/axiosHeaders\";\r\nimport {\r\n  CREATE_CATEGORY,\r\n  CREATE_CHOICE,\r\n  CREATE_INGREDIENT,\r\n  CREATE_ITEM,\r\n  DELETE_CATEGORY,\r\n  DELETE_CHOICE,\r\n  DELETE_INGREDIENT,\r\n  DELETE_PRODUCT,\r\n  GET_CATEGORIES,\r\n  GET_CHOICES,\r\n  GET_INGREDIENTS,\r\n  GET_ITEMS,\r\n  SNACKBAR_ERROR,\r\n  SNACKBAR_SUCCESS,\r\n  UPDATE_INGREDIENT,\r\n  UPDATE_ITEM,\r\n  UPDATE_CHOICE,\r\n} from \"./actions\";\r\nimport { returnErrors } from \"./messages\";\r\n\r\n/**\r\n * ITEM ACTIONS\r\n */\r\n\r\n// GET ALL ITEMS\r\nexport const get_items = () => (dispatch) => {\r\n  axios\r\n    .get(\"http://localhost:8080/products/all\")\r\n    .then((res) => {\r\n      // console.log(res);\r\n      dispatch({\r\n        type: GET_ITEMS,\r\n        products: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Products fetched successfully!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n      dispatch(returnErrors(err, err.status));\r\n    });\r\n};\r\n\r\n// CREATE PRODUCT\r\nexport const create_product = (data, image) => (dispatch) => {\r\n  // const body = data;\r\n  let body = new FormData();\r\n  body.append(\"file\", image);\r\n  body.append(\"data\", JSON.stringify(data));\r\n  const headers = {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  };\r\n\r\n  axios\r\n    .post(\"http://localhost:8080/products/create_product\", body, headers)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: CREATE_ITEM,\r\n        new_product: res.data.data,\r\n        new_category: res.data.new_cat,\r\n      });\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"product created successfully\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Update an item\r\nexport const update_item = (id, product, reason) => (dispatch) => {\r\n  const body = {\r\n    id: id,\r\n    product: product,\r\n    reason: reason,\r\n  };\r\n  console.log(body);\r\n  axios\r\n    .put(`http://localhost:8080/products/update`, body, headers)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: UPDATE_ITEM,\r\n        new_item: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"item updated successfully\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      // dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n/**\r\n * CATEGORY ACTIONS\r\n */\r\n\r\n// GET ALL CATEGORIES\r\nexport const get_categories = () => (dispatch) => {\r\n  axios\r\n    .get(\"http://localhost:8080/product_category/all\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_CATEGORIES,\r\n        categories: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Categories fetched successfully!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// CREATE A CATEGOY\r\nexport const create_category = (data, image) => (dispatch) => {\r\n  let body = new FormData();\r\n  body.append(\"file\", image);\r\n  body.append(\"data\", JSON.stringify(data));\r\n  const headers = {\r\n    \"Content-Type\": \"multipart/form-data\",\r\n  };\r\n  axios\r\n    .post(\r\n      \"http://localhost:8080/product_category/create_product_category\",\r\n      body,\r\n      headers\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: CREATE_CATEGORY,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Category created successfully!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n/**\r\n * INGREDIENTS ACTIONS\r\n */\r\n\r\n// GET ALL INGREDIENTS\r\nexport const get_ingredients = () => (dispatch) => {\r\n  axios\r\n    .get(\"http://localhost:8080/products/ingredients\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: GET_INGREDIENTS,\r\n        ingredients: res.data.data,\r\n        categories: res.data.categories,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Ingredients fetched successfully!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// CREATE INGREDIENT\r\nexport const create_ingredient = (data) => (dispatch) => {\r\n  const body = data;\r\n  axios\r\n    .post(\r\n      \"http://localhost:8080/products/create_product_ingredient\",\r\n      body,\r\n      headers\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: CREATE_INGREDIENT,\r\n        new_ingredient: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Ingredient created successfully\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Update an Ingredient\r\nexport const update_ingredient = (id, ingredient, reason) => (dispatch) => {\r\n  const body = {\r\n    id: id,\r\n    ingredient: ingredient,\r\n    reason: reason,\r\n  };\r\n  axios\r\n    .put(\"http://localhost:8080/products/update_ingredient\", body, headers)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: UPDATE_INGREDIENT,\r\n        new_ingredient: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Ingredient updated successfully\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n/**\r\n * CHOICES ACTIONS\r\n */\r\n\r\n// GET ALL CHOICES\r\nexport const get_choices = () => (dispatch) => {\r\n  axios\r\n    .get(\"http://localhost:8080/products/choices\")\r\n    .then((res) => {\r\n      // console.log(res);\r\n      dispatch({\r\n        type: GET_CHOICES,\r\n        choices: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Choices fetched successfully!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// CREATE A CHOICE\r\nexport const create_choice = (data) => (dispatch) => {\r\n  const body = data;\r\n  axios\r\n    .post(\"http://localhost:8080/products/create_product_choice\", body, headers)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: CREATE_CHOICE,\r\n        choice: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Choice created successfully\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Update a choice\r\nexport const update_choice = (id, choice) => (dispatch) => {\r\n  const body = {\r\n    id: id,\r\n    choice: choice,\r\n  };\r\n  axios\r\n    .put(`http://localhost:8080/products/update_choice`, body, headers)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: UPDATE_CHOICE,\r\n        new_item: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Choice updated successfully\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      // dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Delete an item, here an item\r\n// can be either a Product,Category,Choice,Ingredient\r\nexport const delete_item = (id, type) => (dispatch) => {\r\n  const body = {\r\n    id: id,\r\n    type: type,\r\n  };\r\n  switch (body.type) {\r\n    case \"product\":\r\n      console.log(\"here\");\r\n      axios\r\n        .delete(`http://localhost:8080/products/product/${id}`, headers)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: DELETE_PRODUCT,\r\n            deleted_product: res.data.data,\r\n          });\r\n          dispatch({\r\n            type: SNACKBAR_SUCCESS,\r\n            message: \"Item deleted successfully\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          dispatch(returnErrors(err, err.status));\r\n          dispatch({\r\n            type: SNACKBAR_ERROR,\r\n            message: err.response.data.message,\r\n          });\r\n        });\r\n      return;\r\n    case \"category\":\r\n      console.log(\"here\");\r\n      axios\r\n        .delete(`http://localhost:8080/product_category/delete/${id}`, headers)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: DELETE_CATEGORY,\r\n            deleted_category: res.data.data,\r\n          });\r\n          dispatch({\r\n            type: SNACKBAR_SUCCESS,\r\n            message: \"Category deleted successfully\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          dispatch(returnErrors(err, err.status));\r\n          dispatch({\r\n            type: SNACKBAR_ERROR,\r\n            message: err.response.data.message,\r\n          });\r\n        });\r\n      return;\r\n    case \"ingredient\":\r\n      axios\r\n        .delete(`http://localhost:8080/products/ingredient/${id}`, headers)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: DELETE_INGREDIENT,\r\n            delete_ingredient: res.data.data,\r\n          });\r\n          dispatch({\r\n            type: SNACKBAR_SUCCESS,\r\n            message: \"Ingredient deleted successfully\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          dispatch(returnErrors(err, err.status));\r\n          dispatch({\r\n            type: SNACKBAR_ERROR,\r\n            message: err.response.data.message,\r\n          });\r\n        });\r\n      return;\r\n    case \"choice\":\r\n      console.log(\"here\");\r\n      axios\r\n        .delete(`http://localhost:8080/products/choice/${id}`, headers)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: DELETE_CHOICE,\r\n            delete_choice: res.data.data,\r\n          });\r\n          dispatch({\r\n            type: SNACKBAR_SUCCESS,\r\n            message: \"Choice deleted successfully\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          dispatch(returnErrors(err, err.status));\r\n          dispatch({\r\n            type: SNACKBAR_ERROR,\r\n            message: err.response.data.message,\r\n          });\r\n        });\r\n      return;\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\n// ################# ASYNC METHODS ##################\r\n\r\nexport const GetAsyncItems = async () => {\r\n  try {\r\n    const resp = await axios.get(\"http://localhost:8080/products/all\");\r\n    return resp.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const GetAsyncCategories = async () => {\r\n  try {\r\n    const resp = await axios.get(\r\n      \"http://localhost:8080/product_categories/all\"\r\n    );\r\n    return resp.data;\r\n  } catch (err) {\r\n    console.log(err);\r\n    return err;\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Container, Image, Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { create_product } from \"../../../actions/items\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { Collapse, FormControlLabel, ListSubheader } from \"@material-ui/core\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nclass CreateItemForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      price: 0,\r\n      category: \"Kafedes\",\r\n      description: \"\",\r\n      filename: \"Choose product image *\",\r\n      source: \"\",\r\n      image: null,\r\n      extra_ingredients: [\"\"],\r\n      available_ingredients: [\"\"],\r\n      checkedChoices: [-1],\r\n      hasIngredients: false,\r\n      showChoices: false,\r\n      isCustom: false,\r\n      choices: [],\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChangeCheck = this.onChangeCheck.bind(this);\r\n    this.onCustomChange = this.onCustomChange.bind(this);\r\n    this.showChoices = this.showChoices.bind(this);\r\n  }\r\n\r\n  showChoices(e) {\r\n    e.preventDefault();\r\n    this.setState({ showChoices: !this.state.showChoices });\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    create_product: PropTypes.func.isRequired,\r\n    ingredients: PropTypes.array.isRequired,\r\n    choices: PropTypes.array.isRequired,\r\n  };\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const item = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      price: parseFloat(this.state.price),\r\n      category: this.state.category,\r\n      ingredients: this.state.extra_ingredients.slice(1),\r\n      extra_ingredients: [],\r\n      choices: this.state.choices,\r\n      custom: this.state.isCustom,\r\n    };\r\n    for (var i in this.state.checkedChoices) {\r\n      if (this.state.checkedChoices[i] !== -1) {\r\n        item.choices.push(this.props.choices[this.state.checkedChoices[i]]);\r\n      }\r\n    }\r\n    let in_cat = this.props.ingredients;\r\n    let avail_ingredients = this.state.available_ingredients;\r\n    for (i in in_cat) {\r\n      for (var j in in_cat[i]) {\r\n        if (avail_ingredients.includes(in_cat[i][j].name)) {\r\n          item.extra_ingredients.push(in_cat[i][j]);\r\n        }\r\n      }\r\n    }\r\n    // console.log(item.choices);\r\n    const image = this.state.image;\r\n    console.log(item);\r\n    this.props.create_product(item, image);\r\n    this.setState({\r\n      name: \"\",\r\n      price: 0,\r\n      category: \"Kafedes\",\r\n      description: \"\",\r\n      filename: \"Choose product image *\",\r\n      source: \"\",\r\n      image: null,\r\n      extra_ingredients: [\"\"],\r\n      checkedChoices: [-1],\r\n      hasIngredients: false,\r\n      showChoices: false,\r\n      isCustom: false,\r\n      choices: [],\r\n    });\r\n  }\r\n\r\n  handleToggle = (value) => {\r\n    const currentIndex = this.state.extra_ingredients.indexOf(value);\r\n    const newChecked = [...this.state.extra_ingredients];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      extra_ingredients: newChecked,\r\n    });\r\n  };\r\n\r\n  handleAvailableToggle = (value) => {\r\n    const currentIndex = this.state.available_ingredients.indexOf(value);\r\n    const newChecked = [...this.state.available_ingredients];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      available_ingredients: newChecked,\r\n    });\r\n  };\r\n\r\n  handleChoiceToggle = (choice) => {\r\n    const currentIndex = this.state.checkedChoices.indexOf(choice);\r\n    const newChecked = [...this.state.checkedChoices];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(choice);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      checkedChoices: newChecked,\r\n    });\r\n    console.log(newChecked);\r\n  };\r\n\r\n  onChangeCheck() {\r\n    this.setState({ hasIngredients: !this.state.hasIngredients });\r\n    if (document.getElementById(\"ingredient-list\").style.display === \"block\") {\r\n      document.getElementById(\"ingredient-list\").style.display = \"none\";\r\n    } else {\r\n      document.getElementById(\"ingredient-list\").style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  onCustomChange() {\r\n    this.setState({ isCustom: !this.state.isCustom });\r\n    if (\r\n      document.getElementById(\"available-ingredient-list\").style.display ===\r\n      \"block\"\r\n    ) {\r\n      document.getElementById(\"available-ingredient-list\").style.display =\r\n        \"none\";\r\n    } else {\r\n      document.getElementById(\"available-ingredient-list\").style.display =\r\n        \"block\";\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onFileChange = (e) => {\r\n    // console.log(e.target.files);\r\n    try {\r\n      Resizer.imageFileResizer(\r\n        e.target.files[0],\r\n        300,\r\n        300,\r\n        \"JPEG\",\r\n        100,\r\n        0,\r\n        (uri) => {\r\n          this.setState({\r\n            source: uri,\r\n          });\r\n        },\r\n        \"base64\",\r\n        200,\r\n        200\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    this.setState({\r\n      image: e.target.files[0],\r\n      filename: e.target.files[0].name,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    // console.log(this.props.ingredients);\r\n    // console.log(this.state);\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Item Name *</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Item description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter desc\"\r\n            name=\"description\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"price\">\r\n          <Form.Label>Item price *</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            autoComplete=\"false\"\r\n            placeholder=\"Enter price\"\r\n            name=\"price\"\r\n            onChange={this.onChange}\r\n            required\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"category\">\r\n          <Form.Label>Category *</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"category\"\r\n            onChange={this.onChange}\r\n            required\r\n          >\r\n            {this.props.categories.length > 0 ? (\r\n              this.props.categories.map((category, index) => {\r\n                return <option key={index}>{category.name}</option>;\r\n              })\r\n            ) : (\r\n              <option key=\"0\">No categories yet</option>\r\n            )}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"choices\">\r\n          <ListItem button onClick={this.showChoices}>\r\n            <ListItemText primary=\"Select choices\" />\r\n            {this.state.showChoices ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={this.state.showChoices} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {this.props.choices.map((choice, index) => {\r\n                const labelId = `choice-item-${choice.name}`;\r\n                return (\r\n                  <ListItem\r\n                    key={index}\r\n                    role={undefined}\r\n                    dense\r\n                    button\r\n                    onClick={() => this.handleChoiceToggle(index)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        checked={\r\n                          this.state.checkedChoices.indexOf(index) !== -1\r\n                        }\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        inputProps={{ \"aria-labelledby\": labelId }}\r\n                      />\r\n                      <ListItemText id={labelId} primary={`${choice.name}`} />\r\n                    </ListItemIcon>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Collapse>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image\">\r\n          <Form.File\r\n            id=\"custom-file\"\r\n            label={this.state.filename}\r\n            custom\r\n            onChange={this.onFileChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"customProduct\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={this.state.isCustom}\r\n                onChange={this.onCustomChange}\r\n                name=\"isCustom\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Is product custom?\"\r\n          />\r\n          <List\r\n            style={{ display: \"none\" }}\r\n            className=\"create-item-ingredient-list\"\r\n            id=\"available-ingredient-list\"\r\n            subhead={<li />}\r\n          >\r\n            {this.props.ingredients.map((ingredientCategory, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <ul>\r\n                    <ListSubheader>{`${ingredientCategory[0].category}`}</ListSubheader>\r\n                    {ingredientCategory.map((ingredient, index) => {\r\n                      const labelId = `ingredient-item-${ingredient.name}`;\r\n                      return (\r\n                        <ListItem\r\n                          key={index}\r\n                          role={undefined}\r\n                          dense\r\n                          button\r\n                          onClick={() =>\r\n                            this.handleAvailableToggle(ingredient.name)\r\n                          }\r\n                        >\r\n                          <ListItemIcon>\r\n                            <Checkbox\r\n                              edge=\"start\"\r\n                              checked={\r\n                                this.state.available_ingredients.indexOf(\r\n                                  ingredient.name\r\n                                ) !== -1\r\n                              }\r\n                              tabIndex={-1}\r\n                              disableRipple\r\n                              inputProps={{ \"aria-labelledby\": labelId }}\r\n                            />\r\n                            <ListItemText\r\n                              id={labelId}\r\n                              primary={`${ingredient.name}`}\r\n                            />\r\n                          </ListItemIcon>\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </li>\r\n              );\r\n            })}\r\n          </List>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"ingredients\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={this.state.hasIngredients}\r\n                onChange={this.onChangeCheck}\r\n                name=\"hasIngredients\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Has ingredients\"\r\n          />\r\n          <List\r\n            style={{ display: \"none\" }}\r\n            className=\"create-item-ingredient-list\"\r\n            id=\"ingredient-list\"\r\n            subhead={<li />}\r\n          >\r\n            {this.props.ingredients.map((ingredientCategory, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <ul>\r\n                    <ListSubheader>{`${ingredientCategory[0].category}`}</ListSubheader>\r\n                    {ingredientCategory.map((ingredient, index) => {\r\n                      const labelId = `ingredient-item-${ingredient.name}`;\r\n                      return (\r\n                        <ListItem\r\n                          key={index}\r\n                          role={undefined}\r\n                          dense\r\n                          button\r\n                          onClick={() => this.handleToggle(ingredient.name)}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <Checkbox\r\n                              edge=\"start\"\r\n                              checked={\r\n                                this.state.extra_ingredients.indexOf(\r\n                                  ingredient.name\r\n                                ) !== -1\r\n                              }\r\n                              tabIndex={-1}\r\n                              disableRipple\r\n                              inputProps={{ \"aria-labelledby\": labelId }}\r\n                            />\r\n                            <ListItemText\r\n                              id={labelId}\r\n                              primary={`${ingredient.name}`}\r\n                            />\r\n                          </ListItemIcon>\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </li>\r\n              );\r\n            })}\r\n          </List>\r\n        </Form.Group>\r\n        <Container>\r\n          <Row>\r\n            <Col xs={6} md={4}>\r\n              <Image id=\"preview-image\" src={this.state.source} rounded />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  ingredients: state.productReducer.ingredients,\r\n  choices: state.productReducer.choices,\r\n});\r\nexport default connect(mapStateToProps, { create_product })(CreateItemForm);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { create_category } from \"../../../actions/items\";\r\nimport PropTypes from \"prop-types\";\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\nclass CreateCategoryForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      filename: \"Choose category image *\",\r\n      description: \"\",\r\n      show: false,\r\n      image: null,\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    create_category: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onFileChange = (e) => {\r\n    // console.log(e.target.files);\r\n    try {\r\n      Resizer.imageFileResizer(\r\n        e.target.files[0],\r\n        300,\r\n        300,\r\n        \"JPEG\",\r\n        100,\r\n        0,\r\n        (uri) => {\r\n          this.setState({\r\n            source: uri,\r\n          });\r\n        },\r\n        \"base64\",\r\n        200,\r\n        200\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    this.setState({\r\n      image: e.target.files[0],\r\n      filename: e.target.files[0].name,\r\n    });\r\n  };\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const category = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n    };\r\n    const image = this.state.image;\r\n    // console.log(category);\r\n    this.props.create_category(category, image);\r\n    this.setState({\r\n      name: \"\",\r\n      filename: \"Choose category image *\",\r\n      description: \"\",\r\n      show: false,\r\n      image: null,\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Category Name *</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            required\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Category description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter desc\"\r\n            name=\"description\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image\">\r\n          <Form.File\r\n            id=\"custom-file\"\r\n            label={this.state.filename}\r\n            custom\r\n            onChange={this.onFileChange}\r\n          />\r\n        </Form.Group>\r\n        <Container>\r\n          <Row>\r\n            <Col xs={6} md={4}>\r\n              <Image id=\"preview-image\" src={this.state.source} rounded />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Button type=\"submit\" style={{ marginTop: 15 }}>\r\n          Create Category\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  // categories: state.productReducer.categories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { create_category })(\r\n  CreateCategoryForm\r\n);\r\n","import { Checkbox, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Form, Modal, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { create_choice } from \"../../../actions/items\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CreateChoiceForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      desctription: \"\",\r\n      options: [],\r\n      optionName: \"\",\r\n      optionPrice: 0,\r\n      show: false,\r\n      multiple: false,\r\n      required: false,\r\n    };\r\n    this.removeOption = this.removeOption.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleSaveOption = this.handleSaveOption.bind(this);\r\n    this.onSumbit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    create_choice: PropTypes.func.isRequired,\r\n  };\r\n\r\n  removeOption = (index) => {\r\n    this.setState({\r\n      options: this.state.options.filter((s, sindex) => sindex !== index),\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleShow = () => {\r\n    console.log(\"open\");\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleSaveOption = () => {\r\n    const option = {\r\n      name: this.state.optionName,\r\n      price: parseFloat(this.state.optionPrice),\r\n    };\r\n    this.setState((prevState) => ({\r\n      options: [...prevState.options, option],\r\n    }));\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const choice = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      required: this.state.required,\r\n      multiple: this.state.multiple,\r\n      options: this.state.options,\r\n    };\r\n    console.log(choice);\r\n    this.props.create_choice(choice);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CreateChoiceForm\">\r\n        <Form onSubmit={this.onSumbit}>\r\n          <Form.Group controlId=\"choiceName\">\r\n            <Form.Label>Choice Name</Form.Label>\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              required\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"choiceDesc\">\r\n            <Form.Label>Choice Description</Form.Label>\r\n            <Form.Control\r\n              name=\"description\"\r\n              type=\"text\"\r\n              placeholder=\"Enter description\"\r\n              required\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"choiceMultiple\">\r\n            <Form.Label>Multiple</Form.Label>\r\n            <Checkbox\r\n              checked={this.state.multiple}\r\n              onChange={(e) =>\r\n                this.setState({ multiple: !this.state.multiple })\r\n              }\r\n              color=\"primary\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"choiceRequired\">\r\n            <Form.Label>Required</Form.Label>\r\n            <Checkbox\r\n              checked={this.state.required}\r\n              onChange={(e) =>\r\n                this.setState({ required: !this.state.required })\r\n              }\r\n              color=\"primary\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Label>Choice Options</Form.Label>\r\n          <Form.Group controlId=\"choiceOptions\">\r\n            <List dense>\r\n              {this.state.options.map((opt, key) => {\r\n                return (\r\n                  <ListItem key={key}>\r\n                    <ListItemText primary={`${opt.name} : ${opt.price}`} />{\" \"}\r\n                    <Button onClick={() => this.removeOption(key)}>X</Button>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Button variant=\"primary\" onClick={this.handleShow}>\r\n              Add option\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Save choice\r\n            </Button>\r\n          </Form.Row>\r\n        </Form>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Option Values</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md={6}>\r\n                <Form.Label>Value</Form.Label>\r\n                <Form.Control\r\n                  id=\"optionName\"\r\n                  name=\"optionName\"\r\n                  type=\"text\"\r\n                  placeholer=\"enter name\"\r\n                  onChange={this.onChange}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md={6}>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  id=\"optionPrice\"\r\n                  name=\"optionPrice\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  placeholer=\"enter price\"\r\n                  onChange={this.onChange}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleSaveOption}>\r\n              Save Option\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { create_choice })(CreateChoiceForm);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { create_ingredient } from \"../../../actions/items\";\r\nimport \"../../../css/Pages/createpage.css\";\r\n\r\nclass CreateIngredientForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      price: 0,\r\n      description: \"\",\r\n      category: \"\",\r\n      display: \"none\",\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    create_ingredient: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.categories);\r\n    this.setState({\r\n      category: this.props.categories[0],\r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const ingredient = {\r\n      name: this.state.name,\r\n      price: parseFloat(this.state.price),\r\n      description: this.state.description,\r\n      category: this.state.category,\r\n    };\r\n    this.props.create_ingredient(ingredient);\r\n    this.setState({\r\n      name: \"\",\r\n      price: 0,\r\n      description: \"\",\r\n      category: \"\",\r\n      display: \"none\",\r\n    });\r\n  }\r\n  showNewCat = (bool) => {\r\n    if (bool) {\r\n      this.setState({\r\n        display: \"block\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        display: \"none\",\r\n      });\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    console.log(\"here\");\r\n    if (e.target.value === \"Create New\") {\r\n      this.showNewCat(true);\r\n    } else {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Ingredient Name *</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Ingredient description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter description\"\r\n            name=\"description\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"price\">\r\n          <Form.Label>Ingredient price *</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            autoComplete=\"false\"\r\n            placeholder=\"Enter price\"\r\n            name=\"price\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"category\">\r\n          <Form.Label>Category</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"category\"\r\n            onChange={this.onChange}\r\n            required\r\n          >\r\n            {this.props.categories.length > 0 ? (\r\n              this.props.categories.map((category, index) => {\r\n                return <option key={index}>{category}</option>;\r\n              })\r\n            ) : (\r\n              <option key=\"0\">No categories yet</option>\r\n            )}\r\n            <option key=\"100\">Create New</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group\r\n          controlId=\"newcategory\"\r\n          style={{ display: this.state.display }}\r\n        >\r\n          <Form.Label>New Category </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter new category\"\r\n            name=\"category\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  categories: state.productReducer.ingredientCategories,\r\n});\r\n\r\nexport default connect(mapStateToProps, { create_ingredient })(\r\n  CreateIngredientForm\r\n);\r\n","import React, { Component } from \"react\";\r\nimport CreateItemForm from \"./CreateItemForm\";\r\nimport CreateCategoryForm from \"./CreateCategoryForm\";\r\nimport CreateChoiceForm from \"./CreateChoiceForm\";\r\nimport CreateIngredientForm from \"./CreateIngredientForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CreateForm extends Component {\r\n  state = {\r\n    categories: [],\r\n    name: \"\",\r\n    description: \"\",\r\n    price: 0,\r\n    category: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    categories: PropTypes.array.isRequired,\r\n  };\r\n\r\n  renderSwitch(param) {\r\n    switch (param) {\r\n      case \"Create Item\":\r\n        return <CreateItemForm categories={this.props.categories} />;\r\n      case \"Create Category\":\r\n        return <CreateCategoryForm />;\r\n      case \"Create Choice\":\r\n        return <CreateChoiceForm />;\r\n      case \"Create Ingredient\":\r\n        return <CreateIngredientForm />;\r\n      default:\r\n        return <div>Please select an option</div>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CreateForm\">{this.renderSwitch(this.props.option)}</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  categories: state.productReducer.categories,\r\n});\r\nexport default connect(mapStateToProps, {})(CreateForm);\r\n","export const CreateOptionsData = [\r\n  {\r\n    name: \"Create Item\",\r\n  },\r\n  {\r\n    name: \"Create Category\",\r\n  },\r\n  {\r\n    name: \"Create Ingredient\",\r\n  },\r\n  {\r\n    name: \"Create Choice\",\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../css/Pages/createpage.css\";\r\nimport CreateForm from \"./CreateForm\";\r\nimport { CreateOptionsData } from \"./CreateOptionsData\";\r\nimport {\r\n  get_items,\r\n  get_categories,\r\n  get_ingredients,\r\n  get_choices,\r\n} from \"../../../actions/items\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CreatePage extends Component {\r\n  state = {\r\n    selectedOption: \"\",\r\n  };\r\n  changeOption = (name) => {\r\n    this.setState({ selectedOption: name });\r\n  };\r\n  static propTypes = {\r\n    get_items: PropTypes.func.isRequired,\r\n    get_categories: PropTypes.func.isRequired,\r\n    get_ingredients: PropTypes.func.isRequired,\r\n    get_choices: PropTypes.func.isRequired,\r\n    productReducer: PropTypes.object.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n  };\r\n  componentDidMount() {\r\n    if (!this.props.productReducer.isReady) {\r\n      this.props.get_items();\r\n      this.props.get_categories();\r\n      this.props.get_ingredients();\r\n      this.props.get_choices();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"CreatePage\">\r\n        <div className=\"Createoptions\">\r\n          <ul className=\"Optionlist\">\r\n            {CreateOptionsData.map((option, key) => {\r\n              return (\r\n                <li key={key} className=\"row\">\r\n                  {\" \"}\r\n                  <div\r\n                    id=\"button\"\r\n                    name=\"selectedOption\"\r\n                    onClick={() => this.changeOption(option.name)}\r\n                  >\r\n                    {option.name}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <CreateForm option={this.state.selectedOption} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  productReducer: state.productReducer,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  get_items,\r\n  get_categories,\r\n  get_ingredients,\r\n  get_choices,\r\n})(CreatePage);\r\n","import { TextField } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\n// import { connect, sendMsg } from \"../../../../socket\";\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Loader from \"react-spinners/ClipLoader\";\r\n\r\nclass StatsPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comment: \"\",\r\n      id: 0,\r\n      chatHistory: [],\r\n      awaiting: false,\r\n      accepted: false,\r\n    };\r\n\r\n    this.eventSource = new EventSource(\r\n      `http://localhost:8080/sse/events/${props.match.params.id}`\r\n    );\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.sendMessage = this.sendMessage.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(props);\r\n    if (props.match.params) {\r\n      return {\r\n        id: props.match.params.id,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  static propTypes = {\r\n    userReducer: PropTypes.object.isRequired,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  recieveOrder(response) {\r\n    let data = JSON.parse(response.data);\r\n    if (this.state.commnet !== null) {\r\n      if (data.from === String(this.state.id)) {\r\n        console.log(\"We did it bitches\");\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      awaiting: false,\r\n      accepted: data.accepted,\r\n    });\r\n\r\n    console.log(data);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.eventSource.onmessage = (e) => this.recieveOrder(e);\r\n  }\r\n\r\n  sendMessage = (e) => {\r\n    e.preventDefault();\r\n    let data = {\r\n      id: this.state.comment,\r\n      order: this.state.comment,\r\n      from: this.state.id,\r\n    };\r\n    console.log(data);\r\n\r\n    axios\r\n      .post(`http://localhost:8080/sse/sendorder/${this.state.id}`, data)\r\n      .then((res) => {\r\n        this.setState({\r\n          awaiting: true,\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    if (this.state.awaiting) {\r\n      return (\r\n        <div>\r\n          <Loader />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <TextField\r\n            id=\"comments\"\r\n            name=\"comment\"\r\n            label=\"Σχόλια\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Έξτρα σχόλια\"\r\n            rows={4}\r\n            multiline\r\n            className=\"pre-complete-input\"\r\n            onChange={this.onChange}\r\n          />\r\n          <button onClick={this.sendMessage}></button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps)(StatsPage);\r\n","/**\r\n * Here are the action that are called through the app and redux\r\n * about orders and their functionalities.\r\n * First every action performs a request and then\r\n * depending on the response there is an event dispatch\r\n */\r\n\r\n/**\r\n * IMPORTS\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport { headers } from \"../utils/axiosHeaders\";\r\nimport {\r\n  ACCEPT_ORDER,\r\n  ADD_ITEM,\r\n  CLEAR_REDUCER,\r\n  COMPLETE_ORDER,\r\n  EMPTY_CART,\r\n  GET_ORDER,\r\n  ORDER_ACCEPTED,\r\n  REGISTER_FAIL,\r\n  REJECT_ORDER,\r\n  SEND_ORDER,\r\n  SNACKBAR_ERROR,\r\n  SNACKBAR_INFO,\r\n  SNACKBAR_SUCCESS,\r\n  TODAY_ORDERS,\r\n  UPDATE_CART,\r\n  UPDATE_ORDER,\r\n} from \"./actions\";\r\nimport { returnErrors } from \"./messages\";\r\n\r\n// Send an order\r\nexport const send_order = (data) => (dispatch, getState) => {\r\n  const body = data;\r\n  let SSEdata = { id: null, order: null, from: null, user_details: null };\r\n  const token = sessionStorage.getItem(\"token\");\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  axios\r\n    .post(\"http://localhost:8080/orders/send_order\", body, config)\r\n    .then((res) => {\r\n      console.log(res);\r\n      SSEdata.id = res.data.order.id;\r\n      SSEdata.order = res.data.order;\r\n      SSEdata.from = res.data.order.user_id;\r\n      SSEdata.user_details = res.data.user_details;\r\n      axios\r\n        .post(`http://localhost:8080/sse/sendorder/${SSEdata.from}`, SSEdata)\r\n        .then((res) => {\r\n          // console.log(res);\r\n        });\r\n      dispatch({\r\n        type: SEND_ORDER,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Order send!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Update an order status\r\nexport const update_order = (data) => (dispatch) => {\r\n  const body = data;\r\n  axios\r\n    .put(\"http://localhost:8080/admin/update_order\", body, headers)\r\n    .then((res) => {\r\n      // console.log(res);\r\n      dispatch({\r\n        type: UPDATE_ORDER,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Order updated!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Add an item to current cart\r\nexport const add_item = (item) => (dispatch) => {\r\n  dispatch({\r\n    type: ADD_ITEM,\r\n    product: item,\r\n  });\r\n  dispatch({\r\n    type: SNACKBAR_INFO,\r\n    message: \"Item added to cart!\",\r\n  });\r\n};\r\n\r\n// Update current cart state\r\nexport const update_cart = (order, total_price) => (dispatch) => {\r\n  dispatch({\r\n    type: UPDATE_CART,\r\n    new_order: order,\r\n    total_price: total_price,\r\n  });\r\n};\r\n\r\n// Empty the cart state\r\nexport const empty_cart = () => (dispatch) => {\r\n  dispatch({\r\n    type: EMPTY_CART,\r\n  });\r\n};\r\n\r\n// Empty the order accepted\r\nexport const order_accepted = (time) => (dispatch) => {\r\n  console.log(\"here\");\r\n  dispatch({\r\n    type: ORDER_ACCEPTED,\r\n    time: time,\r\n  });\r\n};\r\n\r\n// Recieve an order\r\nexport const get_order = (order) => (dispatch) => {\r\n  dispatch({\r\n    type: GET_ORDER,\r\n    new_order: order,\r\n  });\r\n};\r\n\r\n// Get orders by date\r\nexport const get_today_orders = () => (dispatch) => {\r\n  axios\r\n    .get(`http://localhost:8080/admin/today`)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: TODAY_ORDERS,\r\n        orders: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Today orders fetched\",\r\n      });\r\n    })\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: \"Today orders fetched error\" + err,\r\n      })\r\n    );\r\n};\r\n\r\n// Accept an order\r\n\r\nexport const accept_order = (order, time_input) => (dispatch) => {\r\n  console.log(order);\r\n  let data = {\r\n    id: order.id,\r\n    accepted: true,\r\n    time: parseInt(time_input),\r\n    from: order.user_id,\r\n  };\r\n  let data_2 = {\r\n    delivery_time: parseInt(time_input),\r\n  };\r\n  axios\r\n    .put(`http://localhost:8080/admin/accept/${order.id}`, data_2, headers)\r\n    .then((res) => {\r\n      console.log(res);\r\n      axios.post(`http://localhost:8080/sse/acceptorder`, data).then((res) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: ACCEPT_ORDER,\r\n          accepted_id: order.id,\r\n          time: time_input,\r\n        });\r\n        dispatch({\r\n          type: SNACKBAR_SUCCESS,\r\n          message: \"Order accepted successfuly!\",\r\n        });\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response,\r\n      });\r\n    });\r\n};\r\n\r\n// Complete an order\r\n\r\nexport const complete_order = (id) => (dispatch) => {\r\n  axios.put(`http://localhost:8080/admin/complete/${id}`).then((res) => {\r\n    console.log(id);\r\n    dispatch({\r\n      type: COMPLETE_ORDER,\r\n      completed_id: id,\r\n    });\r\n  });\r\n};\r\n\r\nexport const reject_order = (order, time_input) => (dispatch) => {\r\n  let data = {\r\n    id: order.id,\r\n    accepted: false,\r\n    time: parseInt(time_input),\r\n    from: order.from,\r\n  };\r\n  axios.post(`http://localhost:8080/sse/acceptorder`, data).then((res) => {\r\n    console.log(res);\r\n    dispatch({\r\n      type: REJECT_ORDER,\r\n      accepted_id: order.id,\r\n    });\r\n    axios.put(`http://localhost:8080/admin/reject/${order.id}`).then((res) => {\r\n      console.log(res);\r\n    });\r\n  });\r\n};\r\n\r\nexport const clearReducer = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_REDUCER,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"../../../../css/Pages/ItemsPage.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { send_order } from \"../../../../actions/orders\";\r\nimport { update_item, update_ingredient } from \"../../../../actions/items\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\n\r\nclass ItemsComponent extends Component {\r\n  state = {\r\n    selectedCategory: \"\",\r\n\r\n    product_ids: [],\r\n    user_id: null,\r\n  };\r\n  changeCategory = (categoryName) => {\r\n    this.setState({ selectedCategory: categoryName });\r\n  };\r\n\r\n  static propTypes = {\r\n    send_order: PropTypes.func.isRequired,\r\n    update_item: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ user_id: this.props.user_Id });\r\n  }\r\n\r\n  changeAvailability(item) {\r\n    this.props.update_item(item.id, item, \"change_availability\");\r\n  }\r\n  changeAvailabilityIngredient(item) {\r\n    this.props.update_ingredient(item.id, item, \"change_availability\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ItemsComponent\">\r\n        <div className=\"Categoriestable\">\r\n          <ul className=\"Categorylist\">\r\n            {this.props.categories.map((category, key) => {\r\n              return (\r\n                <li\r\n                  key={key}\r\n                  className=\"row\"\r\n                  onClick={() => this.changeCategory(category.name)}\r\n                >\r\n                  {\" \"}\r\n                  <div id=\"button\" name=\"selectedCategory\">\r\n                    {category.name}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <Table bordered striped className=\"Itemstable\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Description</th>\r\n              <th>Available</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.selectedCategory === \"ingredients\"\r\n              ? this.props.ingredients.map((ingredient, index) => {\r\n                  // console.log(ingredient);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{ingredient.name}</td>\r\n                      <td>{ingredient.price}</td>\r\n                      <td>{ingredient.description}</td>\r\n                      {/* <td>{ingredient.category}</td> */}\r\n                      <td>\r\n                        <Form.Check\r\n                          type=\"switch\"\r\n                          defaultChecked={ingredient.available}\r\n                          onChange={() =>\r\n                            this.changeAvailabilityIngredient(ingredient)\r\n                          }\r\n                          id={ingredient.id}\r\n                          label=\"Available\"\r\n                        />\r\n                      </td>\r\n                      <td>\r\n                        <Link\r\n                          to={{\r\n                            pathname: \"/single_ingredient\",\r\n                            state: {\r\n                              ingredient: ingredient,\r\n                            },\r\n                          }}\r\n                        >\r\n                          <PencilFill />\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : this.props.products.map((item, index) => {\r\n                  if (item.category === this.state.selectedCategory) {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.price}</td>\r\n                        <td>{item.description}</td>\r\n                        <td>\r\n                          <Form.Check\r\n                            type=\"switch\"\r\n                            defaultChecked={item.available}\r\n                            onChange={() => this.changeAvailability(item)}\r\n                            id={item.id}\r\n                            label=\"Available\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/single_item\",\r\n                              state: {\r\n                                item: item,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <PencilFill />\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  } else {\r\n                    return <tr key={index}></tr>;\r\n                  }\r\n                })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  // user_id: state.userReducer.user.id,\r\n  categories: state.productReducer.categories,\r\n  products: state.productReducer.products,\r\n  ingredients: state.productReducer.ingredients,\r\n  order_accepted: state.orderReducer.accepted,\r\n  order_sent: state.orderReducer.sent,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  send_order,\r\n  update_item,\r\n  update_ingredient,\r\n})(ItemsComponent);\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"../../../../css/Pages/ItemsPage.css\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { update_ingredient } from \"../../../../actions/items\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\n\r\nclass IngredientsComponent extends Component {\r\n  state = {\r\n    selectedCategory: 0,\r\n  };\r\n  changeCategory = (categoryIndex) => {\r\n    console.log(categoryIndex);\r\n    this.setState({ selectedCategory: categoryIndex });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.ingredients.length > 0) {\r\n      this.setState({\r\n        selectedCategory: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    update_ingredient: PropTypes.func.isRequired,\r\n  };\r\n\r\n  changeAvailabilityIngredient(item) {\r\n    this.props.update_ingredient(item.id, item, \"change_availability\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ItemsComponent\">\r\n        <div className=\"Categoriestable\">\r\n          <ul className=\"Categorylist\">\r\n            {this.props.ingredients.length > 0\r\n              ? this.props.ingredients.map((ingredient_categories, key) => {\r\n                  return (\r\n                    <li\r\n                      key={key}\r\n                      className=\"row\"\r\n                      onClick={() => this.changeCategory(key)}\r\n                    >\r\n                      {\" \"}\r\n                      <div id=\"button\" name=\"selectedCategory\">\r\n                        {ingredient_categories[0].category}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })\r\n              : null}\r\n          </ul>\r\n        </div>\r\n        <Table bordered striped className=\"Itemstable\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Description</th>\r\n              <th>Available</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.ingredients.length > 0\r\n              ? this.props.ingredients[this.state.selectedCategory].map(\r\n                  (ingredient, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>{ingredient.name}</td>\r\n                        <td>{ingredient.price}</td>\r\n                        <td>{ingredient.description}</td>\r\n                        <td>\r\n                          <Form.Check\r\n                            type=\"switch\"\r\n                            defaultChecked={ingredient.available}\r\n                            onChange={() =>\r\n                              this.changeAvailabilityIngredient(ingredient)\r\n                            }\r\n                            id={ingredient.id}\r\n                            label=\"Available\"\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <Link\r\n                            to={{\r\n                              pathname: \"/single_ingredient\",\r\n                              state: {\r\n                                ingredient: ingredient,\r\n                              },\r\n                            }}\r\n                          >\r\n                            <PencilFill />\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                )\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  ingredients: state.productReducer.ingredients,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  update_ingredient,\r\n})(IngredientsComponent);\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport \"../../../../css/Pages/ItemsPage.css\";\r\n// import { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { update_choice } from \"../../../../actions/items\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\n\r\nclass ChoicesComponent extends Component {\r\n  state = {\r\n    selectedChoice: 0,\r\n  };\r\n  changeCategory = (categoryIndex) => {\r\n    console.log(categoryIndex);\r\n    this.setState({ selectedChoice: categoryIndex });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.choices.length > 0) {\r\n      this.setState({\r\n        selectedChoice: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  static propTypes = {\r\n    update_choice: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ItemsComponent\">\r\n        <div className=\"Categoriestable\">\r\n          <ul className=\"Categorylist\">\r\n            {this.props.choices.length > 0\r\n              ? this.props.choices.map((choice, key) => {\r\n                  return (\r\n                    <li\r\n                      key={key}\r\n                      className=\"row\"\r\n                      onClick={() => this.changeCategory(key)}\r\n                    >\r\n                      {\" \"}\r\n                      <div id=\"button\" name=\"selectedCategory\">\r\n                        {choice.name}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                })\r\n              : null}\r\n          </ul>\r\n        </div>\r\n        <Table bordered striped className=\"Itemstable\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Options</th>\r\n              <th>Description</th>\r\n              <th>Required</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.choices.length > 0 ? (\r\n              <tr>\r\n                <td>{this.props.choices[this.state.selectedChoice].name}</td>\r\n                <td>\r\n                  <ul>\r\n                    {this.props.choices[this.state.selectedChoice].options.map(\r\n                      (option, index) => {\r\n                        return <li key={index}>{option.name}</li>;\r\n                      }\r\n                    )}\r\n                  </ul>\r\n                </td>\r\n                <td>\r\n                  {this.props.choices[this.state.selectedChoice].description}\r\n                </td>\r\n                <td>\r\n                  {this.props.choices[this.state.selectedChoice].required}\r\n                </td>\r\n                <td>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/single_choice\",\r\n                      state: {\r\n                        choice: this.props.choices[this.state.selectedChoice],\r\n                      },\r\n                    }}\r\n                  >\r\n                    <PencilFill />\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ) : null}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  update_choice,\r\n})(ChoicesComponent);\r\n","import React, { Component } from \"react\";\r\nimport ItemsComponent from \"./Products/ItemsComponent\";\r\nimport {\r\n  get_items,\r\n  get_categories,\r\n  get_ingredients,\r\n  get_choices,\r\n} from \"../../../actions/items\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport IngredientsComponent from \"./Ingredients/IngredientsComponent\";\r\nimport ChoicesComponent from \"./Choices/ChoicesComponent\";\r\n\r\nclass ItemsPage extends Component {\r\n  static propTypes = {\r\n    get_items: PropTypes.func.isRequired,\r\n    get_categories: PropTypes.func.isRequired,\r\n    get_ingredients: PropTypes.func.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n    categories: PropTypes.array.isRequired,\r\n    ingredients: PropTypes.array.isRequired,\r\n    choices: PropTypes.array.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n    isReady: PropTypes.bool,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.isReady === false) {\r\n      this.props.get_items();\r\n      this.props.get_categories();\r\n      this.props.get_ingredients();\r\n      this.props.get_choices();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.location.pathname === \"/choices\" ? (\r\n          <ChoicesComponent choices={this.props.choices} />\r\n        ) : this.props.location.pathname === \"/ingredients\" ? (\r\n          <IngredientsComponent ingredients={this.props.ingredients} />\r\n        ) : (\r\n          <ItemsComponent\r\n            products={this.props.products}\r\n            categories={this.props.categories}\r\n            ingredients={this.props.ingredients}\r\n            choices={this.props.choices}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  categories: state.productReducer.categories,\r\n  products: state.productReducer.products,\r\n  ingredients: state.productReducer.ingredients,\r\n  choices: state.productReducer.choices,\r\n  isReady: state.productReducer.isReady,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  get_items,\r\n  get_categories,\r\n  get_ingredients,\r\n  get_choices,\r\n})(ItemsPage);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  get_items,\r\n  get_categories,\r\n  get_ingredients,\r\n  get_choices,\r\n} from \"../../../actions/items\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n// Images\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      showAddressModal: false,\r\n      id: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // if (this.props.productReducer.isReady === false) {\r\n    //   this.props.get_items();\r\n    //   this.props.get_categories();\r\n    //   this.props.get_ingredients();\r\n    //   this.props.get_choices();\r\n    // }\r\n    this.setState({\r\n      id: uuidv4(),\r\n    });\r\n  }\r\n  static propTypes = {\r\n    get_items: PropTypes.func.isRequired,\r\n    get_categories: PropTypes.func.isRequired,\r\n    get_ingredients: PropTypes.func.isRequired,\r\n    get_choices: PropTypes.func.isRequired,\r\n    productReducer: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"homePageContainer\" style={{ minHeight: \"70vh\" }}>\r\n        <div>\r\n          <Button>\r\n            <Link to=\"/order\">Order Now</Link>\r\n          </Button>\r\n          <Link to=\"/create_item\">Create</Link>\r\n          <br />\r\n          <Link to=\"/items\">Items</Link>\r\n          <br />\r\n          <Link to=\"/ingredients\">Ingredients</Link>\r\n          <br />\r\n          <Link to=\"/choices\">Choices</Link>\r\n          {/* <br />\r\n          <Link to={`/stats/${this.state.id}`}>Choices</Link> */}\r\n          <br />\r\n          <Link to={`/comments`}>Comments</Link>\r\n        </div>\r\n        {/* <Carousel>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              // height={250}\r\n              src={crepe}\r\n              alt=\"First slide\"\r\n            />\r\n            <Carousel.Caption>\r\n              <h3>First slide label</h3>\r\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              // height={250}\r\n              src={club}\r\n              alt=\"Third slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              <h3>Second slide label</h3>\r\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"d-block w-100\"\r\n              // height={250}\r\n              src={pan}\r\n              alt=\"Third slide\"\r\n            />\r\n\r\n            <Carousel.Caption>\r\n              <h3>Third slide label</h3>\r\n              <p>\r\n                Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n              </p>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n        <div></div> */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  productReducer: state.productReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  get_items,\r\n  get_categories,\r\n  get_ingredients,\r\n  get_choices,\r\n})(HomePage);\r\n","import React, { Component } from \"react\";\r\n\r\nclass AllUsersPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      users: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // axios.get(\"http://localhost:8080/users\");\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Edw einai ta paidia!!</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllUsersPage;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport \"../../css/Pages/orderpage.css\";\r\nimport \"../../css/common/logregmodal.css\";\r\nimport \"../../css/Layout/general.css\";\r\nimport { connect } from \"react-redux\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Checkbox,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  Modal,\r\n  Grid,\r\n  Button,\r\n  Paper,\r\n  IconButton,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\n\r\nclass OrderItemModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // options: {},\r\n      options: [],\r\n      quantity: 1,\r\n      comment: \"\",\r\n      extraPrice: 0,\r\n      item: {},\r\n      extra_ingredients: [\"\"],\r\n      loaded: false,\r\n      item_available_ingredients: [],\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onClose = this.onClose.bind(this);\r\n    this.onAdd = this.onAdd.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    ingredients: PropTypes.array.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.update) {\r\n      console.log(this.props);\r\n      this.setState({\r\n        options: this.props.updateItem.options,\r\n        quantity: this.props.updateItem.quantity,\r\n        comment: this.props.updateItem.comment,\r\n        extra_ingredients: this.props.updateItem.extra_ingredients,\r\n        extraPrice:\r\n          this.props.updateItem.totalPrice / this.props.updateItem.quantity -\r\n          this.props.updateItem.item.price,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      loaded: false,\r\n    });\r\n  }\r\n\r\n  handleToggle = (ingredient) => {\r\n    const currentIndex = this.state.extra_ingredients.indexOf(ingredient.name);\r\n    const newChecked = [...this.state.extra_ingredients];\r\n    let newPrice = this.state.extraPrice;\r\n\r\n    console.log(ingredient.name);\r\n    if (currentIndex === -1) {\r\n      newChecked.push(ingredient.name);\r\n      newPrice += ingredient.price;\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n      newPrice -= ingredient.price;\r\n    }\r\n\r\n    this.setState({\r\n      extra_ingredients: newChecked,\r\n      extraPrice: newPrice,\r\n    });\r\n  };\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  onAdd(e) {\r\n    e.preventDefault();\r\n    let optionAnswers = [];\r\n    if (this.state.options.length > 0) {\r\n      for (var i in this.state.options) {\r\n        // console.log(i);\r\n        optionAnswers.push(this.state.options[i].choice);\r\n      }\r\n    }\r\n    const item = {\r\n      item: this.props.item,\r\n      options: this.state.options,\r\n      comment: this.state.comment,\r\n      extraPrice: this.state.extraPrice,\r\n      optionAnswers: optionAnswers,\r\n      extra_ingredients: this.state.extra_ingredients.slice(1),\r\n    };\r\n    if (this.props.update) {\r\n      item.extra_ingredients = this.state.extra_ingredients;\r\n    }\r\n    // console.log(item);\r\n    if (this.props.update) {\r\n      this.props.onUpdate &&\r\n        this.props.onUpdate(item, this.state.quantity, this.props.index);\r\n    } else {\r\n      this.props.onAdd && this.props.onAdd(item, this.state.quantity);\r\n    }\r\n    this.props.onClose && this.props.onClose(e);\r\n    this.setState({\r\n      options: {},\r\n      quantity: 1,\r\n      comment: \"\",\r\n      extraPrice: 0,\r\n      extraIngredients: [\"\"],\r\n    });\r\n  }\r\n\r\n  onChangeChoice = (choiceName, selectedOption) => {\r\n    var currentOptions = this.state.options;\r\n    let oldPrice = 0;\r\n    let found = false;\r\n    let exists = false;\r\n    // console.log(choiceName);\r\n    // console.log(selectedOption);\r\n    // Check if choice has already changed once\r\n    for (var id in currentOptions) {\r\n      let old_option = currentOptions[id];\r\n      if (old_option.name === choiceName) {\r\n        if (old_option.choice === selectedOption.name) {\r\n          exists = true;\r\n        }\r\n        oldPrice = old_option.price;\r\n        old_option.choice = selectedOption.name;\r\n        old_option.price = selectedOption.price;\r\n        found = true;\r\n        console.log(\"found\");\r\n      }\r\n    }\r\n    // Else it adds the option\r\n    if (found === false && exists === false) {\r\n      let newOption = {\r\n        name: choiceName,\r\n        choice: selectedOption.name,\r\n        price: selectedOption.price,\r\n      };\r\n      currentOptions.push(newOption);\r\n    }\r\n\r\n    if (exists === false) {\r\n      var newPrice = this.state.extraPrice + selectedOption.price - oldPrice;\r\n      this.setState({\r\n        options: currentOptions,\r\n        extraPrice: newPrice,\r\n      });\r\n    }\r\n    console.log(currentOptions);\r\n  };\r\n\r\n  onChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    // console.log(props, state);\r\n    if (\r\n      props.item.custom === true &&\r\n      props.item.extra_ingredients !== undefined &&\r\n      state.loaded === false\r\n    ) {\r\n      let grouped_ingredients = [];\r\n      let grouped;\r\n      var _ = require(\"lodash\");\r\n      grouped = _.groupBy(props.item.extra_ingredients, \"category\");\r\n      for (var i in grouped) {\r\n        grouped_ingredients.push(grouped[i]);\r\n      }\r\n      // console.log(grouped_ingredients);\r\n      return {\r\n        loaded: true,\r\n        item_available_ingredients: grouped_ingredients,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  onClose = (e) => {\r\n    this.props.onClose && this.props.onClose(e);\r\n    this.setState({\r\n      options: {},\r\n      quantity: 1,\r\n      comment: \"\",\r\n      extraPrice: 0,\r\n    });\r\n  };\r\n\r\n  changeQuantity = (bool) => {\r\n    if (bool) {\r\n      this.setState({ quantity: this.state.quantity + 1 });\r\n    } else if (this.state.quantity > 0) {\r\n      this.setState({ quantity: this.state.quantity - 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let text = \"\";\r\n    if (this.props.update) {\r\n      // console.log(\"here to update\");\r\n      text = \"Ενημέρωση\";\r\n    } else {\r\n      // console.log(\"here to add\");\r\n      text = \"Προσθήκη\";\r\n    }\r\n    return (\r\n      <Modal\r\n        open={this.props.show}\r\n        onClose={(e) => {\r\n          this.onClose(e);\r\n        }}\r\n        className=\"log-reg-modal\"\r\n      >\r\n        <Paper elevation={0}>\r\n          <Grid container>\r\n            <Grid xs={10} item>\r\n              {this.props.item.name}\r\n              <br />\r\n              {/* {this.props.item.description} */}\r\n            </Grid>\r\n            {/* <Grid item></Grid> */}\r\n            <Grid item xs={2} className=\"closeButtonCol\">\r\n              {/* {item_.price} € */}\r\n              {this.props.update\r\n                ? this.state.extraPrice + this.props.updateItem.item.price\r\n                : this.state.extraPrice + this.props.item.price}{\" \"}\r\n              €\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={(e) => {\r\n                  this.onClose(e);\r\n                }}\r\n              >\r\n                X\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid container>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Form>\r\n                <Form.Group>\r\n                  {this.props.item.choices.map((choice, indx) => {\r\n                    return (\r\n                      <Paper elevation={0} key={indx}>\r\n                        <Typography className=\"modalChoiceName\">\r\n                          {choice.name}\r\n                          {choice.required ? <span>*</span> : <span></span>}\r\n                        </Typography>\r\n                        <Paper\r\n                          elevation={0}\r\n                          className=\"orderItemModalChoiceDiv\"\r\n                          key={indx}\r\n                        >\r\n                          {choice.options ? (\r\n                            choice.options.map((option, index) => {\r\n                              // if (this.props.update) {\r\n                              let show = false;\r\n                              for (var i in this.props.updateItem.options) {\r\n                                let update_option =\r\n                                  this.props.updateItem.options[i];\r\n                                if (\r\n                                  update_option.name === choice.name &&\r\n                                  update_option.choice === option.name\r\n                                ) {\r\n                                  show = true;\r\n                                }\r\n                              }\r\n                              if (this.props.update && show) {\r\n                                return (\r\n                                  <Paper className=\"form-check\" key={index}>\r\n                                    <Grid direction=\"row\" container>\r\n                                      <Grid item xs={1}>\r\n                                        <input\r\n                                          className=\"form-check-input\"\r\n                                          type=\"radio\"\r\n                                          name={`${choice.name}`}\r\n                                          value={`${option.name}`}\r\n                                          id={`${option.name}${index}`}\r\n                                          onClick={() =>\r\n                                            this.onChangeChoice(\r\n                                              choice.name,\r\n                                              option\r\n                                            )\r\n                                          }\r\n                                          defaultChecked\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={9}>\r\n                                        <label\r\n                                          className=\"form-check-label\"\r\n                                          htmlFor={`${option.name}${index}`}\r\n                                        >\r\n                                          {option.name}\r\n                                        </label>\r\n                                      </Grid>\r\n                                      <Grid item xs={2}>\r\n                                        <span className=\"form-check-price\">\r\n                                          {option.price} €\r\n                                        </span>\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                    {/* <input\r\n                                      className=\"form-check-input\"\r\n                                      type=\"radio\"\r\n                                      name={`${choice.name}`}\r\n                                      value={`${option.name}`}\r\n                                      id={`${option.name}${index}`}\r\n                                      onClick={() =>\r\n                                        this.onChangeChoice(choice.name, option)\r\n                                      }\r\n                                      defaultChecked\r\n                                    />\r\n                                    <label\r\n                                      className=\"form-check-label\"\r\n                                      htmlFor={`${option.name}${index}`}\r\n                                    >\r\n                                      {option.name}\r\n                                    </label>\r\n                                    <span className=\"form-check-price\">\r\n                                      {option.price} €\r\n                                    </span> */}\r\n                                  </Paper>\r\n                                );\r\n                                // }\r\n                              } else {\r\n                                return (\r\n                                  <Paper className=\"form-check\" key={index}>\r\n                                    <Grid container>\r\n                                      <Grid item xs={1}>\r\n                                        <input\r\n                                          className=\"form-check-input\"\r\n                                          type=\"radio\"\r\n                                          name={`${choice.name}`}\r\n                                          value={`${option.name}`}\r\n                                          id={`${option.name}${index}`}\r\n                                          onClick={() =>\r\n                                            this.onChangeChoice(\r\n                                              choice.name,\r\n                                              option\r\n                                            )\r\n                                          }\r\n                                        />\r\n                                      </Grid>\r\n                                      <Grid item xs={9}>\r\n                                        <label\r\n                                          className=\"form-check-label\"\r\n                                          htmlFor={`${option.name}${index}`}\r\n                                        >\r\n                                          {option.name}\r\n                                        </label>\r\n                                      </Grid>\r\n                                      <Grid item xs={2}>\r\n                                        {\" \"}\r\n                                        <span className=\"form-check-price\">\r\n                                          {option.price} €\r\n                                        </span>\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Paper>\r\n                                );\r\n                              }\r\n                            })\r\n                          ) : (\r\n                            <span></span>\r\n                          )}\r\n                        </Paper>\r\n                      </Paper>\r\n                    );\r\n                  })}\r\n                </Form.Group>\r\n                <Form.Group controlId=\"ingrdients\">\r\n                  {this.props.item.custom === true &&\r\n                  this.props.item.extra_ingredients !== undefined ? (\r\n                    <List\r\n                      className=\"create-item-ingredient-list\"\r\n                      id=\"ingredient-list\"\r\n                    >\r\n                      {this.state.item_available_ingredients.map(\r\n                        (ingredientCategory, index) => {\r\n                          return (\r\n                            <Paper elevation={0} key={index}>\r\n                              <p className=\"modalChoiceName\">\r\n                                {`${ingredientCategory[0].category}`}\r\n                              </p>\r\n                              <Paper\r\n                                elevation={0}\r\n                                className=\"orderItemModalIngredientsDiv\"\r\n                                key={index}\r\n                              >\r\n                                {ingredientCategory.map((ingredient, index) => {\r\n                                  const labelId = `ingredient-item-${ingredient.name}`;\r\n                                  if (ingredient.available) {\r\n                                    return (\r\n                                      <ListItem\r\n                                        key={index}\r\n                                        role={undefined}\r\n                                        dense\r\n                                        className=\"item-modal-ingredient-li\"\r\n                                        // style={{ maxWidth: \"50%\", minWidth: \"50%\" }}\r\n                                        button\r\n                                        onClick={() =>\r\n                                          this.handleToggle(ingredient)\r\n                                        }\r\n                                      >\r\n                                        <ListItemIcon style={{ width: \"100%\" }}>\r\n                                          <Checkbox\r\n                                            edge=\"start\"\r\n                                            checked={\r\n                                              this.state.extra_ingredients.indexOf(\r\n                                                ingredient.name\r\n                                              ) !== -1\r\n                                            }\r\n                                            tabIndex={-1}\r\n                                            disableRipple\r\n                                            inputProps={{\r\n                                              \"aria-labelledby\": labelId,\r\n                                            }}\r\n                                          />\r\n                                          <ListItemText\r\n                                            id={labelId}\r\n                                            primary={\r\n                                              <Typography\r\n                                                type=\"body2\"\r\n                                                style={{\r\n                                                  color: \"black\",\r\n                                                  textAlgin: \"center\",\r\n                                                }}\r\n                                              >\r\n                                                {ingredient.name}\r\n                                              </Typography>\r\n                                            }\r\n                                          />\r\n                                          <ListItemText\r\n                                            id={labelId}\r\n                                            primary={\r\n                                              <Typography\r\n                                                type=\"subtitle1\"\r\n                                                style={{\r\n                                                  color: \"black\",\r\n                                                  textAlign: \"right\",\r\n                                                }}\r\n                                              >\r\n                                                {ingredient.price} €\r\n                                              </Typography>\r\n                                            }\r\n                                          />\r\n                                        </ListItemIcon>\r\n                                      </ListItem>\r\n                                    );\r\n                                  } else {\r\n                                    return (\r\n                                      <ListItem\r\n                                        key={index}\r\n                                        role={undefined}\r\n                                        dense\r\n                                        disabled\r\n                                        className=\"item-modal-ingredient-li\"\r\n                                        // style={{ maxWidth: \"50%\", minWidth: \"50%\" }}\r\n                                        button\r\n                                        onClick={() =>\r\n                                          this.handleToggle(ingredient)\r\n                                        }\r\n                                      >\r\n                                        <ListItemIcon style={{ width: \"100%\" }}>\r\n                                          <ListItemText\r\n                                            id={labelId}\r\n                                            primary={\r\n                                              <Typography\r\n                                                type=\"body2\"\r\n                                                style={{\r\n                                                  color: \"black\",\r\n                                                  textAlgin: \"center\",\r\n                                                }}\r\n                                              >\r\n                                                {ingredient.name}\r\n                                              </Typography>\r\n                                            }\r\n                                          />\r\n                                          <ListItemText\r\n                                            id={labelId}\r\n                                            primary={\r\n                                              <Typography\r\n                                                type=\"subtitle1\"\r\n                                                style={{\r\n                                                  color: \"black\",\r\n                                                  textAlign: \"right\",\r\n                                                }}\r\n                                              >\r\n                                                {ingredient.price} €\r\n                                              </Typography>\r\n                                            }\r\n                                          />\r\n                                        </ListItemIcon>\r\n                                      </ListItem>\r\n                                    );\r\n                                  }\r\n                                })}\r\n                              </Paper>\r\n                            </Paper>\r\n                          );\r\n                        }\r\n                      )}\r\n                    </List>\r\n                  ) : (\r\n                    <span></span>\r\n                  )}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                  <Form.Label className=\"modalChoiceName\">Comments</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    name=\"comment\"\r\n                    label=\"Leave a comment\"\r\n                    placeholder=\"Leave a comment\"\r\n                    value={this.state.comment}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Grid container style={{ marginTop: \"2\" }}>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={3}>\r\n              <Grid container>\r\n                <IconButton\r\n                  // variant=\"outline-danger\"\r\n                  className=\"minPlusButton\"\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  aria-label=\"remove\"\r\n                  onClick={() => this.changeQuantity(false)}\r\n                >\r\n                  <RemoveIcon fontSize=\"small\" />\r\n                </IconButton>\r\n                <span>{this.state.quantity}</span>\r\n                <IconButton\r\n                  // variant=\"outline-success\"\r\n                  className=\"minPlusButton\"\r\n                  color=\"primary\"\r\n                  aria-label=\"add\"\r\n                  // size=\"small\"\r\n                  // variant=\"contained\"\r\n                  onClick={() => this.changeQuantity(true)}\r\n                >\r\n                  <AddIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={this.onAdd}\r\n                className=\"modalFooterButton\"\r\n              >\r\n                {text}\r\n              </Button>\r\n            </Grid>\r\n            <Grid xs={4} item></Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>\r\n  // console.log(state.productReducer.ingredients),\r\n  ({\r\n    isAuthenticated: state.userReducer.isAuthenticated,\r\n    ingredients: state.productReducer.ingredients,\r\n  });\r\n\r\nexport default connect(mapStateToProps, {})(OrderItemModal);\r\n","/**\r\n * Here are the action that are called through the app and redux\r\n * about error logging and their functionalities.\r\n * First every action performs a request and then\r\n * depending on the response there is an event dispatch\r\n */\r\n\r\n/**\r\n * IMPORTS\r\n */\r\n\r\nimport {\r\n  SNACKBAR_CLEAR,\r\n  SNACKBAR_ERROR,\r\n  SNACKBAR_INFO,\r\n  SNACKBAR_SUCCESS,\r\n} from \"./actions\";\r\n\r\n// Success log\r\nexport const showSuccessSnackbar = (message) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: SNACKBAR_SUCCESS, message });\r\n  };\r\n};\r\n\r\n// Error log\r\nexport const showErrorSnackbar = (message) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: SNACKBAR_ERROR, message });\r\n  };\r\n};\r\n\r\n// Info log\r\nexport const showInfoSnackbar = (message) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: SNACKBAR_INFO, message });\r\n  };\r\n};\r\n\r\n// Clear all\r\nexport const clearSnackbar = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: SNACKBAR_CLEAR });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Card, Col, ListGroup, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../css/Pages/orderpage.css\";\r\nimport OrderItemModal from \"../../Modals/OrderItemModal\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect } from \"react-router\";\r\nimport { update_cart } from \"../../../actions/orders\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport {\r\n  GetAsyncCategories,\r\n  GetAsyncItems,\r\n  get_items,\r\n  get_categories,\r\n  get_ingredients,\r\n} from \"../../../actions/items\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { showInfoSnackbar } from \"../../../actions/snackbar\";\r\n// import AlertModal from \"../../MainPanel/Pages/Alert/AlertModal\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nvar _ = require(\"lodash\");\r\n\r\nclass OrderMainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.addToCart = this.addToCart.bind(this);\r\n    this.removeFromCart = this.removeFromCart.bind(this);\r\n    this.clearCart = this.clearCart.bind(this);\r\n    this.changeCategory = this.changeCategory.bind(this);\r\n    this.showModal = this.showModal.bind(this);\r\n    this.showAlert = this.showAlert.bind(this);\r\n  }\r\n  state = {\r\n    cart: [],\r\n    totalPrice: 0,\r\n    grouped: [],\r\n    selectedCategory: \"1\",\r\n    selectedItem: {},\r\n    itemToUpdate: {},\r\n    showModal: false,\r\n    modalToUpdate: false,\r\n    indexToUpdate: 0,\r\n    pathToImages: \"\",\r\n    showAlert: false,\r\n    alertMessage: \"\",\r\n    continueOrder: false,\r\n    products: [],\r\n    categories: [],\r\n    isReady: false,\r\n  };\r\n  static propTypes = {\r\n    orderReducer: PropTypes.object.isRequired,\r\n    userReducer: PropTypes.object.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n    categories: PropTypes.array.isRequired,\r\n    isReady: PropTypes.bool.isRequired,\r\n    update_cart: PropTypes.func.isRequired,\r\n    showInfoSnackbar: PropTypes.func.isRequired,\r\n    GetAsyncCategories: PropTypes.func.isRequired,\r\n    GetAsyncItems: PropTypes.func.isRequired,\r\n    get_items: PropTypes.func.isRequired,\r\n    get_categories: PropTypes.func.isRequired,\r\n    get_ingredients: PropTypes.func.isRequired,\r\n  };\r\n  changeCategory = (category) => {\r\n    this.setState({ selectedCategory: category });\r\n  };\r\n\r\n  continueOrder = () => {\r\n    if (this.state.cart.length > 0) {\r\n      if (sessionStorage.getItem(\"isAuthenticated\") !== \"true\") {\r\n        // this.showAlert(true, \"You have to login first!\");\r\n        this.props.showInfoSnackbar(\"You have to login first!\");\r\n      } else {\r\n        this.setState({\r\n          continueOrder: true,\r\n        });\r\n      }\r\n    } else {\r\n      // return <Alert variant=\"secondary\">Your card is empty!</Alert>;\r\n      this.props.showInfoSnackbar(\"Your cart is empty!\");\r\n    }\r\n  };\r\n\r\n  updateCart = (item, quantity, index) => {\r\n    console.log(item, quantity);\r\n    const order_item = {\r\n      item: item.item,\r\n      options: item.options,\r\n      comment: item.comment,\r\n      totalPrice: item.item.price * quantity + item.extraPrice * quantity,\r\n      optionAnswers: item.optionAnswers,\r\n      extra_ingredients: item.extra_ingredients,\r\n      quantity: quantity,\r\n    };\r\n    let cart_ = this.state.cart;\r\n    let oldTotalPrice = this.state.totalPrice;\r\n    let newTotalPrice =\r\n      oldTotalPrice - cart_[index].totalPrice + order_item.totalPrice;\r\n    cart_[index] = order_item;\r\n    this.setState({\r\n      cart: cart_,\r\n      totalPrice: newTotalPrice,\r\n    });\r\n    // this.props.update_order(this.state.cart, this.state.totalPrice);\r\n  };\r\n\r\n  addToCart = (item, quantity) => {\r\n    const order_item = {\r\n      item: item.item,\r\n      options: item.options,\r\n      comment: item.comment,\r\n      extraPrice: item.extraPrice,\r\n      totalPrice: item.item.price * quantity + item.extraPrice * quantity,\r\n      optionAnswers: item.optionAnswers,\r\n      extra_ingredients: item.extra_ingredients,\r\n      quantity: quantity,\r\n    };\r\n    this.setState({\r\n      cart: [...this.state.cart, order_item],\r\n      totalPrice: this.state.totalPrice + order_item.totalPrice,\r\n    });\r\n    // this.props.update_order(this.state.cart, this.state.totalPrice);\r\n  };\r\n\r\n  removeFromCart = (index, order_item) => {\r\n    console.log(order_item);\r\n    this.setState({\r\n      cart: [...this.state.cart.filter((item, idex) => idex !== index)],\r\n      totalPrice: this.state.totalPrice - order_item.totalPrice,\r\n    });\r\n    // this.props.update_order(this.state.cart, this.state.totalPrice);\r\n  };\r\n\r\n  clearCart() {\r\n    this.setState({ cart: [], totalPrice: 0 });\r\n    // this.props.update_order(this.state.cart, this.state.totalPrice);\r\n  }\r\n\r\n  showModal = (item, bool, close, index) => {\r\n    let item_ = {};\r\n    let cat_ = \"\";\r\n    if (bool) {\r\n      item_ = item.item;\r\n    } else {\r\n      item_ = item;\r\n    }\r\n    if (close) {\r\n      cat_ = this.state.selectedCategory;\r\n    } else {\r\n      cat_ = item_.category;\r\n    }\r\n    this.setState({\r\n      selectedItem: item_,\r\n      selectedCategory: cat_,\r\n      showModal: !this.state.showModal,\r\n      modalToUpdate: bool,\r\n      indexToUpdate: index,\r\n      itemToUpdate: item,\r\n    });\r\n  };\r\n\r\n  changeQuantity = (bool, index) => {\r\n    let cur_cart = [...this.state.cart];\r\n    let cur_item = cur_cart[index];\r\n    let price_per_unit = cur_item.totalPrice / cur_item.quantity;\r\n    let cartTotalPrice = this.state.totalPrice;\r\n\r\n    if (bool) {\r\n      cur_item.totalPrice += price_per_unit;\r\n      cur_item.quantity += 1;\r\n      cartTotalPrice += price_per_unit;\r\n    } else {\r\n      cur_item.totalPrice -= price_per_unit;\r\n      cur_item.quantity -= 1;\r\n      cartTotalPrice -= price_per_unit;\r\n    }\r\n    cur_cart[index] = cur_item;\r\n    console.log(cur_item);\r\n    if (cur_item.quantity === 0) {\r\n      cur_item.quantity += 1;\r\n      cur_item.totalPrice += price_per_unit;\r\n      this.removeFromCart(index, cur_item);\r\n    } else {\r\n      this.setState({\r\n        cart: cur_cart,\r\n        totalPrice: cartTotalPrice,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.update_cart(this.state.cart, this.state.totalPrice);\r\n  }\r\n  showAlert = (bool, msg) => {\r\n    this.setState({\r\n      showAlert: bool,\r\n      alertMessage: msg,\r\n    });\r\n  };\r\n\r\n  showSearchResults = (e) => {\r\n    let type = e.type;\r\n    // console.log(e.target.value);\r\n    // console.log(e.target.textContent);\r\n    if (type === \"click\" || type === \"keydown\") {\r\n      let name = e.target.textContent;\r\n      if (type === \"keydown\") {\r\n        name = e.target.value;\r\n      }\r\n      let product;\r\n      let found = false;\r\n      for (var i in this.props.products) {\r\n        if (this.props.products[i].name === name) {\r\n          product = this.props.products[i];\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (found)\r\n        this.setState(\r\n          {\r\n            selectedCategory: product.category,\r\n          },\r\n          () => {\r\n            console.log(this.state.selectedCategory);\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.isReady) {\r\n      this.props.get_items();\r\n      this.props.get_categories();\r\n      this.props.get_ingredients();\r\n    }\r\n    if (this.props.orderReducer.products.length > 0) {\r\n      let grouped = _.groupBy(this.props.products, \"category\");\r\n      let category = this.props.categories[0].name;\r\n      if (this.state.searchParam !== \"\") {\r\n        for (var i in this.props.products) {\r\n          if (this.props.products[i].name === this.state.searchParam) {\r\n            category = this.props.products[i].categroy;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      this.setState({\r\n        selectedCategory: category,\r\n        grouped: grouped,\r\n        cart: this.props.orderReducer.products,\r\n        totalPrice: this.props.orderReducer.totalPrice,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let modal;\r\n    let alertModal;\r\n    if (this.state.showModal) {\r\n      modal = (\r\n        <OrderItemModal\r\n          onClose={() =>\r\n            this.showModal(this.state.selectedItem, false, true, 0)\r\n          }\r\n          show={this.state.showModal}\r\n          item={this.state.selectedItem}\r\n          update={this.state.modalToUpdate}\r\n          updateItem={this.state.itemToUpdate}\r\n          category={\r\n            this.props.categories.filter(\r\n              (cat) => cat.name === this.state.selectedCategory\r\n            )[0]\r\n          }\r\n          onAdd={this.addToCart}\r\n          onUpdate={this.updateCart}\r\n          index={this.state.indexToUpdate}\r\n        />\r\n      );\r\n    }\r\n    if (this.state.continueOrder) {\r\n      return (\r\n        <Redirect to={`/pre_complete/${sessionStorage.getItem(\"userID\")}`} />\r\n      );\r\n    }\r\n    if (!this.props.isReady) {\r\n      return (\r\n        <div className=\"loading-div\">\r\n          <CircularProgress disableShrink />{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div id=\"orderMainPageContainer\">\r\n          {alertModal}\r\n          <Row className=\"orderMainPageRow\">\r\n            <Col className=\"categoriesListCol\">\r\n              <div className=\"categoriesList\">\r\n                <ListGroup className=\"categoriesListGroup\">\r\n                  {this.props.categories.map((categ, index) => {\r\n                    let selected = false;\r\n                    if (this.state.selectedCategory === categ.name) {\r\n                      selected = true;\r\n                    }\r\n                    return (\r\n                      <ListGroup.Item\r\n                        key={index}\r\n                        onClick={() => this.changeCategory(categ.name)}\r\n                        active={selected}\r\n                      >\r\n                        {categ.name}\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              </div>\r\n            </Col>\r\n            <Col className=\"productList\" xs={4} md={6}>\r\n              <div className=\"search-bar-custom\">\r\n                {/* <SearchBar /> */}\r\n                <Autocomplete\r\n                  id=\"search-product\"\r\n                  options={this.props.products}\r\n                  getOptionLabel={(option) => option.name}\r\n                  disableClearable\r\n                  autoComplete\r\n                  onClose={(e) => this.showSearchResults(e)}\r\n                  renderOption={(option, index) => (\r\n                    <Typography\r\n                      noWrap\r\n                      onClick={(e) => console.log(e)}\r\n                      key={index}\r\n                    >\r\n                      {option.name}\r\n                    </Typography>\r\n                  )}\r\n                  // <NavLink to={`/search/${option.name}`}>\r\n                  //   {option.name}\r\n                  // </NavLink>\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Search product\"\r\n                      variant=\"outlined\"\r\n                      InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n              <ListGroup variant=\"flush\">\r\n                {this.props.products.map((item, index) => {\r\n                  if (item.category === this.state.selectedCategory) {\r\n                    if (item.available === false) {\r\n                      return (\r\n                        <ListGroup.Item key={index} disabled id={item.name}>\r\n                          <Card border=\"light\">\r\n                            <Row className=\"itemCardRow\">\r\n                              {item.image === \"\" ? (\r\n                                <Col sm={4} className=\"itemCardImageCol\"></Col>\r\n                              ) : (\r\n                                <Col sm={4} className=\"itemCardImageCol\">\r\n                                  <Card.Img\r\n                                    // src={`http:://localhost:8080/assets/images/${item.image}`}\r\n                                    src={`http://localhost:8080/assets/images/${item.image}`}\r\n                                    className=\"itemCardImage\"\r\n                                  ></Card.Img>{\" \"}\r\n                                </Col>\r\n                              )}\r\n                              <Col sm={8}>\r\n                                <Card.Body>\r\n                                  <Card.Title className=\"item-unavailable\">\r\n                                    {item.name}\r\n                                  </Card.Title>\r\n                                  <Card.Subtitle className=\"text-muted\">\r\n                                    {/* {item.description} */}\r\n                                    {item.ingredients &&\r\n                                    item.ingredients.length > 0\r\n                                      ? item.ingredients.join()\r\n                                      : item.description}\r\n                                  </Card.Subtitle>\r\n                                  <Card.Text>{item.price} €</Card.Text>\r\n                                </Card.Body>\r\n                              </Col>\r\n                            </Row>\r\n                          </Card>\r\n                        </ListGroup.Item>\r\n                      );\r\n                    } else {\r\n                      return (\r\n                        <ListGroup.Item\r\n                          key={index}\r\n                          onClick={() => this.showModal(item, false, false, 0)}\r\n                          id={item.name}\r\n                        >\r\n                          <Card border=\"light\">\r\n                            <Row className=\"itemCardRow\">\r\n                              {item.image === \"\" ? (\r\n                                <Col sm={4} className=\"itemCardImageCol\"></Col>\r\n                              ) : (\r\n                                <Col sm={4} className=\"itemCardImageCol\">\r\n                                  <Card.Img\r\n                                    src={`http://localhost:8080/assets/images/${item.image}`}\r\n                                    className=\"itemCardImage\"\r\n                                  ></Card.Img>{\" \"}\r\n                                </Col>\r\n                              )}\r\n                              <Col sm={8}>\r\n                                <Card.Body>\r\n                                  <Card.Title>{item.name}</Card.Title>\r\n                                  <Card.Subtitle className=\"text-muted\">\r\n                                    {item.ingredients &&\r\n                                    item.ingredients.length > 0\r\n                                      ? item.ingredients.join()\r\n                                      : item.description}\r\n                                  </Card.Subtitle>\r\n                                  <Card.Text>{item.price} €</Card.Text>\r\n                                </Card.Body>\r\n                              </Col>\r\n                            </Row>\r\n                          </Card>\r\n                        </ListGroup.Item>\r\n                      );\r\n                    }\r\n                  } else {\r\n                    return <span key={index}></span>;\r\n                  }\r\n                })}\r\n              </ListGroup>\r\n            </Col>\r\n            {modal}\r\n            <Col className=\"cart\">\r\n              <div className=\"stickyCard\">\r\n                <Card>\r\n                  <Card.Body className=\"cardBody\">\r\n                    <Card.Title>Το καλάθι σου</Card.Title>\r\n                    <div className=\"cartList\">\r\n                      {this.state.cart.length > 0 ? (\r\n                        <ListGroup>\r\n                          {this.state.cart.map((order_item, index) => {\r\n                            // console.log(order_item);\r\n                            return (\r\n                              <ListGroup.Item key={index} className=\"cardItem\">\r\n                                <Card border=\"light\">\r\n                                  <Card.Header\r\n                                    style={{ backgroundColor: \"white\" }}\r\n                                  >\r\n                                    <Row className=\"headerItem\">\r\n                                      <div\r\n                                        onClick={() =>\r\n                                          this.showModal(\r\n                                            order_item,\r\n                                            true,\r\n                                            false,\r\n                                            index\r\n                                          )\r\n                                        }\r\n                                        className=\"cartItemName\"\r\n                                      >\r\n                                        {order_item.item.name}\r\n                                      </div>\r\n                                      <div className=\"cartItemPrice\">\r\n                                        {order_item.totalPrice /\r\n                                          order_item.quantity}{\" \"}\r\n                                        €\r\n                                      </div>\r\n                                    </Row>\r\n                                  </Card.Header>\r\n                                  <Card.Body>\r\n                                    <Row className=\"bodyItem\">\r\n                                      {order_item.optionAnswers.length > 0 ? (\r\n                                        <div className=\"cartItemOptions\">\r\n                                          <p>\r\n                                            {order_item.optionAnswers.join() +\r\n                                              `,${order_item.comment}`}\r\n                                          </p>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <div className=\"cartItemOptions\">\r\n                                          {order_item.comment}\r\n                                        </div>\r\n                                      )}\r\n                                      <ul className=\"ingredientCartList\">\r\n                                        {order_item.extra_ingredients.length >\r\n                                        0 ? (\r\n                                          order_item.extra_ingredients.map(\r\n                                            (ingredient, index) => {\r\n                                              return (\r\n                                                <li\r\n                                                  key={index}\r\n                                                  style={{ textAlign: \"left\" }}\r\n                                                >\r\n                                                  + {ingredient}\r\n                                                </li>\r\n                                              );\r\n                                            }\r\n                                          )\r\n                                        ) : (\r\n                                          <span></span>\r\n                                        )}\r\n                                      </ul>\r\n                                    </Row>\r\n                                  </Card.Body>\r\n                                  <Card.Footer\r\n                                    style={{ backgroundColor: \"white\" }}\r\n                                  >\r\n                                    <Grid direction=\"row\" container>\r\n                                      <Grid item justify=\"flex-start\" xs={9}>\r\n                                        <IconButton\r\n                                          className=\"minPlusButton\"\r\n                                          color=\"primary\"\r\n                                          variant=\"contained\"\r\n                                          aria-label=\"remove\"\r\n                                          onClick={() =>\r\n                                            this.changeQuantity(false, index)\r\n                                          }\r\n                                        >\r\n                                          <RemoveIcon fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                        <span>{order_item.quantity}</span>\r\n                                        <IconButton\r\n                                          className=\"minPlusButton\"\r\n                                          color=\"primary\"\r\n                                          variant=\"contained\"\r\n                                          aria-label=\"add\"\r\n                                          onClick={() =>\r\n                                            this.changeQuantity(true, index)\r\n                                          }\r\n                                        >\r\n                                          <AddIcon fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                      </Grid>\r\n                                      <Grid item xs={3}>\r\n                                        {/* <div className=\"removeButtonCol\"> */}\r\n                                        <IconButton\r\n                                          className=\"removeButton minPlusButton\"\r\n                                          color=\"secondary\"\r\n                                          variant=\"contained\"\r\n                                          aria-label=\"remove\"\r\n                                          onClick={() =>\r\n                                            this.removeFromCart(\r\n                                              index,\r\n                                              order_item\r\n                                            )\r\n                                          }\r\n                                        >\r\n                                          <ClearIcon fontSize=\"small\" />\r\n                                        </IconButton>\r\n                                        {/* </div> */}\r\n                                      </Grid>\r\n                                    </Grid>\r\n                                  </Card.Footer>\r\n                                </Card>\r\n                              </ListGroup.Item>\r\n                            );\r\n                          })}\r\n                        </ListGroup>\r\n                      ) : (\r\n                        <Card.Text>Το καλάθι είναι άδειο</Card.Text>\r\n                      )}\r\n                    </div>\r\n                    <hr />\r\n                    <Row>\r\n                      <Col>\r\n                        <Card.Text>Σύνολο</Card.Text>\r\n                      </Col>\r\n                      <Col>\r\n                        <Card.Text> {this.state.totalPrice} €</Card.Text>\r\n                      </Col>\r\n                    </Row>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      className=\"cartButton\"\r\n                      onClick={this.continueOrder}\r\n                    >\r\n                      Συνέχεια\r\n                      {/* <Link to=\"/order/pre_complete\">Συνέχεια</Link> */}\r\n                    </Button>\r\n                    <br />\r\n                    <Card.Text\r\n                      style={{ textDecoration: \"underline\", cursor: \"pointer\" }}\r\n                      onClick={this.clearCart}\r\n                    >\r\n                      Άδειασμα\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  orderReducer: state.orderReducer,\r\n  products: state.productReducer.products,\r\n  categories: state.productReducer.categories,\r\n  userReducer: state.userReducer,\r\n  isReady: state.productReducer.isReady,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  update_cart,\r\n  showInfoSnackbar,\r\n  GetAsyncItems,\r\n  GetAsyncCategories,\r\n  get_items,\r\n  get_ingredients,\r\n  get_categories,\r\n})(OrderMainPage);\r\n","/**\r\n * Here are the action that are called through the app and redux\r\n * about the user  and their functionalities.\r\n * First every action performs a request and then\r\n * depending on the response there is an event dispatch\r\n */\r\n\r\n/**\r\n * IMPORTS\r\n */\r\n\r\nimport axios from \"axios\";\r\nimport jwt from \"jwt-decode\";\r\nimport { headers } from \"../utils/axiosHeaders\";\r\nimport {\r\n  EMPTY_CART,\r\n  GET_USER,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  SNACKBAR_ERROR,\r\n  SNACKBAR_SUCCESS,\r\n  SUBSCRIBE_USER,\r\n  UNSUBSCRIBE_USER,\r\n  UPDATE_USER,\r\n  USER_LOADING,\r\n} from \"./actions\";\r\nimport { returnErrors } from \"./messages\";\r\n\r\n// LOGIN USER\r\nexport const login = (email, password) => (dispatch) => {\r\n  dispatch({\r\n    type: USER_LOADING,\r\n  });\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request Body\r\n  const data = {\r\n    email: email,\r\n    password: password,\r\n  };\r\n\r\n  axios\r\n    .post(\"http://localhost:8080/user/login\", data, config)\r\n    .then((res) => {\r\n      // Decode token\r\n      const token = jwt(res.data.access_token);\r\n      // const refreshToken = jwt(res.data.refresh_token);\r\n      // console.log(refreshToken);\r\n      const data = {\r\n        id: token.user_id,\r\n        user: token.user,\r\n      };\r\n      // console.log(data.user);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        token: res.data.access_token,\r\n        refresh_token: res.data.refresh_token,\r\n        user: data.user,\r\n      });\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Login successful\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      // dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        error: err.response.data.message,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: \"Invalid credits\",\r\n      });\r\n    });\r\n};\r\n\r\nexport const refreshToken = (token) => (dispatch) => {\r\n  const data = {\r\n    refresh_token: token,\r\n  };\r\n  console.log(data);\r\n  axios\r\n    .post(\"http://localhost:8080/token/refresh\", data, headers)\r\n    .then((res) => {\r\n      // Decode token\r\n      const token = jwt(res.data.access_token);\r\n      const refreshToken = jwt(res.data.refresh_token);\r\n      console.log(refreshToken);\r\n      const data = {\r\n        id: token.user_id,\r\n        user: token.user,\r\n      };\r\n      console.log(data.user);\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        token: res.data.access_token,\r\n        refresh_token: res.data.refresh_token,\r\n        user: data.user,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      // dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        error: err.response.data.message,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: \"Invalid credits\",\r\n      });\r\n    });\r\n};\r\n\r\n// Update User\r\nexport const updateUser = (data) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request Body\r\n  // const body = JSON.stringify({ username, email, password1, password2 });\r\n  const body = data;\r\n  axios\r\n    .put(\"http://localhost:8080/user/update\", body, config)\r\n    .then((res) => {\r\n      // console.log(res);\r\n      dispatch({\r\n        type: UPDATE_USER,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"User updated successfully\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Get User by id\r\nexport const getUser = (id) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  axios\r\n    .get(`http://localhost:8080/user/${id}`, config)\r\n    .then((res) => {\r\n      // console.log(res);\r\n      dispatch({\r\n        type: GET_USER,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      dispatch(returnErrors(err, err.status));\r\n    });\r\n};\r\n\r\n// REGISTER USER\r\nexport const register = (data) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request Body\r\n  // const body = JSON.stringify({ username, email, password1, password2 });\r\n  const body = data;\r\n  axios\r\n    .post(\"http://localhost:8080/user/register\", body, config)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: res.message,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// LOGOUT USER\r\nexport const logout = () => (dispatch, getState) => {\r\n  const token = sessionStorage.getItem(\"token\");\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n  axios\r\n    .post(\"http://localhost:8080/user/logout\", null, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: EMPTY_CART,\r\n      });\r\n      dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch(returnErrors(err, err.status));\r\n    });\r\n};\r\n\r\n// SUBSCRIBE USER\r\nexport const subscribe = (data) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // Request Body\r\n  const body = data;\r\n  axios\r\n    .post(\"http://localhost:8080/user/subscribe\", body, config)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: SUBSCRIBE_USER,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Subscribed successfully!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// UNSUBSCRIBE USER\r\nexport const unsubscribe = (id) => (dispatch) => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  axios\r\n    .put(`http://localhost:8080/user/subscribe/${id}`, config)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: UNSUBSCRIBE_USER,\r\n        payload: res.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Unsubscribed  successfully\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response);\r\n      dispatch(returnErrors(err, err.status));\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Setup config with token - helper function\r\nexport const tokenConfig = (getState) => {\r\n  // get token from localstorage\r\n  const token = localStorage.getItem(\"token\");\r\n  // Get token from state\r\n  console.log(token);\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // If token, add to headers config\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Form,\r\n  Nav,\r\n  Navbar,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../../../css/Pages/accountpage.css\";\r\nimport { updateUser, getUser } from \"../../../actions/user\";\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      name: \"\",\r\n      surname: \"\",\r\n      phone: \"\",\r\n      newPassword: \"\",\r\n      newPassword2: \"\",\r\n    };\r\n    this.onUpdateSubmit = this.onUpdateSubmit.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChangePasswordSubmit = this.onChangePasswordSubmit.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    userReducer: PropTypes.object.isRequired,\r\n    updateUser: PropTypes.func.isRequired,\r\n    getUser: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.userReducer.isAuthenticated === false) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    if (this.props.userReducer.hasLoaded === false) {\r\n      this.props.getUser(this.props.userReducer.user.id);\r\n    }\r\n    this.setState({\r\n      name: this.props.userReducer.user.name,\r\n      surname: this.props.userReducer.user.surname,\r\n      phone: this.props.userReducer.user.phone,\r\n      email: this.props.userReducer.user.email,\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onChangePasswordSubmit(e) {\r\n    e.preventDefault();\r\n    const data = {\r\n      id: this.props.userReducer.user.id,\r\n      password: this.state.newPassword,\r\n      reason: \"change_password\",\r\n    };\r\n    this.props.updateUser(data);\r\n  }\r\n\r\n  onUpdateSubmit(e) {\r\n    e.preventDefault();\r\n    const data = {\r\n      id: this.props.userReducer.user.id,\r\n      user: {\r\n        name: this.state.name,\r\n        surname: this.state.surname,\r\n        email: this.state.email,\r\n        phone: this.state.phone,\r\n      },\r\n      reason: \"update_user\",\r\n    };\r\n    this.props.updateUser(data);\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    if (sessionStorage.getItem(\"isAuthenticated\") === \"false\") {\r\n      return <Redirect to=\"/home\" />;\r\n    } else {\r\n      return (\r\n        <Container className=\"accountMainPage\">\r\n          <Row className=\"headerRow\">\r\n            <Navbar className=\"user-nav-bar\">\r\n              <Nav className=\"mr-auto\">\r\n                <Link className=\"nav-text nav-text-activated\" to=\"/account\">\r\n                  Ο λογαριασμός μου\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/orders\">\r\n                  Οι παραγγελίες μου\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/addresses\">\r\n                  Διευθύνσεις\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/ratings\">\r\n                  Βαθμολογίες\r\n                </Link>\r\n              </Nav>\r\n            </Navbar>\r\n          </Row>\r\n          <Row className=\"userProfileRow bodyRow\">\r\n            <div className=\"roundedContainer userProfileContainer\">\r\n              <h4> Change your values</h4>\r\n              <Form onSubmit={this.onUpdateSubmit}>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      onChange={this.onChange}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      value={this.state.name}\r\n                      placeholder=\"Enter Name\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGridLastName\">\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                      onChange={this.onChange}\r\n                      type=\"text\"\r\n                      name=\"surname\"\r\n                      value={this.state.surname}\r\n                      placeholder=\"Enter Last Name\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formGridEmail\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                      onChange={this.onChange}\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      placeholder=\"Enter email\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formGridPhone\">\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control\r\n                      type=\"tel\"\r\n                      placeholder=\"Enter phone: 69xxxxxxxx\"\r\n                      name=\"phone\"\r\n                      pattern=\"69[0-9]{8}\"\r\n                      value={this.state.phone}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n              <h4> Change your password</h4>\r\n              <Form onSubmit={this.onChangePasswordSubmit}>\r\n                <Form.Row>\r\n                  <Form.Group as={Col} controlId=\"formPassword\">\r\n                    <Form.Label>New Password</Form.Label>\r\n                    <Form.Control\r\n                      onChange={this.onChange}\r\n                      type=\"text\"\r\n                      name=\"newPassword\"\r\n                      // value={this.state.newPassword}\r\n                      placeholder=\"Enter Password\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} controlId=\"formPassword2\">\r\n                    <Form.Label>Repeat Password</Form.Label>\r\n                    <Form.Control\r\n                      onChange={this.onChange}\r\n                      type=\"text\"\r\n                      name=\"newPassword2\"\r\n                      // value={this.state.newPassword2}\r\n                      placeholder=\"Repeat Password\"\r\n                    />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateUser, getUser })(MainPage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { update_item, delete_item } from \"../../../../actions/items\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport {\r\n  Checkbox,\r\n  Collapse,\r\n  FormControlLabel,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\n\r\nclass SingleItemPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      name: \"\",\r\n      price: 0,\r\n      category: \"\",\r\n      description: \"\",\r\n      filename: \"Choose product image *\",\r\n      source: \"\",\r\n      image: null,\r\n      extra_ingredients: [\"\"],\r\n      checkedChoices: [-1],\r\n      hasIngredients: false,\r\n      showChoices: false,\r\n      isCustom: false,\r\n      choices: [],\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n    this.onChangeCheck = this.onChangeCheck.bind(this);\r\n    this.onCustomChange = this.onCustomChange.bind(this);\r\n    this.onFileChange = this.onFileChange.bind(this);\r\n    this.handleChoiceToggle = this.handleChoiceToggle.bind(this);\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n    this.showChoices = this.showChoices.bind(this);\r\n  }\r\n  componentWillMount() {\r\n    let item = this.props.location.state.item;\r\n    this.setState({\r\n      id: item.id,\r\n      name: item.name,\r\n      price: item.price,\r\n      category: item.category,\r\n      description: item.description,\r\n      filename: item.image,\r\n      choices: item.choices,\r\n      isCustom: item.custom,\r\n    });\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    // get_categories: PropTypes.func.isRequired,\r\n    update_item: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired,\r\n    choices: PropTypes.array.isRequired,\r\n    ingredients: PropTypes.array.isRequired,\r\n  };\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const item = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      price: parseFloat(this.state.price),\r\n      category: this.state.category,\r\n      ingredients: this.state.extra_ingredients.slice(1),\r\n      choices: [],\r\n      custom: this.state.isCustom,\r\n    };\r\n\r\n    for (var i in this.state.checkedChoices) {\r\n      if (this.state.checkedChoices[i] !== -1) {\r\n        item.choices.push(this.props.choices[this.state.checkedChoices[i]]);\r\n      }\r\n    }\r\n    // console.log(item);\r\n    this.props.update_item(item.id, item, \"update_product\");\r\n    this.setState({\r\n      name: \"\",\r\n      price: 0,\r\n      category: \"Kafedes\",\r\n      description: \"\",\r\n      filename: \"Choose product image *\",\r\n      source: \"\",\r\n      image: null,\r\n      extra_ingredients: [\"\"],\r\n      checkedChoices: [-1],\r\n      hasIngredients: false,\r\n      showChoices: false,\r\n      isCustom: false,\r\n      choices: [],\r\n    });\r\n  }\r\n\r\n  onDelete = () => {\r\n    const id = this.state.item.id;\r\n    const type = \"product\";\r\n    this.props.delete_item(id, type);\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onFileChange = (e) => {\r\n    console.log(e.target.files[0]);\r\n    this.setState({\r\n      image: e.target.files[0],\r\n    });\r\n  };\r\n\r\n  handleToggle = (value) => {\r\n    const currentIndex = this.state.extra_ingredients.indexOf(value);\r\n    const newChecked = [...this.state.extra_ingredients];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      extra_ingredients: newChecked,\r\n    });\r\n  };\r\n\r\n  handleChoiceToggle = (choice) => {\r\n    const currentIndex = this.state.checkedChoices.indexOf(choice);\r\n    const newChecked = [...this.state.checkedChoices];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(choice);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    this.setState({\r\n      checkedChoices: newChecked,\r\n    });\r\n    console.log(newChecked);\r\n  };\r\n\r\n  onChangeCheck() {\r\n    this.setState({ hasIngredients: !this.state.hasIngredients });\r\n    if (document.getElementById(\"ingredient-list\").style.display === \"block\") {\r\n      document.getElementById(\"ingredient-list\").style.display = \"none\";\r\n    } else {\r\n      document.getElementById(\"ingredient-list\").style.display = \"block\";\r\n    }\r\n  }\r\n\r\n  onCustomChange() {\r\n    this.setState({ isCustom: !this.state.isCustom });\r\n  }\r\n\r\n  showChoices(e) {\r\n    e.preventDefault();\r\n    this.setState({ showChoices: !this.state.showChoices });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Item Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placehodler=\"Enter name\"\r\n            defaultValue={this.state.name}\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Item description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            defaultValue={this.state.description}\r\n            placeholder=\"Enter desc\"\r\n            name=\"description\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"price\">\r\n          <Form.Label>Item price</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            defaultValue={this.state.price}\r\n            autoComplete=\"false\"\r\n            placeholder=\"Enter price\"\r\n            name=\"price\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"category\">\r\n          <Form.Label>Category</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"category\"\r\n            defaultValue={this.state.category}\r\n            onChange={this.onChange}\r\n          >\r\n            {this.props.categories.map((category, index) => {\r\n              return <option key={index}>{category.name}</option>;\r\n            })}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"choices\">\r\n          <ListItem button onClick={this.showChoices}>\r\n            <ListItemText primary=\"Select choices\" />\r\n            {this.state.showChoices ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={this.state.showChoices} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {this.props.choices.map((choice, index) => {\r\n                const labelId = `choice-item-${choice.name}`;\r\n                return (\r\n                  <ListItem\r\n                    key={index}\r\n                    role={undefined}\r\n                    dense\r\n                    button\r\n                    onClick={() => this.handleChoiceToggle(index)}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        checked={\r\n                          this.state.checkedChoices.indexOf(index) !== -1\r\n                        }\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        inputProps={{ \"aria-labelledby\": labelId }}\r\n                      />\r\n                      <ListItemText id={labelId} primary={`${choice.name}`} />\r\n                    </ListItemIcon>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Collapse>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"customProduct\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={this.state.isCustom}\r\n                onChange={this.onCustomChange}\r\n                name=\"isCustom\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Is product custom?\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"ingredients\">\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={this.state.hasIngredients}\r\n                onChange={this.onChangeCheck}\r\n                name=\"hasIngredients\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Has ingredients\"\r\n          />\r\n          <List\r\n            style={{ display: \"none\" }}\r\n            className=\"create-item-ingredient-list\"\r\n            id=\"ingredient-list\"\r\n            subhead={<li />}\r\n          >\r\n            {this.props.ingredients.map((ingredientCategory, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  <ul>\r\n                    <ListSubheader>{`${ingredientCategory[0].category}`}</ListSubheader>\r\n                    {ingredientCategory.map((ingredient, index) => {\r\n                      const labelId = `ingredient-item-${ingredient.name}`;\r\n                      return (\r\n                        <ListItem\r\n                          key={index}\r\n                          role={undefined}\r\n                          dense\r\n                          button\r\n                          onClick={() => this.handleToggle(ingredient.name)}\r\n                        >\r\n                          <ListItemIcon>\r\n                            <Checkbox\r\n                              edge=\"start\"\r\n                              checked={\r\n                                this.state.extra_ingredients.indexOf(\r\n                                  ingredient.name\r\n                                ) !== -1\r\n                              }\r\n                              tabIndex={-1}\r\n                              disableRipple\r\n                              inputProps={{ \"aria-labelledby\": labelId }}\r\n                            />\r\n                            <ListItemText\r\n                              id={labelId}\r\n                              primary={`${ingredient.name}`}\r\n                            />\r\n                          </ListItemIcon>\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </li>\r\n              );\r\n            })}\r\n          </List>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.File\r\n            id=\"custom-file\"\r\n            label=\"Custom file input\"\r\n            custom\r\n            onChange={this.onFileChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Update\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={this.onDelete}>\r\n          DELETE\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  categories: state.productReducer.categories,\r\n  choices: state.productReducer.choices,\r\n  ingredients: state.productReducer.ingredients,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  update_item,\r\n  delete_item,\r\n})(SingleItemPage);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../../css/Layout/general.css\";\r\nimport { connect } from \"react-redux\";\r\nimport PlacesAutocomplete from \"react-places-autocomplete\";\r\nimport { updateUser } from \"../../actions/user\";\r\n\r\nimport {\r\n  geocodeByAddress,\r\n  // geocodeByPlaceId,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n// import AlertModal from \"../MainPanel/Pages/Alert/AlertModal\";\r\n// import EditAddressModal from \"./EditAddressModal\";/\r\n\r\nclass AddressModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      addressName: \"\",\r\n      addressNumber: \"\",\r\n      zipCode: \"\",\r\n      cityName: \"\",\r\n      areaName: \"\",\r\n      completeAddress: {},\r\n      latitude: 0,\r\n      longitude: 0,\r\n      showErrorModal: false,\r\n      showEditModal: false,\r\n      errorMessage: \"\",\r\n    };\r\n    this.onAddAddress = this.onAddAddress.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    userReducer: PropTypes.object.isRequired,\r\n    updateUser: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleChange = (address) => {\r\n    this.setState({ address });\r\n    // console.log(this.state);\r\n  };\r\n\r\n  handleSelect = (address) => {\r\n    // console.log(address);\r\n    geocodeByAddress(address)\r\n      .then((results) => this.saveResults(results))\r\n      .then((results) => getLatLng(results[0]))\r\n      .then((latLng) =>\r\n        this.setState({\r\n          latitude: latLng.lat,\r\n          longitude: latLng.lng,\r\n        })\r\n      )\r\n      .then((latLng) => console.log(\"Success\", this.state))\r\n      .catch((error) => console.error(\"Error\", error));\r\n  };\r\n\r\n  saveResults = (results) => {\r\n    console.log(results);\r\n    var opts = results[0].address_components;\r\n    this.setState({\r\n      address: results[0].formatted_address,\r\n      addressName: opts[1].long_name,\r\n      addressNumber: opts[0].short_name,\r\n      areaName: opts[2].long_name,\r\n      zipCode: opts[5].long_name,\r\n    });\r\n    return results;\r\n  };\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      address: \"\",\r\n      addressName: \"\",\r\n      addressNumber: \"\",\r\n      areaName: \"\",\r\n      zipCode: \"\",\r\n    });\r\n  }\r\n\r\n  onAddAddress(e) {\r\n    e.preventDefault();\r\n    // console.log(this.props);\r\n\r\n    const data = {\r\n      id: this.props.userReducer.user.id,\r\n      address: {\r\n        area_name: this.state.areaName,\r\n        address_name: this.state.addressName,\r\n        address_number: this.state.addressNumber,\r\n        zipcode: this.state.zipCode,\r\n        latitude: this.state.latitude,\r\n        longitude: this.state.longitude,\r\n      },\r\n      reason: \"add_address\",\r\n    };\r\n    this.props.editAddress && this.props.editAddress(false, true, data.address);\r\n\r\n    // if (\r\n    //   this.state.addressName === \"\" ||\r\n    //   this.state.addressNumber === \"\" ||\r\n    //   this.state.zipCode === \"\" ||\r\n    //   this.state.address === \"\"\r\n    // ) {\r\n    //   this.setState({\r\n    //     showErrorModal: true,\r\n    //     errorMessage: \"Invalid location\",\r\n    //   });\r\n    // } else {\r\n    //   this.props.updateUser(data);\r\n    //   this.setState({\r\n    //     address: \"\",\r\n    //     addressName: \"\",\r\n    //     addressNumber: \"\",\r\n    //     zipCode: \"\",\r\n    //     cityName: \"\",\r\n    //     areaName: \"\",\r\n    //     latitude: 0,\r\n    //     longitude: 0,\r\n    //     showErrorModal: false,\r\n    //     errorMessage: \"\",\r\n    //   });\r\n    //   this.props.closeModal();\r\n    // }\r\n  }\r\n  showEditModal = () => {\r\n    this.setState({ showEditModal: !this.state.showEditModal });\r\n  };\r\n\r\n  closeModal(e) {\r\n    e.stopPropagation();\r\n  }\r\n  render() {\r\n    let style = {};\r\n    if (this.props.displayModal) {\r\n      style = { display: \"block\" };\r\n    } else {\r\n      style = { display: \"none\" };\r\n    }\r\n    return (\r\n      <div className=\"modal \" onClick={this.props.closeModal} style={style}>\r\n        <div\r\n          className=\"modal-content address-modal-content\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <div className=\"modal-content-header\">\r\n            <span className=\"modal-content-header-title\">Add new address</span>\r\n            <span className=\"close\" onClick={this.props.closeModal}>\r\n              &times;\r\n            </span>\r\n          </div>\r\n          <div className=\"modal-content-body\">\r\n            <PlacesAutocomplete\r\n              value={this.state.address}\r\n              onChange={this.handleChange}\r\n              onSelect={this.handleSelect}\r\n              searchOptions={{\r\n                componentRestrictions: {\r\n                  country: \"gr\",\r\n                },\r\n              }}\r\n            >\r\n              {({\r\n                getInputProps,\r\n                suggestions,\r\n                getSuggestionItemProps,\r\n                loading,\r\n              }) => (\r\n                <div className=\"autocomplete-div\">\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Search Places ...\",\r\n                      className: \"location-search-input\",\r\n                    })}\r\n                  />\r\n                  <div className=\"autocomplete-dropdown-container\">\r\n                    {loading && <div>Loading...</div>}\r\n                    {suggestions.map((suggestion, index) => {\r\n                      const className = suggestion.active\r\n                        ? \"suggestion-item--active\"\r\n                        : \"suggestion-item\";\r\n                      // inline style for demonstration purpose\r\n                      const style = suggestion.active\r\n                        ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                        : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            className,\r\n                            style,\r\n                          })}\r\n                          key={index}\r\n                        >\r\n                          <span>{suggestion.description}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n          </div>\r\n          <div className=\"modal-content-footer\">\r\n            <Button\r\n              onClick={this.onAddAddress}\r\n              className=\"modal-content-footer-button\"\r\n            >\r\n              {/* Προσθήκη */}\r\n              Συνέχεια\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateUser })(AddressModal);\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/common/marker.css\";\r\n\r\nclass Marker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: \"\",\r\n      name: \"\",\r\n      id: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n  render() {\r\n    let color = this.props.color;\r\n    let name = this.props.name;\r\n    // let id = this.props.id;\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"pin bounce\"\r\n          style={{ backgroundColor: color, cursor: \"pointer\" }}\r\n          title={name}\r\n        />\r\n        <div className=\"pulse\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Marker;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Form } from \"react-bootstrap\";\r\nimport \"../../css/Layout/general.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../../actions/user\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nimport Marker from \"../Layout/Marker\";\r\n\r\nclass EditAddressModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      address: \"\",\r\n      addressName: \"\",\r\n      addressNumber: \"\",\r\n      zipCode: \"\",\r\n      cityName: \"\",\r\n      areaName: \"\",\r\n      text: \"\",\r\n      center: {\r\n        lat: 0,\r\n        lng: 0,\r\n      },\r\n      zoom: 17,\r\n    };\r\n\r\n    this.onAddAddress = this.onAddAddress.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let text;\r\n    if (this.props.updateAddress) {\r\n      text = \"Ενημέρωση\";\r\n    } else {\r\n      text = \"Προσθήκη\";\r\n    }\r\n    console.log(this.props.address);\r\n    let addr = this.props.address;\r\n    if (addr.latitude === 0) {\r\n      addr.latitude = 37.892267385003336;\r\n    }\r\n    if (addr.longitude === 0) {\r\n      addr.longitude = 23.749797071179643;\r\n    }\r\n    this.setState({\r\n      address: addr.address,\r\n      addressName: addr.address_name,\r\n      addressNumber: addr.address_number,\r\n      areaName: addr.area_name,\r\n      zipCode: addr.zipcode,\r\n      text: text,\r\n      center: {\r\n        lat: addr.latitude,\r\n        lng: addr.longitude,\r\n      },\r\n    });\r\n  }\r\n\r\n  static propTypes = {\r\n    userReducer: PropTypes.object.isRequired,\r\n    updateUser: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onChange = (e) => {\r\n    // var newState = this.state;\r\n    // var newName = e.target.name;\r\n    // newState[newName] = e.target.value;\r\n\r\n    // var newAddress =\r\n    //   newState.addressName +\r\n    //   \" \" +\r\n    //   newState.addressNumber +\r\n    //   \", \" +\r\n    //   newState.areaName +\r\n    //   \" \" +\r\n    //   newState.zipCode +\r\n    //   \" , Greece\";\r\n    // geocodeByAddress(newAddress)\r\n    //   .then((results) => getLatLng(results[0]))\r\n    //   .then(\r\n    //     (latLng) => (\r\n    //       (newState.center.lat = latLng.lat), (newState.center.lng = latLng.lng)\r\n    //     )\r\n    //   )\r\n    //   .then(this.setState(newState));\r\n\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  // handleChange = (address) => {\r\n  //   console.log(this.props);\r\n  // };\r\n\r\n  //   handleSelect = (address) => {\r\n  //     geocodeByAddress(address)\r\n  //       .then((results) => this.saveResults(results))\r\n  //       .then((results) => getLatLng(results[0]))\r\n  //       .then((latLng) => console.log(\"Success\", latLng))\r\n  //       .catch((error) => console.error(\"Error\", error));\r\n  //   };\r\n\r\n  //   saveResults = (results) => {\r\n  //     console.log(results);\r\n  //     var opts = results[0].address_components;\r\n  //     this.setState({\r\n  //       address: results[0].formatted_address,\r\n  //       addressName: opts[1].long_name,\r\n  //       addressNumber: opts[0].short_name,\r\n  //       areaName: opts[2].long_name,\r\n  //       zipCode: opts[5].long_name,\r\n  //     });\r\n  //     return results;\r\n  //   };\r\n\r\n  onAddAddress(e) {\r\n    e.preventDefault();\r\n    let addressname = document.getElementById(\"formGridAddressName\").value;\r\n    let addressnumber = document.getElementById(\"formGridAddressNumber\").value;\r\n    let areaname = document.getElementById(\"formGridAreaName\").value;\r\n    let zipcode = document.getElementById(\"formGridZipCode\").value;\r\n    // console.log(this.props.address);\r\n    const data = {\r\n      id: this.props.userReducer.user.id,\r\n      address_id: \"\",\r\n      address: {\r\n        area_name: areaname,\r\n        address_name: addressname,\r\n        address_number: addressnumber,\r\n        zipcode: zipcode,\r\n      },\r\n      reason: \"\",\r\n      index: 0,\r\n    };\r\n    if (this.props.updateAddress) {\r\n      //   {**UPDATE ADDRESS**}\r\n      data.reason = \"update_address\";\r\n      data.address_id = this.props.address.id;\r\n    } else {\r\n      //   {**ADD ADDRESS**}\r\n      data.reason = \"add_address\";\r\n    }\r\n    console.log(data);\r\n    this.props.updateUser(data);\r\n    this.setState({\r\n      address: \"\",\r\n      addressName: \"\",\r\n      addressNumber: \"\",\r\n      zipCode: \"\",\r\n      cityName: \"\",\r\n      areaName: \"\",\r\n    });\r\n    this.props.closeModal();\r\n  }\r\n\r\n  closeModal(e) {\r\n    this.setState({\r\n      address: \"\",\r\n      addressName: \"\",\r\n      addressNumber: \"\",\r\n      zipCode: \"\",\r\n      cityName: \"\",\r\n      areaName: \"\",\r\n    });\r\n    e.stopPropagation();\r\n  }\r\n  render() {\r\n    let style = {};\r\n    if (this.props.displayModal) {\r\n      style = { display: \"block\" };\r\n    } else {\r\n      style = { display: \"none\" };\r\n    }\r\n    return (\r\n      <div\r\n        className=\"modal addressModal\"\r\n        onClick={this.props.closeModal}\r\n        style={style}\r\n      >\r\n        <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n          <div className=\"modal-content-header\">\r\n            <span className=\"modal-content-header-title\">Edit Address</span>\r\n            <span className=\"close\" onClick={this.props.closeModal}>\r\n              &times;\r\n            </span>\r\n          </div>\r\n          <div className=\"modal-content-body\">\r\n            <div className=\"modal-content-body-col left-col\">\r\n              <Form onSubmit={this.onSubmit}>\r\n                <Form.Group as={Col} controlId=\"formGridAddressName\">\r\n                  <Form.Label>Address Name</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"addressName\"\r\n                    value={this.state.addressName}\r\n                    // defaultValue={this.props.address.address_name}\r\n                    placeholder=\"Address Name\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridAddressNumber\">\r\n                  <Form.Label>Address Number</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"addressNumber\"\r\n                    value={this.state.addressNumber}\r\n                    // defaultValue={this.props.address.address_number}\r\n                    placeholder=\"Address Number\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridAreaName\">\r\n                  <Form.Label>Area Name</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"areaName\"\r\n                    value={this.state.areaName}\r\n                    // defaultValue={this.props.address.area_name}\r\n                    placeholder=\"Area Name\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group as={Col} controlId=\"formGridZipCode\">\r\n                  <Form.Label>Zip Code</Form.Label>\r\n                  <Form.Control\r\n                    onChange={this.onChange}\r\n                    type=\"text\"\r\n                    name=\"zipCode\"\r\n                    value={this.state.zipCode}\r\n                    // defaultValue={this.props.address.zipcode}\r\n                    placeholder=\"Zip Code\"\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n            <div className=\"modal-content-body-col right-col\">\r\n              <div style={{ height: \"100%\", width: \"100%\" }}>\r\n                <GoogleMapReact\r\n                  defaultCenter={this.state.center}\r\n                  // center={this.state.center}\r\n                  defaultZoom={this.state.zoom}\r\n                >\r\n                  <Marker\r\n                    eventHandlers={this.eventHandlers}\r\n                    lat={this.state.center.lat}\r\n                    lng={this.state.center.lng}\r\n                    draggable={true}\r\n                    name=\"Here\"\r\n                    color=\"blue\"\r\n                  />\r\n                </GoogleMapReact>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-content-footer\">\r\n            <Button\r\n              onClick={this.onAddAddress}\r\n              className=\"modal-content-footer-button\"\r\n            >\r\n              {this.state.text}\r\n              {/* Αποθήκευση */}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateUser })(EditAddressModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../../css/Pages/orderpage.css\";\r\nimport { Redirect } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  send_order,\r\n  empty_cart,\r\n  order_accepted,\r\n  clearReducer,\r\n} from \"../../../actions/orders\";\r\nimport { getUser } from \"../../../actions/user\";\r\nimport {\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  List,\r\n  TextField,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  FormGroup,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddressModal from \"../../Modals/AddressModal\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport EditAddressModal from \"../../Modals/EditAddressModal\";\r\nimport { showErrorSnackbar } from \"../../../actions/snackbar\";\r\nimport { FormLabel } from \"react-bootstrap\";\r\n\r\nconst availableTipOptions = [0.5, 1.0, 1.5, 2.0, 5.0, 10.0];\r\n\r\nclass PreCompleteOrderPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.eventSource = new EventSource(\r\n      `http://localhost:8080/sse/events/${props.match.params.id}`\r\n    );\r\n    this.state = {\r\n      id: 0,\r\n      availableAddress: [],\r\n      payment_type: \"Cash\",\r\n      payWithCard: false,\r\n      payWithCash: true,\r\n      payWithPaypal: false,\r\n      deliveryOption: \"Delivery\",\r\n      userDetails: {\r\n        bellName: \"\",\r\n        floor: \"\",\r\n      },\r\n      selectedAddress: {},\r\n      tips: \"0\",\r\n      comments: \"\",\r\n      showAddressModal: false,\r\n      showEditModal: false,\r\n      phone: \"\",\r\n      orderStatus: {\r\n        accepted: false,\r\n        timeToDelivery: 0,\r\n        send: false,\r\n        awaiting: false,\r\n      },\r\n      hasLoaded: false,\r\n    };\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.recieveOrder = this.recieveOrder.bind(this);\r\n    this.sendOrder = this.sendOrder.bind(this);\r\n    this.handlePaymentChange = this.handlePaymentChange.bind(this);\r\n    this.handleTipsChange = this.handleTipsChange.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    send_order: PropTypes.func.isRequired,\r\n    showErrorSnackbar: PropTypes.func.isRequired,\r\n    empty_cart: PropTypes.func.isRequired,\r\n    getUser: PropTypes.func.isRequired,\r\n    order_accepted: PropTypes.func.isRequired,\r\n    userReducer: PropTypes.object.isRequired,\r\n    orderReducer: PropTypes.object.isRequired,\r\n    clearReducer: PropTypes.func.isRequired,\r\n  };\r\n  handleTipsChange(tip) {\r\n    this.setState({ tips: tip });\r\n  }\r\n\r\n  recieveOrder(response) {\r\n    // console.log(\"here\");\r\n    let data = JSON.parse(response.data);\r\n    console.log(data);\r\n    // let orderStatus = this.state.orderStatus;\r\n    // orderStatus.accepted = data.accepted;\r\n    // orderStatus.awaiting = false;\r\n    // orderStatus.timeToDelivery = data.time;\r\n    this.props.order_accepted(data.time);\r\n  }\r\n\r\n  handlePaymentChange = (type) => {\r\n    switch (type) {\r\n      case \"cash\":\r\n        document.getElementById(\"tip-div\").style.display = \"block\";\r\n        this.setState({\r\n          payWithCard: false,\r\n          payWithCash: true,\r\n          payWithPaypal: false,\r\n          payment_type: \"cash\",\r\n        });\r\n        break;\r\n      case \"card\":\r\n        document.getElementById(\"tip-div\").style.display = \"none\";\r\n        this.setState({\r\n          payWithCard: true,\r\n          payWithCash: false,\r\n          payWithPaypal: false,\r\n          payment_type: \"card\",\r\n        });\r\n        break;\r\n      case \"paypal\":\r\n        document.getElementById(\"tip-div\").style.display = \"none\";\r\n        this.setState({\r\n          payWithCard: false,\r\n          payWithCash: false,\r\n          payWithPaypal: true,\r\n          payment_type: \"paypal\",\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  selectAddressModal = (showadd, showedit, address) => {\r\n    console.log(showadd, showedit, address);\r\n    this.setState({\r\n      showAddressModal: showadd,\r\n      showEditModal: showedit,\r\n      selectedAddress: address,\r\n    });\r\n    // console.log(address);\r\n    // this.setState({\r\n    //   showAddressModal: showadd,\r\n    //   showEditModal: showedit,\r\n    //   selectedAddress: address,\r\n    // });\r\n  };\r\n\r\n  sendOrder = (e) => {\r\n    // check input requirements\r\n    const order = {\r\n      products: this.props.orderReducer.products,\r\n      user_id: this.props.userReducer.user.id,\r\n      delivery_type: this.state.deliveryOption,\r\n      pre_discount_price: this.props.orderReducer.totalPrice,\r\n      payment_type: this.state.payment_type,\r\n      tips: parseFloat(this.state.tips),\r\n      comments: this.state.comments,\r\n      user_details: {\r\n        name: this.props.userReducer.user.name,\r\n        surname: this.props.userReducer.user.surname,\r\n        address: this.state.selectedAddress,\r\n        phone: this.state.phone,\r\n        bell_name: this.state.userDetails.bellName,\r\n        floor: this.state.userDetails.floor,\r\n      },\r\n    };\r\n\r\n    if (this.validateFields(order)) {\r\n      this.props.send_order(order);\r\n      // console.log(order);\r\n    }\r\n  };\r\n\r\n  validateFields = (order) => {\r\n    const mobilePhoneRegex = new RegExp(/^69[0-9]{8}/);\r\n    const homePhoneRegex = new RegExp(/^21[0-9]{8}/);\r\n    if (order.delivery_type === \"\") {\r\n      this.props.showErrorSnackbar(\"Please select delivery type\");\r\n      return false;\r\n    } else if (order.payment_type === \"\") {\r\n      this.props.showErrorSnackbar(\"Please select payment type\");\r\n      return false;\r\n    } else if (order.user_details.address === \"\") {\r\n      this.props.showErrorSnackbar(\"Please select an adress\");\r\n      return false;\r\n    } else if (\r\n      order.user_details.floor === \"\" ||\r\n      order.user_details.bell_name === \"\"\r\n    ) {\r\n      this.props.showErrorSnackbar(\"Please enter floor and bell name\");\r\n      return false;\r\n    } else if (\r\n      (mobilePhoneRegex.test(order.user_details.phone) === false &&\r\n        homePhoneRegex.test(order.user_details.phone) === false) ||\r\n      order.user_details.length > 10\r\n    ) {\r\n      this.props.showErrorSnackbar(\"Please enter valid phone number\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    let userDetails = this.state.userDetails;\r\n    switch (e.target.name) {\r\n      case \"comment\":\r\n        this.setState({ comments: e.target.value });\r\n        break;\r\n      case \"bellName\":\r\n        userDetails.bellName = e.target.value;\r\n        this.setState({ userDetails: userDetails });\r\n        break;\r\n      case \"floorNumber\":\r\n        userDetails.floor = e.target.value;\r\n        this.setState({ userDetails: userDetails });\r\n        break;\r\n      case \"phone\":\r\n        this.setState({ phone: e.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  onSelectChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onAddressChange = (e) => {\r\n    this.setState({\r\n      selectedAddress: this.props.userReducer.user.addresses[e.target.value],\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.eventSource.onmessage = (e) => this.recieveOrder(e);\r\n    console.log(this.props);\r\n    if (this.props.userReducer.user !== null) {\r\n      if (this.props.userReducer.user.addresses.length > 0) {\r\n        this.setState({\r\n          selectedAddress: this.props.userReducer.user.addresses[0],\r\n        });\r\n      }\r\n      if (this.props.userReducer.user.last_order !== null) {\r\n        let newDetails = this.state.userDetails;\r\n        let last = this.props.userReducer.user.last_order;\r\n        newDetails.bellName = last.user_details.Bell_name;\r\n        newDetails.floor = last.user_details.Floor;\r\n        this.setState({\r\n          userDetails: newDetails,\r\n          phone: last.user_details.Phone,\r\n        });\r\n      }\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.props.orderReducer.sent && !this.props.orderReducer.pending) {\r\n      this.props.clearReducer();\r\n    }\r\n  }\r\n\r\n  showEditModal = (bool) => {\r\n    this.setState({\r\n      showEditModal: bool,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let addAddressModal;\r\n    let editAddressModal;\r\n    let authenticated =\r\n      sessionStorage.getItem(\"isAuthenticated\") === \"true\" ? true : false;\r\n    if (!authenticated) {\r\n      return <Redirect to=\"/order\" />;\r\n    }\r\n    if (this.state.showAddressModal) {\r\n      addAddressModal = (\r\n        <AddressModal\r\n          displayModal={this.state.showAddressModal}\r\n          closeModal={() => this.selectAddressModal(false, false, \"\")}\r\n          editAddress={(showAdd, showEdit, address) =>\r\n            this.selectAddressModal(showAdd, showEdit, address)\r\n          }\r\n        />\r\n      );\r\n    }\r\n    if (this.state.showEditModal) {\r\n      editAddressModal = (\r\n        <EditAddressModal\r\n          address={this.state.selectedAddress}\r\n          updateAddress={false}\r\n          displayModal={this.state.showEditModal}\r\n          closeModal={() => this.showEditModal(false)}\r\n        />\r\n      );\r\n    }\r\n    if (this.props.orderReducer.pending && !this.props.orderReducer.recieved) {\r\n      console.log(\"3\");\r\n      return (\r\n        <div className=\"loading-div\">\r\n          <CircularProgress disableShrink />{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n    if (this.props.orderReducer.sent && !this.props.orderReducer.pending) {\r\n      console.log(this.props.orderReducer.timeToDelivery);\r\n      return (\r\n        <div className=\"loading-div\">\r\n          Your order has been{\" \"}\r\n          {this.props.orderReducer.accepted ? <p>accepted</p> : <p>declined</p>}\r\n          {this.props.orderReducer.accepted ? (\r\n            <span>\r\n              It will be there in {this.props.orderReducer.timeToDelivery}\r\n            </span>\r\n          ) : (\r\n            <span></span>\r\n          )}\r\n          <Link to=\"/home\">\r\n            <Button>OK</Button>\r\n          </Link>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"pre-order-container\">\r\n          <div className=\"pre-order-container-body\">\r\n            <div className=\"pre-order-col pre-order-user-details\">\r\n              <div className=\"pre-order-col-container\">\r\n                <div className=\"pre-order-col-title\">1. User Details</div>\r\n                <div className=\"pre-order-col-subdiv\">\r\n                  <FormControl className=\"selectDeliveryControl\">\r\n                    <InputLabel id=\"selectDeliveryLabel\">\r\n                      Τρόπος παραγγελίας\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"selectDeliveryLabel\"\r\n                      id=\"selectDelivery\"\r\n                      name=\"deliveryOption\"\r\n                      onChange={this.onSelectChange}\r\n                      required\r\n                      defaultValue=\"Delivery\"\r\n                    >\r\n                      <MenuItem value=\"Delivery\">Delivery</MenuItem>\r\n                      <MenuItem value=\"TakeAway\">\r\n                        Παραλαβή απο το κατάστημα\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n                <div className=\"pre-order-col-subdiv\">\r\n                  <FormControl className=\"selectAddressControl\">\r\n                    <InputLabel id=\"selectAddressLabel\">\r\n                      Select Address\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"selectAddressLabel\"\r\n                      id=\"selectAddress\"\r\n                      name=\"selectedAddress\"\r\n                      value={\r\n                        this.props.userReducer.user.addresses.length > 0\r\n                          ? \"0\"\r\n                          : \"\"\r\n                      }\r\n                      onChange={this.onAddressChange}\r\n                      required\r\n                    >\r\n                      {this.props.userReducer.user.addresses.map(\r\n                        (address, index) => {\r\n                          return (\r\n                            <MenuItem value={index} key={index}>\r\n                              {address.address_name} {address.address_number},{\" \"}\r\n                              {address.area_name}\r\n                            </MenuItem>\r\n                          );\r\n                        }\r\n                      )}\r\n                      <MenuItem\r\n                        onClick={() => this.selectAddressModal(true, false, \"\")}\r\n                      >\r\n                        Add new\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </div>\r\n                <div className=\"pre-order-col-subdiv\">\r\n                  <form className=\"pre-order-info-form\">\r\n                    <div className=\"pre-order-info-form-row\">\r\n                      <TextField\r\n                        id=\"bellName\"\r\n                        name=\"bellName\"\r\n                        value={this.state.userDetails.bellName}\r\n                        label=\"Κουδούνι *\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Όνομα στο κουδούνι\"\r\n                        className=\"pre-complete-input\"\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"pre-order-info-form-row\">\r\n                      <div className=\"form-custom-row-group\">\r\n                        <TextField\r\n                          id=\"floorNumber\"\r\n                          name=\"floorNumber\"\r\n                          label=\"Όροφος *\"\r\n                          value={this.state.userDetails.floor}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"Όροφος\"\r\n                          className=\"pre-complete-input\"\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-custom-row-group\">\r\n                        <TextField\r\n                          id=\"phone\"\r\n                          type=\"tel\"\r\n                          name=\"phone\"\r\n                          inputProps={{\r\n                            pattern: \"69[0-9]{8}\",\r\n                          }}\r\n                          label=\"Τηλέφωνο επικοινωνίας\"\r\n                          value={this.state.phone}\r\n                          variant=\"outlined\"\r\n                          placeholder=\"Τηλέφωνο επικοινωνίας: 69xxxxxxxx\"\r\n                          className=\"pre-complete-input\"\r\n                          onChange={this.onChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"pre-order-info-form-row\">\r\n                      <TextField\r\n                        id=\"comments\"\r\n                        name=\"comment\"\r\n                        label=\"Σχόλια\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Έξτρα σχόλια\"\r\n                        rows={4}\r\n                        multiline\r\n                        className=\"pre-complete-input\"\r\n                        onChange={this.onChange}\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"pre-order-col pre-order-payment-details\">\r\n              <div className=\"pre-order-col-container\">\r\n                <div className=\"pre-order-col-title\">2. Payment Options</div>\r\n                <div className=\"pre-order-col-subdiv\">\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={this.state.payWithCard}\r\n                        onChange={() => this.handlePaymentChange(\"card\")}\r\n                        name=\"Card\"\r\n                      />\r\n                    }\r\n                    label=\"Credit Card\"\r\n                  />\r\n                </div>\r\n                <div className=\"pre-order-col-subdiv\">\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={this.state.payWithPaypal}\r\n                        onChange={() => this.handlePaymentChange(\"paypal\")}\r\n                        name=\"Paypal\"\r\n                      />\r\n                    }\r\n                    label=\"Paypal\"\r\n                  />\r\n                </div>\r\n                <div className=\"pre-order-col-subdiv\">\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={this.state.payWithCash}\r\n                        onChange={() => this.handlePaymentChange(\"cash\")}\r\n                        name=\"Cash\"\r\n                      />\r\n                    }\r\n                    label=\"Cash\"\r\n                  />\r\n                </div>\r\n                <div\r\n                  className=\"pre-order-col-subdiv\"\r\n                  id=\"tip-div\"\r\n                  style={{ display: \"block\" }}\r\n                >\r\n                  <FormControl>\r\n                    <FormLabel>Select Tips</FormLabel>\r\n                    <FormGroup row={true}>\r\n                      {availableTipOptions.map((option, index) => {\r\n                        let active = false;\r\n                        if (this.state.tips === option) {\r\n                          active = true;\r\n                        }\r\n                        return (\r\n                          <FormControlLabel\r\n                            key={index}\r\n                            value={String(option)}\r\n                            control={\r\n                              <Checkbox\r\n                                checked={active}\r\n                                name={option.toString()}\r\n                                onChange={() => this.handleTipsChange(option)}\r\n                              />\r\n                            }\r\n                            label={option}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </FormGroup>\r\n                  </FormControl>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"pre-order-col pre-order-complete-order\">\r\n              <div className=\"pre-order-col-container\">\r\n                <div className=\"pre-order-col-title\">3. Complete Order</div>\r\n                <div className=\"pre-order-col-subdiv\">\r\n                  <span>Σύνολο: {this.props.orderReducer.totalPrice} €</span>\r\n                  <br />\r\n                  <button\r\n                    className=\"complete-order-button\"\r\n                    type=\"submit\"\r\n                    onClick={this.sendOrder}\r\n                  >\r\n                    Αποστολή{\" \"}\r\n                  </button>\r\n                </div>\r\n                <div className=\"pre-order-col-subdiv\">\r\n                  <List className=\"pre-order-item-list\">\r\n                    {this.props.orderReducer.products.map((prod, index) => {\r\n                      return (\r\n                        <ListItem\r\n                          key={index}\r\n                          disabled\r\n                          className=\"pre-order-item-list-item\"\r\n                        >\r\n                          <ListItemText\r\n                            type=\"li\"\r\n                            primary={`${prod.quantity} x ${prod.item.name}`}\r\n                            secondary={`${prod.optionAnswers.join()} , ${\r\n                              prod.comment\r\n                            }`}\r\n                          />\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                  <span>payment-details</span>\r\n                  <br />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {addAddressModal}\r\n          {editAddressModal}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n  orderReducer: state.orderReducer,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  send_order,\r\n  showErrorSnackbar,\r\n  empty_cart,\r\n  order_accepted,\r\n  clearReducer,\r\n  getUser,\r\n})(PreCompleteOrderPage);\r\n","export default __webpack_public_path__ + \"static/media/transparent-logo.adf30206.png\";","/**\r\n * Footer Component Contains Search Bar and Menu Links.\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  Image,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { PersonCircle } from \"react-bootstrap-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout, refreshToken } from \"../../actions/user\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../css/Layout/header.css\";\r\nimport logo from \"../../assets/Images/transparent-logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedLangeuage: \"EN\",\r\n      searchText: \"\",\r\n      focus: false,\r\n      isAuthenticated: \"\",\r\n      results: [],\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    // isAuthenticated: PropTypes.string.isRequired,\r\n    logout: PropTypes.func.isRequired,\r\n    products: PropTypes.array.isRequired,\r\n  };\r\n\r\n  onClose = (e) => {\r\n    // console.log(\"e\");\r\n    this.props.onClose && this.props.onClose(e);\r\n  };\r\n\r\n  onChangeLang(lang) {\r\n    this.setState({ selectedLangeuage: lang });\r\n  }\r\n\r\n  logOut() {\r\n    this.props.logout();\r\n  }\r\n\r\n  render() {\r\n    let autheticated = sessionStorage.getItem(\"isAuthenticated\");\r\n    if (autheticated === \"true\") {\r\n      autheticated = true;\r\n    } else {\r\n      autheticated = false;\r\n    }\r\n    if (autheticated === \"true\" && this.props.user === null) {\r\n      this.props.refreshToken(this.props.refresh_token);\r\n    }\r\n    return (\r\n      <Container fluid className=\"headerContainer\">\r\n        <Col>\r\n          <Link to=\"/home\">\r\n            <Image src={logo} className=\"headerLogo\" />\r\n          </Link>\r\n        </Col>\r\n        <Col xs={6} md={6}>\r\n          {/* <SearchBar /> */}\r\n        </Col>\r\n        <Col>\r\n          <Navbar>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <NavDropdown\r\n                  title={this.state.selectedLangeuage}\r\n                  id=\"basic-nav-dropdown\"\r\n                >\r\n                  <NavDropdown.Item onSelect={() => this.onChangeLang(\"GR\")}>\r\n                    GR\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item onSelect={() => this.onChangeLang(\"EN\")}>\r\n                    EN\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n                {autheticated ? (\r\n                  <Row style={{ marginLeft: 10 }}>\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                        <PersonCircle />\r\n                        Profile\r\n                      </Dropdown.Toggle>\r\n\r\n                      <Dropdown.Menu>\r\n                        <ul>\r\n                          <li className=\"header-menu-li\">\r\n                            <Link to=\"/account\">My profile</Link>\r\n                          </li>\r\n                          <li className=\"header-menu-li\">\r\n                            <Link to=\"/account/orders\">My orders</Link>\r\n                          </li>\r\n                          <li className=\"header-menu-li\">\r\n                            <Link to=\"/account/addresses\">My addresses</Link>\r\n                          </li>\r\n                          <li className=\"header-menu-li\">\r\n                            <Link to=\"/account/ratings\">My ratings</Link>\r\n                          </li>\r\n                          <li className=\"header-menu-li\">\r\n                            <Link to=\"/home\" onClick={() => this.logOut()}>\r\n                              Logout\r\n                            </Link>\r\n                          </li>\r\n                        </ul>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </Row>\r\n                ) : (\r\n                  // <Row style={{ marginLeft: 10 }}>\r\n                  <Nav.Link\r\n                    onClick={(e) => {\r\n                      this.onClose(e);\r\n                    }}\r\n                  >\r\n                    Login/Register\r\n                  </Nav.Link>\r\n                )}\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userID: sessionStorage.getItem(\"userID\"),\r\n  refresh_token: sessionStorage.getItem(\"refreshToken\"),\r\n  user: state.userReducer.user,\r\n  products: state.productReducer.products,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout, refreshToken })(Header);\r\n","/**\r\n * Footer Component Contains Subscription Logic\r\n * and all the needed links to pages/text we need.\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Col, Container, Row, Image } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../css/Layout/footer.css\";\r\nimport logo from \"../../assets/Images/transparent-logo.png\";\r\nimport { ArrowRightCircle } from \"react-bootstrap-icons\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FormHelperText, TextField } from \"@material-ui/core\";\r\nimport { subscribe } from \"../../actions/user\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Footer extends Component {\r\n  /**\r\n   *\r\n   * @param {*} props\r\n   * Constructor that inherits the parent props.\r\n   * State: {\r\n   *           News letter email,\r\n   * }\r\n   *\r\n   */\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newsletterEmail: \"\",\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    subscribe: PropTypes.func.isRequired,\r\n  };\r\n\r\n  /**\r\n   * Input change event\r\n   */\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  /**\r\n   * On email subscription check if mail is valid throught regex\r\n   */\r\n\r\n  onSubscribe = () => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (re.test(this.state.newsletterEmail)) {\r\n      document.getElementById(\"inputNewsLetterHelperText\").style.display =\r\n        \"none\";\r\n      document.getElementById(\"inputNewsLetterHelperText\").style.color =\r\n        \"green\";\r\n      document.getElementById(\"inputNewsLetterHelperText\").innerHTML =\r\n        \"Success\";\r\n      const data = {\r\n        email: this.state.newsletterEmail,\r\n      };\r\n      this.props.subscribe(data);\r\n      // console.log(\"Email subscribed:\" + this.state.newsletterEmail);\r\n      this.setState({ newsletterEmail: \"\" });\r\n    } else {\r\n      document.getElementById(\"inputNewsLetterHelperText\").style.display =\r\n        \"block\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid={true} className=\"footerContainer\">\r\n        {/* \r\n            ########################## Upper Row ################################\r\n          */}\r\n        <Row id=\"footerRow\">\r\n          {/* \r\n            ########################## Logo Column ################################\r\n          */}\r\n          <Col className=\"logoCol\">\r\n            <Image src={logo} className=\"headerLogo\" />\r\n            <Row>\r\n              <Col>\r\n                <SocialIcon\r\n                  style={{ height: 40, width: 40 }}\r\n                  url=\"https://www.facebook.com/coffeetwistt\"\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <SocialIcon\r\n                  style={{ height: 40, width: 40 }}\r\n                  url=\"https://instagram.com/coffee_twist_\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          {/* \r\n            ########################## News Letter Column ################################\r\n          */}\r\n          <Col>\r\n            <div className=\"newsLetter\">\r\n              <div className=\"newsLetterTitle\">Εγγραφή Newsletter </div>\r\n              <div className=\"newsLetterInput\">\r\n                <TextField\r\n                  type=\"email\"\r\n                  name=\"newsletterEmail\"\r\n                  id=\"inputNewsLetter\"\r\n                  placeholder=\"Πληκτρολογήστε το email σας εδώ.\"\r\n                  onChange={this.onChange}\r\n                  helperText=\"\"\r\n                />{\" \"}\r\n                <FormHelperText\r\n                  style={{ display: \"none\", textAlign: \"center\", color: \"red\" }}\r\n                  id=\"inputNewsLetterHelperText\"\r\n                >\r\n                  Wrong email\r\n                </FormHelperText>\r\n                <ArrowRightCircle onClick={this.onSubscribe} />\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          {/* \r\n            ########################## First Menu Column ################################\r\n          */}\r\n          <Col className=\"menu1Col\">\r\n            <ul>\r\n              <Link to=\"/document/oroi_xrisis\">\r\n                <li>Όροι χρήσης</li>\r\n              </Link>\r\n              <Link to=\"/document/epikoinwnia\">\r\n                <li>Επικοινωνία</li>\r\n              </Link>\r\n              <Link to=\"/document/how_it_works\">\r\n                <li>Πως λειτουργεί</li>\r\n              </Link>\r\n              <Link to=\"/document/who_we_are\">\r\n                <li>Ποιοί Είμαστε</li>\r\n              </Link>\r\n            </ul>\r\n          </Col>\r\n          {/* \r\n            ########################## Second Menu Column ################################\r\n          */}\r\n          <Col className=\"menu2Col\">\r\n            <ul>\r\n              <Link to=\"/document/protection\">\r\n                <li>Πολιτική Προστασίας</li>\r\n              </Link>\r\n              <Link to=\"/document/coockies\">\r\n                <li>Πολιτική cookies</li>\r\n              </Link>\r\n              <Link to=\"/document/ratings\">\r\n                <li>Πολιτική Αξιολόγησης</li>\r\n              </Link>\r\n              <Link to=\"/document/privacy_policy\">\r\n                <li>Πολιτική Απορρήτου</li>\r\n              </Link>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n        {/* \r\n            ########################## Bottom Row ################################\r\n          */}\r\n        <Row className=\"subFooterRow\">\r\n          <div className=\"subFooterContent\">\r\n            <p className=\"subFooterText\">\r\n              (c) 2021 coffeetwist Με επιφύλαξη όλων των δικαιωμάτων.Όροι\r\n              χρήσης, πολιτική ιδιωτικού απορρήτου.\r\n            </p>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, { subscribe })(Footer);\r\n","import React, { Component } from \"react\";\r\nimport { Button, Tab, Tabs } from \"react-bootstrap\";\r\nimport { Facebook, Google } from \"react-bootstrap-icons\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../css/common/logregmodal.css\";\r\nimport { login, register } from \"../../actions/user\";\r\nimport { returnErrors } from \"../../actions/messages\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  CircularProgress,\r\n  Grid,\r\n  Modal,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { showErrorSnackbar } from \"../../actions/snackbar\";\r\n\r\nclass LogRegModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTab: \"login\",\r\n      email: \"\",\r\n      password: \"\",\r\n      reg_password: \"\",\r\n      reg_password2: \"\",\r\n      ready: false,\r\n      showError: true,\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onSubmitRegister = this.onSubmitRegister.bind(this);\r\n    this.onClose = this.onClose.bind(this);\r\n    this.onChangeTab = this.onChangeTab.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    register: PropTypes.func.isRequired,\r\n    isAuthenticated: PropTypes.bool,\r\n    showErrorSnackbar: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(this.state.email, this.state.password);\r\n    this.props.login(this.state.email, this.state.password);\r\n  }\r\n\r\n  onSubmitRegister(e) {\r\n    e.preventDefault();\r\n    if (this.state.reg_password !== this.state.reg_password2) {\r\n      this.props.showErrorSnackbar(\"Passwords does not match\");\r\n    } else {\r\n      const user = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      };\r\n      this.props.register(user);\r\n    }\r\n  }\r\n\r\n  onChangeTab = (key) => {\r\n    this.setState({ selectedTab: key });\r\n  };\r\n\r\n  onClose = (e) => {\r\n    this.props.onClose && this.props.onClose(e);\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  checkPasswords = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.reg_password !== this.state.reg_password2) {\r\n      document.getElementById(\"passwordMatchText\").style.visibility = \"visible\";\r\n      this.setState({ ready: false });\r\n    } else {\r\n      document.getElementById(\"passwordMatchText\").style.visibility = \"hidden\";\r\n      this.setState({ ready: true });\r\n    }\r\n  };\r\n  render() {\r\n    let errorModal;\r\n    if (this.props.userReducer.LoadisLoadingng) {\r\n      return (\r\n        <div>\r\n          <div className=\"loading-div\">\r\n            <CircularProgress disableShrink />{\" \"}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    if (sessionStorage.getItem(\"isAuthenticated\") === \"true\") {\r\n      return null;\r\n    }\r\n    return (\r\n      <Modal\r\n        open={this.props.show}\r\n        autoFocus={true}\r\n        onClose={(e) => {\r\n          this.onClose(e);\r\n        }}\r\n        // id=\"logregModal\"\r\n        className=\"log-reg-modal\"\r\n      >\r\n        <Paper className=\"inner-paper\">\r\n          <Grid container className=\"modalHeader\">\r\n            <Grid item xs={4}></Grid>\r\n            <Grid item xs={4} className=\"headerTitle\">\r\n              {this.state.selectedTab === \"login\" ? (\r\n                <p>Είσοδος Coffee Twist</p>\r\n              ) : (\r\n                <p>Εγγραφή στο Coffee Twist</p>\r\n              )}\r\n            </Grid>\r\n            <Grid xs={4} item className=\"closeButtonCol\">\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={(e) => {\r\n                  this.onClose(e);\r\n                }}\r\n              >\r\n                X\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container className=\"modalBody\">\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs={10}>\r\n              <Tabs\r\n                activeKey={this.state.selectedTab}\r\n                onSelect={(k) => this.onChangeTab(k)}\r\n                className=\"modalBodyTabs\"\r\n              >\r\n                <Tab eventKey=\"login\" title=\"Login\">\r\n                  <div className=\"loginButtons\">\r\n                    <Button variant=\"outline-secondary\">\r\n                      Log in with facebook <Facebook />\r\n                    </Button>\r\n                    <br />\r\n                    <Button variant=\"outline-secondary\">\r\n                      {/* Log in with gmail <Gmail className=\"gmailLogo\" /> */}\r\n                      Log in with gmail <Google />\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <p>Κείμενο για είσοδο/ εγγραφή ή λινκ</p>\r\n                  </div>\r\n                  <hr />\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      id=\"log_email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      autoComplete=\"section-login username\"\r\n                      placeholder=\"input@example.com\"\r\n                      onChange={this.onChange}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\", margin: \"0.5%\" }}\r\n                    />\r\n                    <TextField\r\n                      name=\"password\"\r\n                      id=\"log_password\"\r\n                      label=\"Password\"\r\n                      type=\"password\"\r\n                      autoComplete=\"section-login password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onChange}\r\n                      style={{ width: \"100%\", margin: \"0.5%\" }}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <div className=\"loginButtons\">\r\n                      <Button type=\"submit\" variant=\"outline-primary\">\r\n                        Σύνδεση\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                </Tab>\r\n                <Tab eventKey=\"register\" title=\"Register\">\r\n                  <div className=\"loginButtons\">\r\n                    <Button variant=\"outline-secondary\">\r\n                      Register with facebook <Facebook />\r\n                    </Button>\r\n                    <br />\r\n                    <Button variant=\"outline-secondary\">\r\n                      {/* Log in with gmail <Gmail className=\"gmailLogo\" /> */}\r\n                      Register with gmail <Google />\r\n                    </Button>\r\n                  </div>\r\n                  <div>\r\n                    <p>Κείμενο για είσοδο/ εγγραφή ή λινκ</p>\r\n                  </div>\r\n                  <hr />\r\n                  <form onSubmit={this.onSubmitRegister}>\r\n                    <TextField\r\n                      name=\"email\"\r\n                      id=\"reg_email\"\r\n                      label=\"Email\"\r\n                      type=\"email\"\r\n                      placeholder=\"input@example.com\"\r\n                      onChange={this.onChange}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"100%\", margin: \"0.5%\" }}\r\n                    />\r\n                    <TextField\r\n                      name=\"reg_password\"\r\n                      id=\"reg_pass\"\r\n                      label=\"Enter Password\"\r\n                      type=\"password\"\r\n                      autoComplete=\"section-login new-password\"\r\n                      placeholder=\"Password\"\r\n                      onChange={this.onChange}\r\n                      style={{ width: \"100%\", margin: \"0.5%\" }}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                      name=\"reg_password2\"\r\n                      id=\"reg_pass_2\"\r\n                      label=\"Repeat Password\"\r\n                      type=\"password\"\r\n                      autoComplete=\"section-login new-password2\"\r\n                      placeholder=\" Repeat Password\"\r\n                      onChange={this.onChange}\r\n                      style={{ width: \"100%\", margin: \"0.5%\" }}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <div className=\"loginButtons\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        variant=\"outline-primary\"\r\n                        id=\"registerButton\"\r\n                      >\r\n                        Εγγραφή\r\n                      </Button>\r\n                    </div>\r\n                  </form>\r\n                </Tab>\r\n              </Tabs>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n          </Grid>\r\n          <Grid id=\"modalFooter\" eleveation={0}>\r\n            <p>Συμφωνία με όρους/πολιτική/προυποθέσεις</p>\r\n          </Grid>\r\n          {errorModal}\r\n        </Paper>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  errorReducer: state.errorReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  login,\r\n  register,\r\n  returnErrors,\r\n  showErrorSnackbar,\r\n})(LogRegModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  Nav,\r\n  Navbar,\r\n  Row,\r\n} from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../../../css/Pages/accountpage.css\";\r\nimport { update_order } from \"../../../actions/orders\";\r\nimport { getUser } from \"../../../actions/user\";\r\n\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\nimport Rating from \"@material-ui/lab/Rating\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nclass UserOrders extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedOrder: {},\r\n      comment: \"\",\r\n      comment_order_ids: [],\r\n      rating: 4,\r\n      showCommentModal: false,\r\n    };\r\n  }\r\n  static propTypes = {\r\n    userReducer: PropTypes.object.isRequired,\r\n    update_order: PropTypes.func.isRequired,\r\n  };\r\n\r\n  showCommentModal = (bool, order) => {\r\n    this.setState({\r\n      showCommentModal: !this.state.showCommentModal,\r\n      selectedOrder: order,\r\n    });\r\n  };\r\n\r\n  commentOrder = () => {\r\n    let data = {\r\n      order_id: this.state.selectedOrder.id,\r\n      reason: \"comment_order\",\r\n      comment_text: this.state.comment,\r\n      user_name: this.props.userReducer.user.name,\r\n      rating: {\r\n        rate: parseFloat(this.state.rating),\r\n        user_id: this.props.userReducer.user.id,\r\n      },\r\n    };\r\n    this.props.update_order(data);\r\n    console.log(this.state);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.userReducer.isAuthenticated === false) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    let comment_ids = [];\r\n    for (var i in this.props.userReducer.user.comments) {\r\n      comment_ids.push(this.props.userReducer.user.comments[i].order_id);\r\n    }\r\n    this.setState({ comment_order_ids: comment_ids });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    // console.log(e.target.name);\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    let authenticated =\r\n      sessionStorage.getItem(\"isAuthenticated\") === \"true\" ? true : false;\r\n    let commentModal;\r\n    if (this.state.showCommentModal)\r\n      commentModal = (\r\n        <Modal\r\n          show={true}\r\n          autoFocus={true}\r\n          onHide={(e) => {\r\n            this.showCommentModal(false, null);\r\n          }}\r\n          id=\"alertModal\"\r\n        >\r\n          <Modal.Header className=\"commentModalHeader\">\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={(e) => {\r\n                this.showCommentModal(false, null);\r\n              }}\r\n            >\r\n              X\r\n            </Button>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"commentModalBodyDiv\">\r\n              <Row className=\"centered\">\r\n                <div>\r\n                  <Typography component=\"legend\">\r\n                    Enter your comment!\r\n                  </Typography>\r\n                  <textarea\r\n                    name=\"comment\"\r\n                    type=\"textarea\"\r\n                    value={this.state.comment}\r\n                    placeholder=\"Great job..\"\r\n                    cols=\"40\"\r\n                    onChange={(e) => this.onChange(e)}\r\n                  />\r\n                </div>\r\n              </Row>\r\n              <Row className=\"centered\">\r\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                  <Typography component=\"legend\">Leave a rating!</Typography>\r\n                  <Rating\r\n                    name=\"rating\"\r\n                    defaultValue={4}\r\n                    precision={0.5}\r\n                    onChange={(e) => this.onChange(e)}\r\n                    emptyIcon={<StarBorderIcon fontSize=\"inherit\" />}\r\n                  />\r\n                </Box>\r\n              </Row>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => this.commentOrder()}>Submit</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n    if (authenticated === false) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    if (authenticated === true && this.props.userReducer.hasLoaded === false) {\r\n      this.props.getUser(sessionStorage.getItem(\"userID\"));\r\n      return (\r\n        <div className=\"loading-div\">\r\n          <CircularProgress disableShrink />{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container className=\"accountMainPage\">\r\n          <Row className=\"headerRow\">\r\n            <Navbar className=\"user-nav-bar\">\r\n              <Nav className=\"mr-auto\">\r\n                <Link className=\"nav-text\" to=\"/account\">\r\n                  Ο λογαριασμός μου\r\n                </Link>\r\n                <Link\r\n                  className=\"nav-text nav-text-activated\"\r\n                  to=\"/account/orders\"\r\n                >\r\n                  Οι παραγγελίες μου\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/addresses\">\r\n                  Διευθύνσεις\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/ratings\">\r\n                  Βαθμολογίες\r\n                </Link>\r\n              </Nav>\r\n            </Navbar>\r\n          </Row>\r\n          <Col className=\"userOrdersCol bodyCol\">\r\n            <div className=\"roundedContainer\">\r\n              <div className=\"userOrdersColHeader\">\r\n                <div className=\"title\">Οι παραγγελίες σου</div>\r\n                <span></span>\r\n              </div>\r\n              <div className=\"userOrdersColBody\">\r\n                {this.props.userReducer.user.orders.length > 0 ? (\r\n                  <div>\r\n                    {this.props.userReducer.user.orders.map((order, index) => {\r\n                      // console.log(order);\r\n                      var date = new Date(order.create_at);\r\n                      return (\r\n                        <Row className=\"orderRow\" key={index}>\r\n                          <Col className=\"orderRowCol dateCol\">\r\n                            {date.getDate()}-{date.getMonth() + 1}-\r\n                            {date.getFullYear()}\r\n                          </Col>\r\n                          <Col className=\"orderRowCol prodsCol\">\r\n                            <ul>\r\n                              {order.products.map((product, index) => {\r\n                                return (\r\n                                  <li key={index}>\r\n                                    <span className=\"listItemTitle\">\r\n                                      x {product.quantity} {product.item.name}\r\n                                    </span>\r\n                                    <br />{\" \"}\r\n                                    <span className=\"listItemSubTitle\">\r\n                                      {product.optionAnswers.join() +\r\n                                        `,${product.comment}`}\r\n                                    </span>\r\n                                  </li>\r\n                                );\r\n                              })}\r\n                            </ul>\r\n                          </Col>\r\n                          <Col className=\"orderRowCol optionsCol\">\r\n                            {/* {console.log(this.state.comment_order_ids)}\r\n                            {console.log(order.id)} */}\r\n                            {this.state.comment_order_ids.includes(order.id) ? (\r\n                              <span>\r\n                                {/* Comment:{\" \"}\r\n                                {\r\n                                  this.props.userReducer.user.comments[order.id]\r\n                                    .comment_text\r\n                                }\r\n                                , Rate:{\" \"}\r\n                                {\r\n                                  this.props.userReducer.user.comments[order.id]\r\n                                    .rate\r\n                                } */}\r\n                                Commented\r\n                              </span>\r\n                            ) : (\r\n                              <button\r\n                                className=\"commentButton\"\r\n                                onClick={() =>\r\n                                  this.showCommentModal(false, order)\r\n                                }\r\n                              >\r\n                                Comment!\r\n                              </button>\r\n                            )}\r\n                          </Col>\r\n                        </Row>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                ) : (\r\n                  <div>Δεν εχεις ολοκληρώσει κάποια παραγγελία ακόμα</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          {commentModal}\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, { update_order, getUser })(UserOrders);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  Nav,\r\n  Navbar,\r\n  Row,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../../../css/Pages/accountpage.css\";\r\nimport { PencilFill } from \"react-bootstrap-icons\";\r\nimport EditAddressModal from \"../../Modals/EditAddressModal\";\r\nimport { getUser, updateUser } from \"../../../actions/user\";\r\nimport AddressModal from \"../../Modals/AddressModal\";\r\nimport { MdRemoveCircle } from \"react-icons/md\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nclass UserAdress extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      updateAddress: true,\r\n      showEditAddressModal: false,\r\n      showAddressModal: false,\r\n      showRemoveAddressDialog: false,\r\n      selectedAddress: {},\r\n    };\r\n  }\r\n  static propTypes = {\r\n    userReducer: PropTypes.object.isRequired,\r\n    getUser: PropTypes.func.isRequired,\r\n    updateUser: PropTypes.func.isRequired,\r\n  };\r\n\r\n  selectEditAddressModal = (info) => {\r\n    console.log(\"here\");\r\n    this.setState({ showEditAddressModal: !this.state.showEditAddressModal });\r\n  };\r\n\r\n  selectAddressModal = (showadd, showedit, address) => {\r\n    console.log(address);\r\n    let updateAddress = true;\r\n    if (showedit) {\r\n      updateAddress = false;\r\n    }\r\n    this.setState({\r\n      showAddressModal: showadd,\r\n      showEditAddressModal: showedit,\r\n      selectedAddress: address,\r\n      updateAddress: updateAddress,\r\n    });\r\n  };\r\n\r\n  showRemoveAddressDialog = (bool, address) => {\r\n    this.setState({\r\n      showRemoveAddressDialog: !this.state.showRemoveAddressDialog,\r\n      selectedAddress: address,\r\n    });\r\n  };\r\n\r\n  removeAddress = () => {\r\n    // e.preventDefault();\r\n    let data = {\r\n      id: this.props.userReducer.user.id,\r\n      reason: \"remove_address\",\r\n      address_id: this.state.selectedAddress.id,\r\n    };\r\n    this.props.updateUser(data);\r\n    this.showRemoveAddressDialog(false, null);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.userReducer.isAuthenticated === false) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    if (this.props.userReducer.hasLoaded === false) {\r\n      this.props.getUser(this.props.userReducer.user.id);\r\n    }\r\n  }\r\n\r\n  editAddress = (address, index) => {\r\n    this.setState({\r\n      selectedAddress: address,\r\n      updateAddress: true,\r\n    });\r\n    this.selectEditAddressModal(true);\r\n  };\r\n\r\n  render() {\r\n    let editAddressModal;\r\n    let addAddressModal;\r\n    let removeAddressdialog;\r\n    let authenticated =\r\n      sessionStorage.getItem(\"isAuthenticated\") === \"true\" ? true : false;\r\n    if (this.state.showRemoveAddressDialog) {\r\n      removeAddressdialog = (\r\n        <Modal\r\n          show={true}\r\n          autoFocus={true}\r\n          onHide={(e) => {\r\n            this.showRemoveAddressDialog(false, null);\r\n          }}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Remove address</Modal.Title>\r\n          </Modal.Header>\r\n\r\n          <Modal.Body>\r\n            <p>Are you sure you want to remove it?</p>\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button\r\n              variant=\"secondary\"\r\n              onClick={() => this.showRemoveAddressDialog(false, null)}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => this.removeAddress()}>\r\n              Yes\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      );\r\n    }\r\n    if (this.state.showEditAddressModal) {\r\n      editAddressModal = (\r\n        <EditAddressModal\r\n          address={this.state.selectedAddress}\r\n          updateAddress={this.state.updateAddress}\r\n          displayModal={this.state.showEditAddressModal}\r\n          closeModal={() => this.selectEditAddressModal(false)}\r\n        />\r\n      );\r\n    }\r\n    console.log(this.state.showAddressModal);\r\n    if (this.state.showAddressModal) {\r\n      addAddressModal = (\r\n        <AddressModal\r\n          displayModal={this.state.showAddressModal}\r\n          closeModal={() => this.selectAddressModal(false, false, \"\")}\r\n          editAddress={(showAdd, showEdit, address) =>\r\n            this.selectAddressModal(showAdd, showEdit, address)\r\n          }\r\n        />\r\n      );\r\n    }\r\n\r\n    if (authenticated === false) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n    if (authenticated === true && this.props.userReducer.hasLoaded === false) {\r\n      this.props.getUser(sessionStorage.getItem(\"userID\"));\r\n      return (\r\n        <div className=\"loading-div\">\r\n          <CircularProgress disableShrink />{\" \"}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container className=\"accountMainPage\">\r\n          <Row className=\"headerRow\">\r\n            <Navbar className=\"user-nav-bar\">\r\n              <Nav className=\"mr-auto\">\r\n                <Link className=\"nav-text\" to=\"/account\">\r\n                  Ο λογαριασμός μου\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/orders\">\r\n                  Οι παραγγελίες μου\r\n                </Link>\r\n                <Link\r\n                  className=\"nav-text nav-text-activated\"\r\n                  to=\"/account/addresses\"\r\n                >\r\n                  Διευθύνσεις\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/ratings\">\r\n                  Βαθμολογίες\r\n                </Link>\r\n              </Nav>\r\n            </Navbar>\r\n          </Row>\r\n          <Col className=\"userAddressCol bodyCol\">\r\n            <div className=\"roundedContainer\">\r\n              <div className=\"userAddressColHeader\">\r\n                <div className=\"title\">Οι διευθήνσεις σου</div>\r\n                <span></span>\r\n              </div>\r\n              <div className=\"userAddressColBody\">\r\n                {this.props.userReducer.user.addresses.length > 0 ? (\r\n                  <Table striped bordered hover>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Διευθηνση</th>\r\n                        <th>Αριθμός</th>\r\n                        <th>Περιοχή</th>\r\n                        <th>Τ.Κ.</th>\r\n                        <th>Actions</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {this.props.userReducer.user.addresses.map(\r\n                        (address, index) => {\r\n                          return (\r\n                            <tr\r\n                              className=\"address-list-item-container\"\r\n                              key={index}\r\n                            >\r\n                              <td>{index}</td>\r\n                              <td>{address.address_name}</td>\r\n                              <td>{address.address_number}</td>\r\n                              <td>{address.area_name}</td>\r\n                              <td>{address.zipcode}</td>\r\n                              <td style={{ dispaly: \"flex\" }}>\r\n                                <PencilFill\r\n                                  onClick={() => this.editAddress(address)}\r\n                                />{\" \"}\r\n                                <MdRemoveCircle\r\n                                  onClick={() =>\r\n                                    this.showRemoveAddressDialog(true, address)\r\n                                  }\r\n                                >\r\n                                  X\r\n                                </MdRemoveCircle>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        }\r\n                      )}\r\n                    </tbody>\r\n                  </Table>\r\n                ) : (\r\n                  <div>Δεν εχεις καταχωρήσει κάποια διεύθηνση ακόμα</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <div className=\"addAddressDiv\">\r\n            <button\r\n              className=\"addAddressButton\"\r\n              onClick={() => this.selectAddressModal(true)}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          {removeAddressdialog}\r\n          {editAddressModal}\r\n          {addAddressModal}\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUser, updateUser })(UserAdress);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container, Nav, Navbar, Row } from \"react-bootstrap\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../../../css/Pages/accountpage.css\";\r\nclass UserRatings extends Component {\r\n  static propTypes = {\r\n    userReducer: PropTypes.object.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.userReducer.isAuthenticated === false) {\r\n      return <Redirect to=\"/home\" />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.userReducer.isAuthenticated === false) {\r\n      return <Redirect to=\"/home\" />;\r\n    } else {\r\n      return (\r\n        <Container className=\"accountMainPage\">\r\n          <Row className=\"headerRow\">\r\n            <Navbar className=\"user-nav-bar\">\r\n              <Nav className=\"mr-auto\">\r\n                <Link className=\"nav-text\" to=\"/account\">\r\n                  Ο λογαριασμός μου\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/orders\">\r\n                  Οι παραγγελίες μου\r\n                </Link>\r\n                <Link className=\"nav-text\" to=\"/account/addresses\">\r\n                  Διευθύνσεις\r\n                </Link>\r\n                <Link\r\n                  className=\"nav-text nav-text-activated\"\r\n                  to=\"/account/ratings\"\r\n                >\r\n                  Βαθμολογίες\r\n                </Link>\r\n              </Nav>\r\n            </Navbar>\r\n          </Row>\r\n          <Row className=\"userRatingsRow bodyRow\"></Row>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userReducer: state.userReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(UserRatings);\r\n","export const tabs = [\"Προϊόντα\", \"Υλικά\", \"Παραγγελίες\", \"Ρυθμίσεις\", \"Σχόλια\"];\r\nexport const orderTabs = [\"Εισερχόμενες\", \"Ετοιμάζονται\", \"Ολοκληρώθηκαν\"];\r\nexport const shopTabs = [\"Προϊόντα\", \"Υλικά\", \"Σχόλια\", \"Print\"];\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport \"../../../../css/Pages/adminpage.css\";\r\nimport { orderTabs, shopTabs } from \"../Common/tabs\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // height: \"100%\",\r\n    height: \"100vh\",\r\n    flexWrap: \"wrap\",\r\n    width: \"100%\",\r\n    margin: \"8px\",\r\n    // flexFlow: \"column\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n  list: {\r\n    width: \"90%\",\r\n  },\r\n  listTitle: {\r\n    fontSize: \"25px\",\r\n    fontWeight: \"100\",\r\n  },\r\n  listText: {\r\n    cursor: \"pointer\",\r\n    marginLeft: \"5\",\r\n  },\r\n  arrowButtonGrid: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  // const [open, toogleOpen] = useState(true);\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={3}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <List className={classes.list}>\r\n            <ListItem className={classes.listTitle}>\r\n              <ListItemText>Παραγγελίες</ListItemText>\r\n            </ListItem>\r\n            {orderTabs.map((tab, index) => {\r\n              let style;\r\n              if (tab === props.selectedTab) {\r\n                style = \"selected\";\r\n              }\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={style}\r\n                  onClick={() => props.onSelectChange(tab)}\r\n                >\r\n                  <ListItem className={classes.listText}>\r\n                    <ListItemText primary={tab} />\r\n                  </ListItem>\r\n                </div>\r\n              );\r\n            })}\r\n            <ListItem>\r\n              <ListItemText className={classes.listTitle} primary={\"Μαγαζί\"} />\r\n            </ListItem>\r\n            {shopTabs.map((tab, index) => {\r\n              let style;\r\n              if (tab === props.selectedTab) {\r\n                style = \"selected\";\r\n              }\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={style}\r\n                  onClick={() => props.onSelectChange(tab)}\r\n                >\r\n                  <ListItem>\r\n                    <ListItemText className={classes.listText} primary={tab} />\r\n                  </ListItem>\r\n                </div>\r\n              );\r\n            })}\r\n          </List>\r\n        </Grid>\r\n        {/* <Grid item xs={1} className={classes.arrowButtonGrid}>\r\n          <Button>\r\n            <ArrowBackIcon />\r\n          </Button>\r\n        </Grid> */}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { ListItem, ListItemText } from \"@material-ui/core\";\r\nimport \"../../../../css/Pages/adminpage.css\";\r\n\r\nconst orderCategories = [\"Εισερχόμενες\", \"Ετοιμάζονται\", \"Ολοκληρώθηκαν\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // height: \"100%\",\r\n    flexWrap: \"wrap\",\r\n    maxHeight: \"100vh\",\r\n    overflowY: \"auto\",\r\n    // flexFlow: \"column\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function InnerSidebarCatalog(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root} elevation={3}>\r\n      <ListItem>\r\n        <ListItemText primary={\"ΚΑΤΗΓΟΡΙΕΣ\"} />\r\n      </ListItem>\r\n      {props.type === \"products\"\r\n        ? props.categories.map((category, index) => (\r\n            <div\r\n              key={index}\r\n              className={\r\n                category.name === props.selectedCategory ? \"selected\" : \"\"\r\n              }\r\n            >\r\n              <ListItem onClick={(e) => props.onCategoryChange(category.name)}>\r\n                <ListItemText primary={category.name} />\r\n              </ListItem>\r\n            </div>\r\n          ))\r\n        : props.type === \"ingredients\"\r\n        ? props.categories.map((category, index) => (\r\n            <div\r\n              key={index}\r\n              className={index === props.selectedCategory ? \"selected\" : \"\"}\r\n            >\r\n              <ListItem onClick={(e) => props.onCategoryChange(index)}>\r\n                <ListItemText primary={category} />\r\n              </ListItem>\r\n            </div>\r\n          ))\r\n        : props.type === \"orders\"\r\n        ? orderCategories.map((category, index) => (\r\n            <div\r\n              key={index}\r\n              className={category === props.selectedCategory ? \"selected\" : \"\"}\r\n            >\r\n              <ListItem onClick={(e) => props.onCategoryChange(category)}>\r\n                <ListItemText primary={category} />\r\n              </ListItem>\r\n            </div>\r\n          ))\r\n        : null}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { update_item } from \"../../../../actions/items\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // height: \"100%\",\r\n    overflowY: \"auto\",\r\n    maxHeight: \"100vh\",\r\n    flexWrap: \"wrap\",\r\n    // flexFlow: \"column\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ProductCatalog(props) {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const update_prod = (product) => {\r\n    dispatch(update_item(product.id, product, \"change_availability\"));\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root} elevation={3}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Όνομα</TableCell>\r\n            <TableCell align=\"right\">Τιμή</TableCell>\r\n            <TableCell align=\"right\">Διαθέσιμο</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.products.map((product, index) => {\r\n            if (props.selectedCategory === product.category) {\r\n              return (\r\n                <TableRow key={index}>\r\n                  <TableCell align=\"left\">{product.name}</TableCell>\r\n                  <TableCell align=\"right\">{product.price}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Switch\r\n                      checked={product.available === true ? true : false}\r\n                      onChange={() => update_prod(product)}\r\n                      label=\"Available\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { update_ingredient } from \"../../../../actions/items\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // height: \"100%\",\r\n    flexWrap: \"wrap\",\r\n    overflowY: \"auto\",\r\n    maxHeight: \"100vh\",\r\n\r\n    // flexFlow: \"column\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function IngredientsCatalog(props) {\r\n  const classes = useStyles();\r\n  // console.log(props);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const update_ingre = (ingredient) => {\r\n    dispatch(\r\n      update_ingredient(ingredient.id, ingredient, \"change_availability\")\r\n    );\r\n  };\r\n  return (\r\n    <Paper className={classes.root} elevation={3}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Όνομα</TableCell>\r\n            <TableCell align=\"right\">Τιμή</TableCell>\r\n            <TableCell align=\"right\">Διαθέσιμο</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.ingredients !== undefined\r\n            ? props.ingredients.map((ingredient, index) => {\r\n                // console.log(ingredient);\r\n                return (\r\n                  <TableRow key={index}>\r\n                    <TableCell align=\"left\">{ingredient.name}</TableCell>\r\n                    <TableCell align=\"right\">{ingredient.price}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <Switch\r\n                        checked={ingredient.available === true ? true : false}\r\n                        onChange={() => update_ingre(ingredient)}\r\n                        label=\"Available\"\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })\r\n            : null}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { headers } from \"../utils/axiosHeaders\";\r\nimport {\r\n  APPROVE_COMMENT,\r\n  GET_COMMENTS,\r\n  REJECT_COMMENT,\r\n  SNACKBAR_ERROR,\r\n  SNACKBAR_SUCCESS,\r\n  COMMENT_ANSWERED,\r\n} from \"./actions\";\r\n\r\n// GET ALL COMMENTS\r\nexport const get_comments = () => (dispatch) => {\r\n  axios\r\n    .get(\"http://localhost:8080/comments/all\")\r\n    .then((res) => {\r\n      // console.log(res);\r\n      dispatch({\r\n        type: GET_COMMENTS,\r\n        comments: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Comments fetched successfully!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Approve Comment\r\nexport const approve_comment = (id) => (dispatch) => {\r\n  axios\r\n    .post(`http://localhost:8080/comments/approve/${id}`, null, headers)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: APPROVE_COMMENT,\r\n        comment: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Comment approved!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Reject Comment\r\nexport const reject_comment = (id) => (dispatch) => {\r\n  axios\r\n    .post(`http://localhost:8080/admin/reject/${id}`, null, headers)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: REJECT_COMMENT,\r\n        comment: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Comment rejected!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n\r\n// Answer Comment\r\nexport const answer_comment = (id, data) => (dispatch) => {\r\n  axios\r\n    .post(`http://localhost:8080/comments/answer/${id}`, data, headers)\r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: COMMENT_ANSWERED,\r\n        comment: res.data.data,\r\n      });\r\n      dispatch({\r\n        type: SNACKBAR_SUCCESS,\r\n        message: \"Comment answered!\",\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: SNACKBAR_ERROR,\r\n        message: err.response.data.message,\r\n      });\r\n    });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\n\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  answer_comment,\r\n  approve_comment,\r\n  reject_comment,\r\n} from \"../../../../actions/comments\";\r\nimport { useDispatch } from \"react-redux\";\r\n// import ReactToPrint from \"react-to-print\";\r\n// import PrintComponent from \"../Common/PrintComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // height: \"100%\",\r\n    flexWrap: \"wrap\",\r\n    overflowY: \"auto\",\r\n    maxHeight: \"100vh\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function CommentsCatalog(props) {\r\n  const classes = useStyles();\r\n  //   console.log(props);\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [selected_id, setID] = useState(null);\r\n  const [answer, handleChange] = useState(\"\");\r\n\r\n  const handleClickOpen = (id) => {\r\n    setOpen(true);\r\n    setID(id);\r\n  };\r\n\r\n  // let componentRef = useRef(PrintComponent);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <Paper className={classes.root} elevation={3}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Ημερομηνία</TableCell>\r\n            <TableCell align=\"left\">Όνομα</TableCell>\r\n            <TableCell align=\"right\">Σχόλιο</TableCell>\r\n            <TableCell align=\"right\">Βαθμολογία</TableCell>\r\n            <TableCell align=\"right\">Απάντηση</TableCell>\r\n            <TableCell align=\"right\">Ενέργειες</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.comments.map((comment, index) => {\r\n            return (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"left\">\r\n                  {comment.created_at.slice(0, 10)}{\" \"}\r\n                  {comment.created_at.slice(12, 19)}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"left\">{comment.user_name}</TableCell>\r\n                <TableCell align=\"right\">{comment.text} </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {comment.rate}\r\n                  <StarIcon />\r\n                </TableCell>\r\n                {comment.answer === \"\" ? (\r\n                  <TableCell>\r\n                    <Button onClick={() => handleClickOpen(comment.id)}>\r\n                      Απάντηση\r\n                    </Button>{\" \"}\r\n                  </TableCell>\r\n                ) : (\r\n                  <TableCell>{comment.answer}</TableCell>\r\n                )}\r\n                {comment.answered === false ? (\r\n                  <TableCell align=\"right\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => dispatch(approve_comment(comment.id))}\r\n                      startIcon={<CheckIcon />}\r\n                    />\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      onClick={() => dispatch(reject_comment(comment.id))}\r\n                      startIcon={<CancelIcon />}\r\n                    />\r\n                  </TableCell>\r\n                ) : (\r\n                  <TableCell>\r\n                    {comment.approved ? (\r\n                      <span>Approved</span>\r\n                    ) : (\r\n                      <span>Rejected</span>\r\n                    )}\r\n                  </TableCell>\r\n                )}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n      {/* ########## DIALOG ############### */}\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Απάντηση στο Σχόλιο</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Εισάγετε την απάντηση για το σχόλιο αυτό.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Απάντηση\"\r\n            type=\"text\"\r\n            fullWidth\r\n            onChange={(e) => handleChange(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Ακύρωση\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(answer_comment(selected_id, { text: answer }));\r\n              setOpen(false);\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Επιβεβαίωση\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <ReactToPrint\r\n        trigger={() => <button>print it</button>}\r\n        content={() => componentRef}\r\n      />\r\n      <PrintComponent ref={(el) => (componentRef = el)} /> */}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // height: \"100%\",\r\n    flexWrap: \"wrap\",\r\n    overflowY: \"auto\",\r\n    maxHeight: \"100vh\",\r\n\r\n    // flexFlow: \"column\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n  listItem: {\r\n    borderBottom: \"1px solid black\",\r\n  },\r\n  innerText: {\r\n    borderBottom: \"0.5px solid gray\",\r\n  },\r\n  leftText: {\r\n    textAlign: \"start\",\r\n  },\r\n  rightText: {\r\n    textAlign: \"end\",\r\n  },\r\n  productRow: {\r\n    backgroundColor: \"#f4f4f4\",\r\n    marginBottom: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function OrderProductsRow(props) {\r\n  const classes = useStyles();\r\n  // console.log(props);\r\n\r\n  return (\r\n    <Container>\r\n      <List>\r\n        {props.products.map((product, index) => {\r\n          return (\r\n            <Paper className={classes.productRow} key={index}>\r\n              <ListItem className={classes.listItem}>\r\n                <ListItemText\r\n                  primary={product.item.name}\r\n                  className={classes.leftText}\r\n                />\r\n                <ListItemText\r\n                  primary={\r\n                    product.quantity +\r\n                    \" X \" +\r\n                    product.totalPrice / product.quantity +\r\n                    \"€\"\r\n                  }\r\n                  className={classes.rightText}\r\n                />\r\n              </ListItem>\r\n              <List>\r\n                {product.options.length > 0\r\n                  ? product.options.map((option, op_index) => {\r\n                      return (\r\n                        <ListItem\r\n                          key={op_index}\r\n                          className={classes.innerListItem}\r\n                        >\r\n                          <ListItemText\r\n                            // primary={\"+ \" + option.Name + \" : \" + option.Choice}\r\n                            primary={\"+ \" + option.Choice}\r\n                            className={classes.innerText}\r\n                          />\r\n                        </ListItem>\r\n                      );\r\n                    })\r\n                  : null}\r\n                {product.extra_ingredients.length > 0\r\n                  ? product.extra_ingredients.map((ingredient, op_index) => {\r\n                      return (\r\n                        <ListItem\r\n                          key={op_index}\r\n                          className={classes.innerListItem}\r\n                        >\r\n                          <ListItemText\r\n                            primary={\"+ \" + ingredient}\r\n                            className={classes.innerText}\r\n                          />\r\n                        </ListItem>\r\n                      );\r\n                    })\r\n                  : null}\r\n                {product.comment !== \"\" ? (\r\n                  <ListItem key={\"item_comments\"}>\r\n                    <ListItemText\r\n                      primary={\"Σχόλια : \" + product.comment}\r\n                      className={classes.innerText}\r\n                    />\r\n                  </ListItem>\r\n                ) : null}\r\n              </List>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </List>\r\n    </Container>\r\n  );\r\n}\r\n","import {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\n\r\n// let order = {\r\n//   id: \"609f9bb1186eff05507246a2\",\r\n//   products: [\r\n//     {\r\n//       comment: \"\",\r\n//       extraPrice: 0,\r\n//       extra_ingredients: [\"waffle\"],\r\n//       item: {\r\n//         id: \"60841a29f47efe9d043d69c5\",\r\n//         name: \"CHEF'S\",\r\n//         description: \"Μαρούλι, ντομάτα, ζαμπόν, τυρί, αυγό βραστό, σως κοκτέιλ\",\r\n//         price: 5,\r\n//         category: \"Σαλάτες\",\r\n//         image: \"\",\r\n//         ingredients: null,\r\n//         choices: [],\r\n//         custom: false,\r\n//         extra_ingredients: null,\r\n//         available: true,\r\n//         visible: false,\r\n//       },\r\n//       optionAnswers: [],\r\n//       options: [],\r\n//       quantity: 1,\r\n//       totalPrice: 5,\r\n//     },\r\n//     {\r\n//       comment: \"\",\r\n//       extraPrice: 0,\r\n//       extra_ingredients: [\"wafflef\"],\r\n//       item: {\r\n//         id: \"60841a29f47efe9d043d69c5\",\r\n//         name: \"CHEF\",\r\n//         description: \"Μαρούλι, ντομάτα, ζαμπόν, τυρί, αυγό βραστό, σως κοκτέιλ\",\r\n//         price: 5,\r\n//         category: \"Σαλάτες\",\r\n//         image: \"\",\r\n//         ingredients: null,\r\n//         choices: [],\r\n//         custom: false,\r\n//         extra_ingredients: null,\r\n//         available: true,\r\n//         visible: false,\r\n//       },\r\n//       optionAnswers: [],\r\n//       options: [],\r\n//       quantity: 1,\r\n//       totalPrice: 5,\r\n//     },\r\n//   ],\r\n//   accepted: true,\r\n//   user_id: \"6060b7a74e3408671bf3cc7f\",\r\n//   delivery_type: \"Delivery\",\r\n//   pre_discount_price: 5,\r\n//   after_discount_price: 0,\r\n//   payment_type: \"Cash\",\r\n//   discounts: [],\r\n//   discounts_ids: [],\r\n//   tips: 0.5,\r\n//   comments: \"\",\r\n//   user_details: {\r\n//     Name: \"pa\",\r\n//     Surname: \"ma\",\r\n//     Address: {\r\n//       id: \"60621a3cc569e29bc11f8fa3\",\r\n//       city_name: \"\",\r\n//       area_name: \"Glifada\",\r\n//       address_name: \"Georgiou Gennimata\",\r\n//       address_number: \"20\",\r\n//       zipcode: \"165 62\",\r\n//       latitude: 37.8941277,\r\n//       longitude: 23.7627664,\r\n//     },\r\n//     Phone: \"2102342341\",\r\n//     Bell_name: \"4\",\r\n//     Floor: \"5\",\r\n//   },\r\n//   delivery_time: 25,\r\n//   rating: {\r\n//     rate: 0,\r\n//     user_id: \"000000000000000000000000\",\r\n//   },\r\n//   comment: {\r\n//     comment_text: \"\",\r\n//     comment_answer: \"\",\r\n//     approved: false,\r\n//   },\r\n//   completed: true,\r\n//   canceled: false,\r\n//   create_at: \"2021-05-15T10:00:17.001Z\",\r\n// };\r\nclass PrintComponent extends Component {\r\n  render() {\r\n    let order;\r\n    if (this.props.order !== undefined) {\r\n      order = this.props.order;\r\n    } else {\r\n      return null;\r\n    }\r\n    return (\r\n      <Paper className=\"main\">\r\n        <React.Fragment>\r\n          <Typography>COFFEE TWIST</Typography>\r\n          <Typography>ΠΡΟΣΟΧΗ ΔΕΝ ΕΙΝΑΙ ΑΠΟΔΕΙΞΗ!</Typography>\r\n          <Typography>***** ΠΑΡΑΓΓΕΛΕΙΑ *****</Typography>\r\n          <Typography>\r\n            ***** {order.create_at.slice(0, 10)} {order.create_at.slice(11, 19)}\r\n            *****\r\n          </Typography>\r\n          <Typography>*** ΠΑΡΑΓΓΕΛΕΙΑ {order.id} ***</Typography>\r\n        </React.Fragment>\r\n        <React.Fragment>\r\n          <List>\r\n            {order.tips !== 0 ? (\r\n              <ListItem>\r\n                <ListItemText primary={\"1 X TIP ΓΙΑ ΔΙΑΝΟΜΕΑ\"} />\r\n                <ListItemText primary={order.tips + \"€\"} />\r\n              </ListItem>\r\n            ) : null}\r\n            {order.products.map((product, index) => {\r\n              return (\r\n                <Paper key={index} elevation={0}>\r\n                  <ListItem>\r\n                    <ListItemText\r\n                      primary={product.quantity + \" X \" + product.item.name}\r\n                    />\r\n                    <ListItemText\r\n                      primary={product.totalPrice / product.quantity + \"€\"}\r\n                    />\r\n                  </ListItem>\r\n                  <List>\r\n                    {product.options.length > 0\r\n                      ? product.options.map((option, op_index) => {\r\n                          return (\r\n                            <ListItem key={op_index}>\r\n                              <ListItemText primary={\"+ \" + option.Choice} />\r\n                            </ListItem>\r\n                          );\r\n                        })\r\n                      : null}\r\n                    {product.extra_ingredients.length > 0\r\n                      ? product.extra_ingredients.map(\r\n                          (ingredient, op_index) => {\r\n                            return (\r\n                              <ListItem key={op_index}>\r\n                                <ListItemText primary={\"+ \" + ingredient} />\r\n                              </ListItem>\r\n                            );\r\n                          }\r\n                        )\r\n                      : null}\r\n                    {product.comment !== \"\" ? (\r\n                      <ListItem key={\"item_comments\"}>\r\n                        <ListItemText primary={\"Σχόλια : \" + product.comment} />\r\n                      </ListItem>\r\n                    ) : null}\r\n                  </List>\r\n                </Paper>\r\n              );\r\n            })}\r\n          </List>\r\n          <Typography>======================================</Typography>\r\n          <Typography>ΤΡΟΠΟΣ ΠΛΗΡΩΜΗΣ : {order.payment_type}</Typography>\r\n          <Typography>ΤΕΛΙΚΟ ΣΥΝΟΛΟ : {order.pre_discount_price} €</Typography>\r\n          <Typography>======================================</Typography>\r\n          <Typography>##### ΔΙΕΥΘΥΝΣΗ #####</Typography>\r\n          <List>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={`ΟΝ/ΜΟ :${order.user_details.Name}  ${order.user_details.Surname} `}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary={`ΚΙΝΗΤΟ :${order.user_details.Phone} `} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={`ΟΔΟΣ :${order.user_details.Address.address_name}  ${order.user_details.Address.address_number} `}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={`ΠΟΛΗ :${order.user_details.Address.area_name}  ${order.user_details.Address.city_name} `}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={`TK :${order.user_details.Address.zipcode} `}\r\n              />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText primary={`ΟΡΟΦΟΣ :${order.user_details.Floor} `} />\r\n            </ListItem>\r\n            <ListItem>\r\n              <ListItemText\r\n                primary={`ΚΟΥΔΟΥΝΙ :${order.user_details.Bell_name} `}\r\n              />\r\n            </ListItem>\r\n          </List>\r\n          <Typography>ΣΧΟΛΙΑ: {order.comments}</Typography>\r\n          <Typography>###### www.coffeetwist.gr ######</Typography>\r\n        </React.Fragment>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrintComponent;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  MenuItem,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  accept_order,\r\n  complete_order,\r\n  reject_order,\r\n} from \"../../../../actions/orders\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport PrintComponent from \"../Common/PrintComponent\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // height: \"100%\",\r\n    // flexWrap: \"no-wrap\",\r\n    overflowY: \"auto\",\r\n    maxHeight: \"100vh\",\r\n    flexDirection: \"row\",\r\n\r\n    // flexFlow: \"column\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n  printButton: {\r\n    backgroundColor: \"red\",\r\n  },\r\n  buttonsPaper: {\r\n    margin: \"10px\",\r\n  },\r\n  printPaper: {\r\n    textAlign: \"right\",\r\n  },\r\n  acceptButton: {\r\n    marginLeft: \"5px\",\r\n    marginRight: \"5px\",\r\n    backgroundColor: \"green\",\r\n  },\r\n  rejectButton: {\r\n    backgroundColor: \"red\",\r\n  },\r\n  compleButton: {\r\n    backgroundColor: \"beige\",\r\n  },\r\n}));\r\n\r\nconst timeOptions = [\r\n  {\r\n    value: \"10\",\r\n    label: \"10\",\r\n  },\r\n  {\r\n    value: \"15\",\r\n    label: \"15\",\r\n  },\r\n  {\r\n    value: \"20\",\r\n    label: \"20\",\r\n  },\r\n  {\r\n    value: \"25\",\r\n    label: \"25\",\r\n  },\r\n  {\r\n    value: \"30\",\r\n    label: \"30\",\r\n  },\r\n];\r\n\r\nexport default function OrderUserDetailsRow(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [time, changeTime] = useState(15);\r\n\r\n  const componentRef = useRef();\r\n  const setTime = (event) => {\r\n    changeTime(event.target.value);\r\n  };\r\n  // console.log(props);\r\n  const address =\r\n    props.user_details.Address.address_name +\r\n    \" \" +\r\n    props.user_details.Address.address_number +\r\n    \" ,\" +\r\n    props.user_details.Address.area_name +\r\n    \",\" +\r\n    props.user_details.Address.zipcode;\r\n  return (\r\n    <Container className={classes.root}>\r\n      <Grid item xs={9}>\r\n        <List>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={\r\n                \"Ώρα παραγγελίας : \" +\r\n                props.time.slice(11, 19) +\r\n                \" , ID: \" +\r\n                props.ID\r\n              }\r\n            />\r\n          </ListItem>\r\n          <ListItem className={classes.addressItem}>\r\n            <ListItemText primary={\"Διεύθυνση : \" + address} />\r\n          </ListItem>\r\n          <ListItem className={classes.userDetailsItem}>\r\n            <ListItemText\r\n              primary={\r\n                \"Πελάτης : \" +\r\n                props.user_details.Name +\r\n                \" \" +\r\n                props.user_details.Surname\r\n              }\r\n            />\r\n          </ListItem>\r\n          <ListItem className={classes.userDetailsItem}>\r\n            <ListItemText primary={\"Τηλέφωνο : \" + props.user_details.Phone} />\r\n          </ListItem>\r\n          <ListItem className={classes.userDetailsItem}>\r\n            <ListItemText primary={\"Όροφος : \" + props.user_details.Floor} />\r\n          </ListItem>\r\n          <ListItem className={classes.userDetailsItem}>\r\n            <ListItemText\r\n              primary={\"Κουδούνι : \" + props.user_details.Bell_name}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary={\"Σύνολο : \" + props.total_price + \"€\"} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary={\"Πληρωμή : \" + props.payment_type} />\r\n          </ListItem>\r\n        </List>\r\n      </Grid>\r\n      <Grid item xs={3}>\r\n        <Paper elevation={0} className={classes.printPaper}>\r\n          <ReactToPrint\r\n            trigger={() => (\r\n              <Button className={classes.printButton}>print it</Button>\r\n            )}\r\n            content={() => componentRef.current}\r\n          />\r\n          <div style={{ display: \"none\" }}>\r\n            <PrintComponent order={props.order} ref={componentRef} />\r\n          </div>\r\n        </Paper>\r\n        {props.type === \"Εισερχόμενες\" ? (\r\n          <Paper elevation={0} className={classes.buttonsPaper}>\r\n            <TextField\r\n              id=\"timer-set\"\r\n              select\r\n              label=\"Χρόνος\"\r\n              value={time}\r\n              onChange={setTime}\r\n            >\r\n              {timeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <Button\r\n              id={`accept_buton_${props.order.id}`}\r\n              onClick={() => dispatch(accept_order(props.order, time))}\r\n              className={classes.acceptButton}\r\n            >\r\n              {\" \"}\r\n              Accept\r\n            </Button>\r\n            <Button\r\n              id={`reject_buton_${props.order.id}`}\r\n              onClick={() => dispatch(reject_order(props.order, time))}\r\n              className={classes.rejectButton}\r\n            >\r\n              {\" \"}\r\n              Reject\r\n            </Button>\r\n          </Paper>\r\n        ) : (\r\n          <Typography>Χρόνος παράδοσης {props.delivery_time} λεπτά</Typography>\r\n        )}\r\n        {props.type === \"Ετοιμάζονται\" ? (\r\n          <Paper elevation={0}>\r\n            {props.order.canceled === true ? (\r\n              <span>Ακτρωμένη</span>\r\n            ) : (\r\n              <span>Αποδεχτή</span>\r\n            )}\r\n            <Button\r\n              id={`complete_buton_${props.order.id}`}\r\n              className={classes.compleButton}\r\n              onClick={() => dispatch(complete_order(props.order.id))}\r\n            >\r\n              Ολοκλήρωση\r\n            </Button>\r\n          </Paper>\r\n        ) : null}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { List, ListItem } from \"@material-ui/core\";\r\nimport OrderProductsRow from \"./OrderProductsRow\";\r\nimport OrderUserDetailsRow from \"./OrderUserDetailsRow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    // height: \"100%\",\r\n    flexWrap: \"wrap\",\r\n    overflowY: \"auto\",\r\n    maxHeight: \"100vh\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n  row: {\r\n    borderBottom: \"2px solid gray\",\r\n  },\r\n  orderRow: {\r\n    border: \"1px solid black\",\r\n    padding: \"10px\",\r\n    marginBottom: \"40px\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nexport default function OrdersCatalog(props) {\r\n  const classes = useStyles();\r\n  // console.log(props);\r\n  // const dispatch = useDispatch();\r\n  // const [time, changeTime] = useState(\"15\");\r\n  // const setTime = (event) => {\r\n  //   changeTime(event.target.value);\r\n  // };\r\n  return (\r\n    <Paper className={classes.root} elevation={3}>\r\n      {props.selectedCategory === \"Εισερχόμενες\" &&\r\n      props.orders.pending_orders.length === 0 ? (\r\n        <React.Fragment>Δεν υπάρχουν νέες παραγγελίες.</React.Fragment>\r\n      ) : props.selectedCategory === \"Ετοιμάζονται\" &&\r\n        props.orders.accepted_orders.length === 0 ? (\r\n        <React.Fragment>Δεν υπάρχουν παραγγελίες σε εξέλιξη.</React.Fragment>\r\n      ) : props.selectedCategory === \"Ολοκληρώθηκαν\" &&\r\n        props.orders.finished_orders.length === 0 ? (\r\n        <React.Fragment>Δεν υπάρχουν ολοκληρωμένες παραγγελίες.</React.Fragment>\r\n      ) : null}\r\n      <List>\r\n        {props.selectedCategory === \"Εισερχόμενες\" &&\r\n        props.orders.pending_orders !== undefined\r\n          ? props.orders.pending_orders.map((order, index) => {\r\n              console.log(order);\r\n              return (\r\n                <ListItem key={index} className={classes.orderRow}>\r\n                  <OrderUserDetailsRow\r\n                    time={order.create_at}\r\n                    total_price={order.pre_discount_price}\r\n                    payment_type={order.payment_type}\r\n                    user_details={order.user_details}\r\n                    ID={order.id}\r\n                    order={order}\r\n                    delivery_time={order.delivery_time}\r\n                    type={props.selectedCategory}\r\n                  />\r\n                  <OrderProductsRow products={order.products} />\r\n                </ListItem>\r\n              );\r\n            })\r\n          : props.selectedCategory === \"Ετοιμάζονται\" &&\r\n            props.orders.accepted_orders !== undefined\r\n          ? props.orders.accepted_orders.map((order, index) => {\r\n              return (\r\n                <ListItem key={index} className={classes.orderRow}>\r\n                  <OrderUserDetailsRow\r\n                    time={order.create_at}\r\n                    total_price={order.pre_discount_price}\r\n                    payment_type={order.payment_type}\r\n                    user_details={order.user_details}\r\n                    ID={order.id}\r\n                    order={order}\r\n                    delivery_time={order.delivery_time}\r\n                    type={props.selectedCategory}\r\n                  />\r\n                  <OrderProductsRow products={order.products} />\r\n                </ListItem>\r\n              );\r\n            })\r\n          : props.selectedCategory === \"Ολοκληρώθηκαν\" &&\r\n            props.orders.finished_orders !== undefined\r\n          ? props.orders.finished_orders.map((order, index) => {\r\n              return (\r\n                <ListItem key={index} className={classes.orderRow}>\r\n                  <OrderUserDetailsRow\r\n                    time={order.create_at}\r\n                    total_price={order.pre_discount_price}\r\n                    payment_type={order.payment_type}\r\n                    user_details={order.user_details}\r\n                    ID={order.id}\r\n                    order={order}\r\n                    type={props.selectedCategory}\r\n                    delivery_time={order.delivery_time}\r\n                  />\r\n                  <OrderProductsRow products={order.products} />\r\n                </ListItem>\r\n              );\r\n            })\r\n          : null}\r\n      </List>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport InnerSidebarCatalog from \"./InnerSidebarCatalog\";\r\nimport ProductCatalog from \"./ProductCatalog\";\r\nimport IngredientsCatalog from \"./IngredientsCatalog\";\r\nimport CommentsCatalog from \"./CommentsCatalog\";\r\nimport OrdersCatalog from \"../Orders/OrdersCatalog\";\r\nimport { orderTabs } from \"../Common/tabs\";\r\nimport PrintComponent from \"../Common/PrintComponent\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // display: \"flex\",\r\n    // height: \"100%\",\r\n    width: \"100%\",\r\n    flexWrap: \"wrap\",\r\n    // flexFlow: \"column\",\r\n    maxHeight: \"110vh\",\r\n\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n    },\r\n    paperSection: {\r\n      backgroundColor: \"black\",\r\n    },\r\n  },\r\n  GridItem: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nexport default function RightContainer(props) {\r\n  const classes = useStyles();\r\n  let selectedCat = \"\";\r\n  let selectedIngreCat = \"\";\r\n  if (props.categories.length > 0) {\r\n    selectedCat = props.categories[0].name;\r\n  }\r\n  // console.log(props.ingredientCategories);\r\n  if (props.ingredientCategories.length > 0) {\r\n    selectedIngreCat = 0;\r\n  }\r\n  const [selectedCategory, changeCategory] = useState(selectedCat);\r\n  // const [selectedOrderCategory, changeOrderCategory] = useState(selectedCat);\r\n  const [selectedIngredientCategory, changeIngredientCategory] =\r\n    useState(selectedIngreCat);\r\n  return (\r\n    <Paper className={classes.root} elevation={0}>\r\n      {props.selectedTab === \"Προϊόντα\" ? (\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            {\" \"}\r\n            <InnerSidebarCatalog\r\n              categories={props.categories}\r\n              selectedCategory={selectedCategory}\r\n              type=\"products\"\r\n              onCategoryChange={(category) => changeCategory(category)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={9}>\r\n            <ProductCatalog\r\n              products={props.products}\r\n              selectedCategory={selectedCategory}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ) : props.selectedTab === \"Υλικά\" ? (\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <InnerSidebarCatalog\r\n              categories={props.ingredientCategories}\r\n              type=\"ingredients\"\r\n              selectedCategory={selectedIngredientCategory}\r\n              onCategoryChange={(category) =>\r\n                changeIngredientCategory(category)\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <IngredientsCatalog\r\n              ingredients={props.ingredients[selectedIngredientCategory]}\r\n              selectedCategory={selectedIngredientCategory}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      ) : props.selectedTab === \"Σχόλια\" ? (\r\n        <Grid container spacing={2}>\r\n          <Grid item className={classes.GridItem}>\r\n            <CommentsCatalog comments={props.comments} />\r\n          </Grid>\r\n        </Grid>\r\n      ) : props.selectedTab === \"Print\" ? (\r\n        <PrintComponent />\r\n      ) : orderTabs.includes(props.selectedTab) ? (\r\n        // <Grid container spacing={2}>\r\n        //   <Grid item xs={3}>\r\n        //     {\" \"}\r\n        //     <InnerSidebarCatalog\r\n        //       type=\"orders\"\r\n        //       selectedCategory={selectedOrderCategory}\r\n        //       onCategoryChange={(category) => changeOrderCategory(category)}\r\n        //     />\r\n        //   </Grid>\r\n        // </Grid>\r\n        <Grid item xs={12}>\r\n          <OrdersCatalog\r\n            selectedCategory={props.selectedTab}\r\n            orders={props.orders}\r\n          />\r\n        </Grid>\r\n      ) : null}\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CircularProgress, Container, Grid } from \"@material-ui/core\";\r\nimport \"../../../css/Pages/adminpage.css\";\r\nimport {\r\n  get_items,\r\n  get_categories,\r\n  get_choices,\r\n  get_ingredients,\r\n} from \"../../../actions/items\";\r\n\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport Sidebar from \"./Components/Sidebar\";\r\nimport { tabs } from \"./Common/tabs\";\r\nimport RightContainer from \"./Components/RightContainer\";\r\nimport { get_comments } from \"../../../actions/comments\";\r\nimport { get_order, get_today_orders } from \"../../../actions/orders\";\r\n\r\nclass AdminMainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.eventSource = new EventSource(\r\n      \"http://localhost:8080/sse/events/admin\"\r\n    );\r\n    this.state = {\r\n      orders: [],\r\n      selected_time: 0,\r\n      selected_tab: \"\",\r\n    };\r\n    this.onSelectChange = this.onSelectChange.bind(this);\r\n    this.changeTab = this.changeTab.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    get_items: PropTypes.func.isRequired,\r\n    get_order: PropTypes.func.isRequired,\r\n    get_categories: PropTypes.func.isRequired,\r\n    get_today_orders: PropTypes.func.isRequired,\r\n    get_choices: PropTypes.func.isRequired,\r\n    get_ingredients: PropTypes.func.isRequired,\r\n    get_comments: PropTypes.func.isRequired,\r\n    orderReducer: PropTypes.object.isRequired,\r\n    adminReducer: PropTypes.object.isRequired,\r\n    productReducer: PropTypes.object.isRequired,\r\n  };\r\n\r\n  changeTab = (tab) => {\r\n    // console.log(tab);\r\n    this.setState({ selected_tab: tab });\r\n  };\r\n\r\n  onSelectChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  recieveOrder(order) {\r\n    let data = JSON.parse(order.data);\r\n    console.log(data);\r\n    this.props.get_order(data);\r\n    this.setState({\r\n      selectedTab: \"Εισερχόμενες\",\r\n    });\r\n  }\r\n\r\n  acceptOrder(order) {\r\n    let data = {\r\n      id: order.id,\r\n      accepted: true,\r\n      time: this.state.selected_time,\r\n      from: order.from,\r\n    };\r\n    axios.post(`http://localhost:8080/sse/acceptorder`, data).then((res) => {\r\n      let orders = this.state.orders;\r\n      const newOrders = orders.filter((ord) => ord.id !== data.id);\r\n      this.setState({ orders: newOrders });\r\n    });\r\n  }\r\n\r\n  rejectOrder(order) {\r\n    let data = {\r\n      id: order.id,\r\n      accepted: false,\r\n      time: 0,\r\n      from: order.from,\r\n    };\r\n    axios.post(`http://localhost:8080/sse/acceptorder`, data).then((res) => {\r\n      let orders = this.state.orders;\r\n      const newOrders = orders.filter((ord) => ord.id !== data.id);\r\n      this.setState({ orders: newOrders });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.eventSource.onmessage = (e) => this.recieveOrder(e);\r\n  }\r\n  componentWillUnmount() {\r\n    console.log(\"im getting outta here\");\r\n  }\r\n  static propTypes = {};\r\n  render() {\r\n    if (this.props.productReducer.isReady === false) {\r\n      this.props.get_items();\r\n      this.props.get_choices();\r\n      this.props.get_ingredients();\r\n      this.props.get_categories();\r\n      if (this.props.adminReducer.orders_loaded_today === false) {\r\n        this.props.get_today_orders();\r\n      }\r\n      if (this.props.adminReducer.loaded === false) {\r\n        this.props.get_comments();\r\n      }\r\n      return (\r\n        <div className=\"loading-div\">\r\n          <CircularProgress disableShrink />{\" \"}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <Container className=\"adminPanel\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={2} className=\"leftColMenu\">\r\n            <Sidebar\r\n              tabs={tabs}\r\n              selectedTab={this.state.selected_tab}\r\n              onSelectChange={(selected_tab) => this.changeTab(selected_tab)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={10} className=\"menuItemContainer\">\r\n            <RightContainer\r\n              ingredients={this.props.productReducer.ingredients}\r\n              ingredientCategories={\r\n                this.props.productReducer.ingredientCategories\r\n              }\r\n              products={this.props.productReducer.products}\r\n              comments={this.props.adminReducer.comments}\r\n              orders={this.props.adminReducer.orders}\r\n              categories={this.props.productReducer.categories}\r\n              selectedTab={this.state.selected_tab}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  productReducer: state.productReducer,\r\n  adminReducer: state.adminReducer,\r\n  orderReducer: state.orderReducer,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  get_items,\r\n  get_categories,\r\n  get_choices,\r\n  get_ingredients,\r\n  get_comments,\r\n  get_order,\r\n  get_today_orders,\r\n})(AdminMainPage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { update_ingredient, delete_item } from \"../../../../actions/items\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nclass SingleIngredientPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      price: 0,\r\n      category: \"\",\r\n      description: \"\",\r\n      ingredient: {},\r\n      display: \"none\",\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    update_ingredient: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired,\r\n  };\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n    const ingredient = {\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      price: parseFloat(this.state.price),\r\n      category: this.state.category,\r\n    };\r\n    // Check if there is any change in the values\r\n    if (this.state.name === \"\") {\r\n      ingredient.name = this.state.ingredient.name;\r\n    }\r\n    if (this.state.description === \"\") {\r\n      ingredient.description = this.state.ingredient.description;\r\n    }\r\n    if (this.state.price === 0) {\r\n      ingredient.price = this.state.ingredient.price;\r\n    }\r\n    if (this.state.category === \"\") {\r\n      ingredient.category = this.state.ingredient.category;\r\n    }\r\n    // TODO change image\r\n    // console.log(ingredient);\r\n    this.props.update_ingredient(\r\n      this.state.ingredient.id,\r\n      ingredient,\r\n      \"update_ingredient\"\r\n    );\r\n  }\r\n\r\n  showNewCat = (bool) => {\r\n    if (bool) {\r\n      this.setState({\r\n        display: \"block\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        display: \"none\",\r\n      });\r\n    }\r\n  };\r\n\r\n  onDelete = () => {\r\n    const id = this.state.item.id;\r\n    const type = \"ingredient\";\r\n    this.props.delete_item(id, type);\r\n  };\r\n\r\n  onChange = (e) => {\r\n    if (e.target.value === \"Create New\") {\r\n      this.showNewCat(true);\r\n    } else {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.setState({ ingredient: this.props.location.state.ingredient });\r\n    // console.log(this.props);\r\n  }\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Ingredient Name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placehodler=\"Enter name\"\r\n            defaultValue={this.state.ingredient.name}\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"description\">\r\n          <Form.Label>Ingredient description</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            defaultValue={this.state.ingredient.description}\r\n            placeholder=\"Enter desc\"\r\n            name=\"description\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"price\">\r\n          <Form.Label>Ingredient price</Form.Label>\r\n          <Form.Control\r\n            type=\"number\"\r\n            step=\"0.01\"\r\n            defaultValue={this.state.ingredient.price}\r\n            autoComplete=\"false\"\r\n            placeholder=\"Enter price\"\r\n            name=\"price\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"category\">\r\n          <Form.Label>Category</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            name=\"category\"\r\n            onChange={this.onChange}\r\n            defaultValue={this.state.ingredient.category}\r\n            required\r\n          >\r\n            {this.props.categories.length > 0 ? (\r\n              this.props.categories.map((category, index) => {\r\n                return <option key={index}>{category}</option>;\r\n              })\r\n            ) : (\r\n              <option key=\"0\">No categories yet</option>\r\n            )}\r\n            <option key=\"100\">Create New</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group\r\n          controlId=\"newcategory\"\r\n          style={{ display: this.state.display }}\r\n        >\r\n          <Form.Label>New Category </Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter new category\"\r\n            name=\"category\"\r\n            onChange={this.onChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Update\r\n        </Button>\r\n        <Button variant=\"danger\" onClick={this.onDelete}>\r\n          DELETE\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n  categories: state.productReducer.ingredientCategories,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  update_ingredient,\r\n  delete_item,\r\n})(SingleIngredientPage);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        sessionStorage.getItem(\"isAuthenticated\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/home\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { clearSnackbar } from \"../../../actions/snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: \"100%\",\r\n//     \"& > * + *\": {\r\n//       marginTop: theme.spacing(2),\r\n//     },\r\n//   },\r\n// }));\r\n\r\nexport default function SuccessSnackbar() {\r\n  const dispatch = useDispatch();\r\n  //   const classes = useStyles();\r\n  const { successSnackbarMessage, successSnackbarOpen } = useSelector(\r\n    (state) => state.uiReducer\r\n  );\r\n\r\n  function handleClose() {\r\n    dispatch(clearSnackbar());\r\n  }\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      open={successSnackbarOpen}\r\n      autoHideDuration={4000}\r\n      onClose={handleClose}\r\n      //   aria-describedby=\"client-snackbar\"\r\n      //   message={\r\n      //     <span id=\"client-snackbar\">\r\n      //       <Icon>check_circle</Icon>\r\n      //       {successSnackbarMessage}\r\n      //     </span>\r\n      //   }\r\n      //   action={[\r\n      //     <IconButton\r\n      //       key=\"close\"\r\n      //       aria-label=\"close\"\r\n      //       color=\"inherit\"\r\n      //       onClick={handleClose}\r\n      //     >\r\n      //       <Icon>close</Icon>\r\n      //     </IconButton>,\r\n      //   ]}\r\n    >\r\n      <Alert onClose={handleClose} severity=\"success\">\r\n        {successSnackbarMessage}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { clearSnackbar } from \"../../../actions/snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: \"100%\",\r\n//     \"& > * + *\": {\r\n//       marginTop: theme.spacing(2),\r\n//     },\r\n//   },\r\n// }));\r\n\r\nexport default function InfoSnackbar() {\r\n  const dispatch = useDispatch();\r\n  //   const classes = useStyles();\r\n  const { infoSnackbarMessage, infoSnackbarOpen } = useSelector(\r\n    (state) => state.uiReducer\r\n  );\r\n\r\n  function handleClose() {\r\n    dispatch(clearSnackbar());\r\n  }\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      open={infoSnackbarOpen}\r\n      autoHideDuration={4000}\r\n      onClose={handleClose}\r\n      //   aria-describedby=\"client-snackbar\"\r\n      //   message={\r\n      //     <span id=\"client-snackbar\">\r\n      //       <Icon>check_circle</Icon>\r\n      //       {successSnackbarMessage}\r\n      //     </span>\r\n      //   }\r\n      //   action={[\r\n      //     <IconButton\r\n      //       key=\"close\"\r\n      //       aria-label=\"close\"\r\n      //       color=\"inherit\"\r\n      //       onClick={handleClose}\r\n      //     >\r\n      //       <Icon>close</Icon>\r\n      //     </IconButton>,\r\n      //   ]}\r\n    >\r\n      <Alert onClose={handleClose} severity=\"info\">\r\n        {infoSnackbarMessage}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { clearSnackbar } from \"../../../actions/snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function ErrorSnackbar() {\r\n  const dispatch = useDispatch();\r\n  //   const classes = useStyles();\r\n  const { errorSnackbarMessage, errorSnackbarOpen } = useSelector(\r\n    (state) => state.uiReducer\r\n  );\r\n\r\n  function handleClose() {\r\n    dispatch(clearSnackbar());\r\n  }\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"left\",\r\n      }}\r\n      open={errorSnackbarOpen}\r\n      autoHideDuration={4000}\r\n      onClose={handleClose}\r\n      //   aria-describedby=\"client-snackbar\"\r\n      //   message={\r\n      //     <span id=\"client-snackbar\">\r\n      //       <Icon>check_circle</Icon>\r\n      //       {successSnackbarMessage}\r\n      //     </span>\r\n      //   }\r\n      //   action={[\r\n      //     <IconButton\r\n      //       key=\"close\"\r\n      //       aria-label=\"close\"\r\n      //       color=\"inherit\"\r\n      //       onClick={handleClose}\r\n      //     >\r\n      //       <Icon>close</Icon>\r\n      //     </IconButton>,\r\n      //   ]}\r\n    >\r\n      <Alert onClose={handleClose} severity=\"error\">\r\n        {errorSnackbarMessage}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Hello there from our team</h1>\r\n        <p>Unfortunatly this page does not exist</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NotFound;\r\n","import { Checkbox, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Modal, Col, Form } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { update_choice } from \"../../../../actions/items\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass SingleChoicePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: 0,\r\n      name: \"\",\r\n      desctription: \"\",\r\n      options: [],\r\n      optionName: \"\",\r\n      optionPrice: 0,\r\n      show: false,\r\n      multiple: false,\r\n      required: false,\r\n    };\r\n    this.removeOption = this.removeOption.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleSaveOption = this.handleSaveOption.bind(this);\r\n    this.onSumbit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    let choice = this.props.location.state.choice;\r\n    this.setState({\r\n      id: choice.id,\r\n      name: choice.name,\r\n      description: choice.description,\r\n      options: choice.options,\r\n      multiple: choice.multiple,\r\n      required: choice.required,\r\n    });\r\n  }\r\n\r\n  static propTypes = {\r\n    update_choice: PropTypes.func.isRequired,\r\n  };\r\n\r\n  removeOption = (index) => {\r\n    this.setState({\r\n      options: this.state.options.filter((s, sindex) => sindex !== index),\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleSaveOption = () => {\r\n    const option = {\r\n      name: this.state.optionName,\r\n      price: parseFloat(this.state.optionPrice),\r\n    };\r\n    this.setState((prevState) => ({\r\n      options: [...prevState.options, option],\r\n    }));\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const choice = {\r\n      id: this.state.id,\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      required: this.state.required,\r\n      multiple: this.state.multiple,\r\n      options: this.state.options,\r\n    };\r\n    // console.log(choice);\r\n    this.props.update_choice(choice.id, choice);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CreateChoiceForm\">\r\n        <Form onSubmit={this.onSumbit}>\r\n          <Form.Group controlId=\"choiceName\">\r\n            <Form.Label>Choice Name</Form.Label>\r\n            <Form.Control\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={this.state.name}\r\n              placeholder=\"Enter name\"\r\n              required\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"choiceDesc\">\r\n            <Form.Label>Choice Description</Form.Label>\r\n            <Form.Control\r\n              name=\"description\"\r\n              type=\"text\"\r\n              value={this.state.description}\r\n              placeholder=\"Enter description\"\r\n              required\r\n              onChange={this.onChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"choiceMultiple\">\r\n            <Form.Label>Multiple</Form.Label>\r\n            <Checkbox\r\n              checked={this.state.multiple}\r\n              onChange={(e) =>\r\n                this.setState({ multiple: !this.state.multiple })\r\n              }\r\n              color=\"primary\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"choiceRequired\">\r\n            <Form.Label>Required</Form.Label>\r\n            <Checkbox\r\n              checked={this.state.required}\r\n              onChange={(e) =>\r\n                this.setState({ required: !this.state.required })\r\n              }\r\n              color=\"primary\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Label>Choice Options</Form.Label>\r\n          <Form.Group controlId=\"choiceOptions\">\r\n            <List dense>\r\n              {this.state.options.map((opt, key) => {\r\n                return (\r\n                  <ListItem key={key}>\r\n                    <ListItemText primary={`${opt.name} : ${opt.price}`} />{\" \"}\r\n                    <Button onClick={() => this.removeOption(key)}>X</Button>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Button variant=\"primary\" onClick={this.handleShow}>\r\n              Add option\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update choice\r\n            </Button>\r\n          </Form.Row>\r\n        </Form>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Option Values</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form.Row>\r\n              <Form.Group as={Col} md={6}>\r\n                <Form.Label>Value</Form.Label>\r\n                <Form.Control\r\n                  id=\"optionName\"\r\n                  name=\"optionName\"\r\n                  type=\"text\"\r\n                  placeholer=\"enter name\"\r\n                  onChange={this.onChange}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md={6}>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  id=\"optionPrice\"\r\n                  name=\"optionPrice\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  placeholer=\"enter price\"\r\n                  onChange={this.onChange}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleSaveOption}>\r\n              Save Option\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.userReducer.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { update_choice })(SingleChoicePage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import TextData from \"./TextData\";\r\n\r\nclass TextPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n    };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.match.params) {\r\n      return {\r\n        title: props.match.params.type,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state.title}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(TextPage);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport \"../../../../css/Pages/adminpage.css\";\r\nimport { approve_comment, reject_comment } from \"../../../../actions/comments\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nclass AllComments extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      comments: [],\r\n      hasLoaded: false,\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    approve_comment: PropTypes.func.isRequired,\r\n    reject_comment: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.hasLoaded === false) {\r\n      let comments = [];\r\n\r\n      axios.get(\"http://localhost:8080/comments/all\").then((res) => {\r\n        console.log(res);\r\n        comments = res.data.data;\r\n        this.setState({\r\n          comments: comments,\r\n          hasLoaded: true,\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    if (this.state.hasLoaded === false) {\r\n      return (\r\n        <div>\r\n          <div className=\"loading-div\">\r\n            <CircularProgress disableShrink />{\" \"}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.comments.length > 0 ? (\r\n          <List>\r\n            {this.state.comments.map((comment, id) => {\r\n              return (\r\n                <ListItem\r\n                  key={id}\r\n                  alignItems=\"flex-start\"\r\n                  className=\"comment-list-item\"\r\n                >\r\n                  <Paper>\r\n                    <ListItemText\r\n                      primary={\r\n                        <React.Fragment>\r\n                          {comment.text}\r\n                          <br />\r\n                          {comment.rate}/5\r\n                          <br />\r\n                          <Button>View Details</Button>\r\n                        </React.Fragment>\r\n                      }\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          {comment.answered === false ? (\r\n                            <React.Fragment>\r\n                              <Button\r\n                                onClick={() =>\r\n                                  this.props.approve_comment(comment.id)\r\n                                }\r\n                              >\r\n                                Accept\r\n                              </Button>\r\n                              <Button\r\n                                onClick={() =>\r\n                                  this.props.reject_comment(comment.id)\r\n                                }\r\n                              >\r\n                                Reject\r\n                              </Button>\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            <span>\r\n                              {comment.approved ? (\r\n                                <span>approved</span>\r\n                              ) : (\r\n                                <span>rejected</span>\r\n                              )}\r\n                            </span>\r\n                          )}\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </Paper>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        ) : (\r\n          <span>No comments yet</span>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, { approve_comment, reject_comment })(\r\n  AllComments\r\n);\r\n","import React, { Component } from \"react\";\n// CSS\nimport \"../css/App/App.css\";\n// import \"../css/Panel/Sidebar.css\";\n\n// Routing\nimport {\n  Route,\n  // BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n// import { createBrowserHistory } from \"history\";\n\n// Pages\n// import UsersPage from \"./Sections/Users/\nimport CreatePage from \"./Sections/Create/CreatePage\";\nimport StatsPage from \"./Sections/Admin/Stats/StatsPage\";\n// import OrdersPage from \"./Sections/Order/OrdersPage\";\n\nimport ItemsPage from \"./Sections/View/ItemsPage\";\nimport HomePage from \"./Sections/Home/HomePage\";\nimport AllUsersPage from \"./NotUsing/users/AllUsersPage\";\nimport OrderMainPage from \"./Sections/Order/OrderMainPage\";\nimport MainPage from \"./Sections/Users/MainPage\";\nimport SingleItemPage from \"./Sections/View/Products/SingleItemPage\";\nimport PreCompleteOrderPage from \"./Sections/Order/PreCompleteOrderPage\";\n\n// Layout\nimport Header from \"./Layout/Header\";\nimport Footer from \"./Layout/Footer\";\nimport LogRegModal from \"./Modals/LogRegModal\";\n\n// Socket.io\n// import { connect, sendMsg } from \"../socket\";\n\n// redux\n\n// Error/Alerts\n// import { Provider as AlertProvider } from \"react-alert\";\n// import AlertTemplate from \"react-alert-template-basic\";\n\nimport { Container } from \"react-bootstrap\";\nimport UserOrders from \"./Sections/Users/UserOrders\";\nimport UserAddress from \"./Sections/Users/UserAddress\";\nimport UserRatings from \"./Sections/Users/UserRatings\";\nimport AdminMainPage from \"./Sections/Admin/AdminMainPage\";\nimport SingleIngredientPage from \"./Sections/View/Ingredients/SingleIngredientPage\";\nimport PrivateRoute from \"./Sections/Common/PrivateRoute\";\nimport SuccessSnackbar from \"./Logging/SnackBars/SuccessSnackbar\";\nimport InfoSnackbar from \"./Logging/SnackBars/InfoSnackbar\";\nimport ErrorSnackbar from \"./Logging/SnackBars/ErrorSnackbar\";\nimport NotFound from \"./Layout/NotFound\";\nimport SingleChoicePage from \"./Sections/View/Choices/SingleChoicePage\";\nimport TextPage from \"./Sections/Common/TextPage\";\nimport AllComents from \"./Sections/Admin/Comments/AllComents\";\n\n// const alertOptions = {\n//   timeout: 3000,\n//   position: \"top center\",\n// };\n\n// const customHistory = createBrowserHistory();\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: \"\",\n      showModal: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.showModal = this.showModal.bind(this);\n    // this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  showModal = (e) => {\n    this.setState({\n      showModal: !this.state.showModal,\n    });\n  };\n\n  componentDidMount() {}\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SuccessSnackbar />\n        <InfoSnackbar />\n        <ErrorSnackbar />\n        {/* <Router history={customHistory}> */}\n        <Header onClose={this.showModal} />\n        <LogRegModal onClose={this.showModal} show={this.state.showModal} />\n        {/* <AlertsOverlay /> */}\n        <Container fluid id=\"Panel\">\n          <Switch>\n            {/* {routes.map((route, i) => (\n                  <RouteWithSubRoutes key={i} {...route} />\n                ))} */}\n            {/* PUBLIC ROUTES */}\n            <Route path=\"/home\" component={HomePage} />\n            <Route path=\"/items\" component={ItemsPage} />\n            <Route path=\"/ingredients\" component={ItemsPage} />\n            <Route path=\"/choices\" component={ItemsPage} />\n            <Route exact path=\"/\">\n              <Redirect to=\"/home\" />\n            </Route>\n            <Route exact path=\"/order\" component={OrderMainPage} />\n            <Route path=\"/pre_complete/:id\" component={PreCompleteOrderPage} />\n            <Route path=\"/search/:string\" component={OrderMainPage} />\n            {/* ADMIN ROUTES */}\n            <Route path=\"/admin\" component={AdminMainPage} />\n            {/* <Route path=\"/orders\" component={OrdersPage} /> */}\n            {/* <Route path=\"/users\" component={UsersPage} /> */}\n\n            <Route path=\"/single_item\" component={SingleItemPage} />\n            <Route path=\"/single_ingredient\" component={SingleIngredientPage} />\n            <Route path=\"/single_choice\" component={SingleChoicePage} />\n            <Route path=\"/document/:type\" component={TextPage} />\n            <Route path=\"/comments\" component={AllComents} />\n            {/* PRIVATE ROUTES */}\n            <PrivateRoute path=\"/stats/:id\" component={StatsPage} />\n            <PrivateRoute path=\"/create_item\" component={CreatePage} />\n            <PrivateRoute path=\"/all_users\" component={AllUsersPage} />\n            {/* <Route path=\"/order_menu\" component={OrderMenuPage} /> */}\n            <PrivateRoute exact path=\"/account\" component={MainPage} />\n            <PrivateRoute exact path=\"/account/orders\" component={UserOrders} />\n            <PrivateRoute\n              exact\n              path=\"/account/addresses\"\n              component={UserAddress}\n            />\n            <PrivateRoute\n              exact\n              path=\"/account/ratings\"\n              component={UserRatings}\n            />\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </Container>\n        <Footer className=\"footer\" />\n        {/* </Router> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  GET_CATEGORIES,\r\n  GET_ITEMS,\r\n  GET_INGREDIENTS,\r\n  CREATE_CATEGORY,\r\n  CREATE_ITEM,\r\n  CREATE_INGREDIENT,\r\n  DELETE_PRODUCT,\r\n  DELETE_CATEGORY,\r\n  DELETE_INGREDIENT,\r\n  UPDATE_INGREDIENT,\r\n  GET_CHOICES,\r\n  CREATE_CHOICE,\r\n  UPDATE_ITEM,\r\n} from \"../actions/actions\";\r\n\r\nconst defaultState = {\r\n  products: [],\r\n  product: {},\r\n  categories: [],\r\n  ingredients: [],\r\n  ingredientCategories: [],\r\n  choices: [],\r\n  isReady: false,\r\n};\r\n\r\nconst productReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        products: action.products,\r\n        isReady: true,\r\n      };\r\n    case GET_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: action.categories,\r\n      };\r\n    case GET_INGREDIENTS:\r\n      let grouped_ingredients = [];\r\n      let grouped;\r\n      var _ = require(\"lodash\");\r\n      if (action.ingredients.length > 0) {\r\n        grouped = _.groupBy(action.ingredients, \"category\");\r\n        for (var i in grouped) {\r\n          grouped_ingredients.push(grouped[i]);\r\n        }\r\n      }\r\n      // console.log(grouped_ingredients);\r\n      return {\r\n        ...state,\r\n        ingredients: grouped_ingredients,\r\n        ingredientCategories: action.categories,\r\n      };\r\n    case GET_CHOICES:\r\n      return {\r\n        ...state,\r\n        choices: action.choices,\r\n      };\r\n    case CREATE_ITEM:\r\n      return {\r\n        ...state,\r\n        products: [...state.products, action.new_product],\r\n        isReady: false,\r\n      };\r\n    case CREATE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: [...state.categories, action.category],\r\n        isReady: false,\r\n      };\r\n    case CREATE_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: [...state.ingredients, action.ingredients],\r\n        isReady: false,\r\n      };\r\n    case CREATE_CHOICE:\r\n      return {\r\n        ...state,\r\n        choices: [...state.choices, action.choice],\r\n        isReady: false,\r\n      };\r\n    case UPDATE_ITEM:\r\n      let newItems = [...state.products];\r\n\r\n      var indexOfItemToUpdate = 0;\r\n      for (i in newItems) {\r\n        if (newItems[i].id === action.new_item.id) {\r\n          indexOfItemToUpdate = i;\r\n        }\r\n      }\r\n      newItems[indexOfItemToUpdate] = action.new_item;\r\n      console.log(newItems);\r\n      return {\r\n        ...state,\r\n        products: newItems,\r\n      };\r\n    case DELETE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: [\r\n          ...state.products.filter((prod) => prod !== action.delete_product),\r\n        ],\r\n        isReady: false,\r\n      };\r\n    case DELETE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        categories: [\r\n          ...state.categories.filter(\r\n            (categ) => categ !== action.delete_category\r\n          ),\r\n        ],\r\n        isReady: false,\r\n      };\r\n    case DELETE_INGREDIENT:\r\n      return {\r\n        ...state,\r\n        ingredients: [\r\n          ...state.ingredients.filter(\r\n            (ingred) => ingred !== action.delete_ingredient\r\n          ),\r\n        ],\r\n        isReady: false,\r\n      };\r\n    case UPDATE_INGREDIENT:\r\n      let newIngredients = [...state.ingredients];\r\n\r\n      var indexOfIngredientToUpdate_outer = 0;\r\n      var indexOfIngredientToUpdate_inner = 0;\r\n      for (i in newIngredients) {\r\n        for (var j in newIngredients[i]) {\r\n          if (newIngredients[i][j].id === action.new_ingredient.id) {\r\n            indexOfIngredientToUpdate_outer = i;\r\n            indexOfIngredientToUpdate_inner = j;\r\n          }\r\n        }\r\n      }\r\n      newIngredients[indexOfIngredientToUpdate_outer][\r\n        indexOfIngredientToUpdate_inner\r\n      ] = action.new_ingredient;\r\n      console.log(action.new_ingredient);\r\n      return {\r\n        ...state,\r\n        ingredients: newIngredients,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default productReducer;\r\n","import {\r\n  GET_USER,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  UPDATE_USER,\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  LOGIN_FAIL,\r\n  SUBSCRIBE_USER,\r\n  UNSUBSCRIBE_USER,\r\n} from \"../actions/actions\";\r\n\r\nconst defaultState = {\r\n  token: sessionStorage.getItem(\"token\"),\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  hasLoaded: false,\r\n  user: null,\r\n  error: \"\",\r\n};\r\n\r\nconst userReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: \"\",\r\n      };\r\n    case SUBSCRIBE_USER:\r\n      return {\r\n        ...state,\r\n      };\r\n    case UNSUBSCRIBE_USER:\r\n      return {\r\n        ...state,\r\n      };\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        hasLoaded: false,\r\n        error: \"\",\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        hasLoaded: true,\r\n        error: \"\",\r\n      };\r\n    case USER_LOADED:\r\n      sessionStorage.setItem(\"isAuthenticated\", true);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.user,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      sessionStorage.setItem(\"isAuthenticated\", true);\r\n      sessionStorage.setItem(\"token\", action.token);\r\n      sessionStorage.setItem(\"refreshToken\", action.refresh_token);\r\n      sessionStorage.setItem(\"userID\", action.user.id);\r\n      // sessionStorage.setItem(\"isAuthenticated\", true);\r\n      // console.log(action);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.user,\r\n        error: \"\",\r\n      };\r\n    case LOGIN_FAIL:\r\n      // console.log(action);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: action.error,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n      sessionStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.user,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      sessionStorage.removeItem(\"token\");\r\n      sessionStorage.removeItem(\"isAuthenticated\");\r\n      sessionStorage.removeItem(\"userID\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        error: \"\",\r\n        hasLoaded: false,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n      sessionStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: null,\r\n        error: \"\",\r\n        hasLoaded: false,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import {\r\n  SEND_ORDER,\r\n  ORDER_DECLINED,\r\n  ORDER_ACCEPTED,\r\n  ADD_ITEM,\r\n  UPDATE_ORDER,\r\n  UPDATE_CART,\r\n  CLEAR_REDUCER,\r\n  EMPTY_CART,\r\n} from \"../actions/actions\";\r\n\r\nconst defaultState = {\r\n  order: {},\r\n  sent: false,\r\n  pending: false,\r\n  accepted: false,\r\n  recieved: false,\r\n  timeToDelivery: 0,\r\n  products: [],\r\n  totalPrice: 0,\r\n};\r\n\r\nconst orderReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SEND_ORDER:\r\n      return {\r\n        ...state,\r\n        sent: true,\r\n        pending: true,\r\n        accepted: false,\r\n      };\r\n    case ORDER_ACCEPTED:\r\n      return {\r\n        ...state,\r\n        sent: true,\r\n        accepted: true,\r\n        recieved: true,\r\n        timeToDelivery: action.time,\r\n        pending: false,\r\n      };\r\n    case CLEAR_REDUCER:\r\n      return {\r\n        order: {},\r\n        sent: false,\r\n        pending: false,\r\n        accepted: false,\r\n        recieved: false,\r\n        products: [],\r\n        totalPrice: 0,\r\n      };\r\n    case ORDER_DECLINED:\r\n      return {\r\n        ...state,\r\n        sent: true,\r\n        accepted: false,\r\n      };\r\n    case ADD_ITEM:\r\n      console.log(action);\r\n      let newProducts = [...state.products, action.product];\r\n      let newPrice = state.totalPrice + action.totalPrice;\r\n      return {\r\n        ...state,\r\n        products: newProducts,\r\n        totalPrice: newPrice,\r\n      };\r\n    case UPDATE_CART:\r\n      return {\r\n        ...state,\r\n        products: action.new_order,\r\n        totalPrice: action.total_price,\r\n      };\r\n    case UPDATE_ORDER:\r\n      return {\r\n        ...state,\r\n      };\r\n    case EMPTY_CART:\r\n      return {\r\n        order: {},\r\n        sent: false,\r\n        pending: false,\r\n        accepted: false,\r\n        products: [],\r\n        totalPrice: 0,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default orderReducer;\r\n","import {\r\n  ADD_ALERT,\r\n  GET_ERRORS,\r\n  GET_MESSAGE,\r\n  REMOVE_ALERT,\r\n} from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n  statusText: \"\",\r\n  status: null,\r\n  message: \"\",\r\n  alerts: [],\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return {\r\n        status: action.status,\r\n        statusText: action.statusText,\r\n        message: action.message,\r\n      };\r\n    case GET_MESSAGE:\r\n      return {\r\n        message: action.message,\r\n      };\r\n    case ADD_ALERT:\r\n      return {\r\n        ...state,\r\n        alerts: [...state.alerts, action.payload],\r\n      };\r\n    case REMOVE_ALERT:\r\n      return state.alerts.filter((alert) => alert.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  SNACKBAR_CLEAR,\r\n  SNACKBAR_ERROR,\r\n  SNACKBAR_INFO,\r\n  SNACKBAR_SUCCESS,\r\n} from \"../actions/actions\";\r\n\r\nconst initialState = {\r\n  successSnackbarOpen: false,\r\n  errorSnackbarOpen: false,\r\n  infoSnackbarOpen: false,\r\n  successSnackbarMessage: \"\",\r\n  errorSnackbarMessage: \"\",\r\n  infoSnackbarMessage: \"\",\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SNACKBAR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        successSnackbarOpen: true,\r\n        successSnackbarMessage: action.message,\r\n      };\r\n    case SNACKBAR_CLEAR:\r\n      return {\r\n        successSnackbarOpen: false,\r\n        infoSnackbarOpen: false,\r\n        errorSnackbarOpen: false,\r\n      };\r\n    case SNACKBAR_ERROR:\r\n      return {\r\n        ...state,\r\n        errorSnackbarOpen: true,\r\n        errorSnackbarMessage: action.message,\r\n      };\r\n    case SNACKBAR_INFO:\r\n      return {\r\n        ...state,\r\n        infoSnackbarOpen: true,\r\n        infoSnackbarMessage: action.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CREATE_ROOM_SUCCESS,\r\n  JOIN_ROOM_SUCCESS,\r\n  SET_USERNAME,\r\n} from \"../actions/actions\";\r\n\r\nconst defaultState = {\r\n  room: null,\r\n  chatLog: [],\r\n  username: null,\r\n};\r\n\r\nconst webSocketReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case CREATE_ROOM_SUCCESS:\r\n      state.room = action.payload;\r\n      break;\r\n\r\n    case JOIN_ROOM_SUCCESS:\r\n      state.room = action.payload;\r\n      break;\r\n\r\n    case SET_USERNAME:\r\n      state.username = action.username;\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default webSocketReducer;\r\n","import {\r\n  APPROVE_COMMENT,\r\n  COMMENT_ANSWERED,\r\n  GET_COMMENTS,\r\n  REJECT_COMMENT,\r\n  GET_ORDER,\r\n  ACCEPT_ORDER,\r\n  TODAY_ORDERS,\r\n  COMPLETE_ORDER,\r\n} from \"../actions/actions\";\r\n\r\nconst defaultState = {\r\n  comments: [],\r\n  loaded: false,\r\n  orders_loaded_today: false,\r\n  orders: {\r\n    pending_orders: [],\r\n    accepted_orders: [],\r\n    finished_orders: [],\r\n  },\r\n};\r\n\r\nconst adminReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GET_COMMENTS:\r\n      return {\r\n        ...state,\r\n        comments: action.comments,\r\n        loaded: true,\r\n      };\r\n    case APPROVE_COMMENT:\r\n      let newComments = [...state.comments];\r\n      for (var i in newComments) {\r\n        if (newComments[i].id === action.comment.id) {\r\n          newComments[i] = action.comment;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        comments: newComments,\r\n      };\r\n    case REJECT_COMMENT:\r\n      let newComments_r = [...state.comments];\r\n      for (i in newComments_r) {\r\n        if (newComments_r[i].id === action.comment.id) {\r\n          newComments_r[i] = action.comment;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        comments: newComments_r,\r\n      };\r\n    case COMMENT_ANSWERED:\r\n      let newAnswerComments = [...state.comments];\r\n      for (i in newAnswerComments) {\r\n        if (newAnswerComments[i].id === action.comment.id) {\r\n          newAnswerComments[i] = action.comment;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        comments: newAnswerComments,\r\n      };\r\n    case GET_ORDER:\r\n      // Append the new order\r\n      // to the pending orders\r\n      let newPendingOrders = state.orders;\r\n      newPendingOrders.pending_orders.push(action.new_order.order);\r\n      return {\r\n        ...state,\r\n        orders: newPendingOrders,\r\n      };\r\n    case ACCEPT_ORDER:\r\n      // Remove order from pending\r\n      // append it to accepted\r\n      console.log(action);\r\n      console.log(action.accepted_id);\r\n      let newAcceptedOrders = state.orders;\r\n      for (i in newAcceptedOrders.pending_orders) {\r\n        if (newAcceptedOrders.pending_orders[i].id === action.accepted_id) {\r\n          newAcceptedOrders.pending_orders[i].delivery_time = action.time;\r\n          newAcceptedOrders.accepted_orders.push(\r\n            newAcceptedOrders.pending_orders[i]\r\n          );\r\n        }\r\n      }\r\n      newAcceptedOrders.pending_orders =\r\n        newAcceptedOrders.pending_orders.filter(\r\n          (order) => order.id !== action.accepted_id\r\n        );\r\n\r\n      return {\r\n        ...state,\r\n        orders: newAcceptedOrders,\r\n      };\r\n    case COMPLETE_ORDER:\r\n      // Remove order from pending\r\n      // append it to accepted\r\n      console.log(action.completed_id);\r\n      let newCompletedOrders = state.orders;\r\n      for (i in newCompletedOrders.accepted_orders) {\r\n        if (newCompletedOrders.accepted_orders[i].id === action.completed_id) {\r\n          newCompletedOrders.finished_orders.push(\r\n            newCompletedOrders.accepted_orders[i]\r\n          );\r\n        }\r\n      }\r\n      newCompletedOrders.accepted_orders =\r\n        newCompletedOrders.accepted_orders.filter(\r\n          (order) => order.id !== action.completed_id\r\n        );\r\n      return {\r\n        ...state,\r\n        orders: newCompletedOrders,\r\n      };\r\n    case TODAY_ORDERS:\r\n      let newTodayOrders = state.orders;\r\n      newTodayOrders.accepted_orders = [];\r\n      newTodayOrders.pending_orders = [];\r\n      newTodayOrders.finished_orders = [];\r\n      for (i in action.orders) {\r\n        if (action.orders[i].completed) {\r\n          newTodayOrders.finished_orders.push(action.orders[i]);\r\n        } else {\r\n          if (action.orders[i].accepted || action.orders[i].canceled) {\r\n            newTodayOrders.accepted_orders.push(action.orders[i]);\r\n          } else {\r\n            newTodayOrders.pending_orders.push(action.orders[i]);\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        orders: newTodayOrders,\r\n        orders_loaded_today: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default adminReducer;\r\n","import productReducer from \"./productReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport orderReducer from \"./orderReducer\";\r\nimport errorReducer from \"./errors\";\r\nimport uiReducer from \"./uiReducer\";\r\nimport webSocketReducer from \"./webSocketReducer\";\r\nimport adminReducer from \"./adminReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  productReducer,\r\n  userReducer,\r\n  orderReducer,\r\n  errorReducer,\r\n  uiReducer,\r\n  webSocketReducer,\r\n  adminReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import { persistStore, persistReducer } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n// import storageSession from \"redux-persist/lib/storage/session\";\r\n\r\nconst CreateStore = () => {\r\n  const initialState = {};\r\n\r\n  const middleware = [thunk];\r\n\r\n  // const persistConfig = {\r\n  //   key: \"root\",\r\n  //   storage,\r\n  //   whiteList: [\"orderReducer\"],\r\n  //   blackList: [\"userReducer\"],\r\n  // };\r\n\r\n  // const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)),\r\n    +window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\n  // let persistor = persistStore(store);\r\n  // Persist on hot reaload\r\n  // if (module.hot) {\r\n  //   module.hot.accept(\"./reducers/index\", () => {\r\n  //     const nextReducer = require(\"./reducers/index\").default;\r\n\r\n  //     store.replaceReducer(nextReducer);\r\n  //   });\r\n  // }\r\n\r\n  // return { store, persistor };\r\n  return store;\r\n};\r\n\r\nexport default CreateStore();\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <PersistGate loading={null} persistor={store.persistor}> */}\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n    {/* </PersistGate> */}\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}